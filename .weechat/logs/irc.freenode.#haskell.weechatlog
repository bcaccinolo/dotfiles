2013-07-24 09:00:47	-->	benoit (~benoit@130.185.130.212) has joined #haskell
2013-07-24 09:00:47	--	Topic for #haskell is "http://www.haskell.org | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | Administrative issues: #haskell-ops | Hackage down? http://hdiff.luite.com"
2013-07-24 09:00:47	--	Topic set by mauke (~mauke@p3m/member/mauke) on Wed, 17 Jul 2013 13:52:43
2013-07-24 09:00:47	--	Nicks #haskell: [@ChanServ @Igloo [[zzz]] [edwtjo] \q __knock__ __main__ _flow_ `0660 `^_^v `bps a11235 ab9rf acfoltzer acidi Adeon adimit_away adinapoli Adios adlan adnap_ aford aformeny agundry ahf ahihi akahn akiress akraut albel727 alcz_ aleator_ alexander__b AleXoundOS alexs alpounet Amadiro amathew amosr anachron AndChat| anders^^_ andrewsw anildigital aninhumer anon1231 AntiSpamMeta anyfoo apaku Apocalisp araujo arbn arcatan args[0] aristid Ark1 arkeet arkx arnsholt asante asjo` astropirate aszlig ataj_ Athas augur averell_ away_sondr3 Axman6 b2coutts b52 b_jonas banister`sleep banjiewen barrucadu bartavelle Baughn bb010g bben bbloom_ bcoppens bd_ bduc bel3atar Belgarion0 benoit benprew bentrevor bergmark betawaffle bezik bgamari bholst_ Bigcheese BigEndian bigs birkenfeld biscarch bitonic bitraten blakesmith BlastHardcheese Blazeix bleda Blkt blz37 BMeph_ bobry bobthenameless_ bogdanp bogner_ Boney boothead Boreeas bqp brainproxy brainwash Brando753 brandonw brendan brett BrianHV brianloveswords brisbin_ brixen Bryan792 bscarlet bstrie buetow burp_ Bwild bxc ByronJohnson bz c_14 c_wraith cads cajla Cale caligula__ canar canissimia canta capisce_ carter_away catwiesel ccasin ccxCZ cdidd cdk centrinia Cerise charlesofarrell_ chatsiri_ cheezey chickenflu ChongLi Chousuke chrisbuchholz chrisdone chrisdotcode_ chrra ciaranm CindyLinz cjay clampz ClaudiusMaximus Clint clog cmsd2 codesoup cods colah_ colegleason compnaion_cbue confound_ copton corkexaminer CosmicRay Counter-Strike cow-orker cronject cross cruxeternus Cryovat csakatoku cschneid cseder cynick dabradley dan_johnsin danr danvet dario^CIP Darkflux DarkFox Dashkal davd davean davorak_ davorb-cellphone dcoutts deavid Deewiant def-lkb_ deggis demolithion destiny_ DexterLB dextrey DigitalKiwi dilinger dimday divarvel dixie_ djahandarie djcoin dju dlundy dmarker dmj dmp1ce dmwit dogmaT dolio doomlord doshitan dpwright dqd Draconx Draggor drbean DrCode drdo dreixel_ drewr drmegahertz dropdrive DrSyzygy dsantiago dsfox1 dsirenko dsp_ DT` duairc duikboot dumbhat dustinswan DustyDingo Dybber dyreshark dysinger eacameron EarlGray^^ earthy ecube edkk Edoxile eduardo_ edunham edwardk ehamberg ehd ejls eL_Bart0 eldariof electrogeek elgot Eliel Elision_ elliott ELLIOTTCABLE em Enigmagic ent Entroacceptor epsylon epta ericmj Eridius ernst ethercrow etrepum Excureo eyck Ezku f8l fabjan fall_ farn fayanne63 fayden felipe_ fergusnoble fgomez_ fihi09``` fijimunkii fikusz finnrobi FireFly flebron floatingman flori flowsnake flux folone fosky franksh FreeFull frontend1oader froztbyte fry fryguybob ft Fubar^ Fuco Fuuzetsu FUZxxl fxrh gbarboza gbeshers gbluma gdeest gds geal geekosaur gemelen genisage gentleben geoffh gereedy ggherdov ggreg ghorn Ghoul_ gienah Gilly gnuvince goldkatze Gothmog_ go|dfish gpampara Gracenotes greymalkin gridaphobe gseitz_ gspr guerrilla Guest1103 Guest60325 Guest66280 h_chiro_ haasn hackagebot Hafydd HalfWayM1n hallettj hamilyon hamishmack hape01 Hardolaf harovali heath Heero helgikrs hiratara hiroakip hiyakashi honza horlicks hpaste hpc hpd hvr hwiersma ibid idnar idntfy2 ido idoru inarru inr insejn int-e integral Internet13 ion ipuustin iri`away Irtopiste isenmann ISF isomorphic isomorphismes iteratee iulian ivan\ ivan` ixian Jaak jackhill jaimef jamwt jang1 janinge janne- jaspervd1 jayne jbauman_ jcp jdhutah jdoles jdoliner Jello_Raptor JesuZ jix jkpl jlaire jlamothe jlewis jliikka jlouis jmcarthur jmcarthur_mobile jml joachifm joar jobstijl jodaro joelteon joeyh johanbev JohnBat26 johnw joneshf-laptop joneshf-work Jonte joogi joshc JPohlman1 jrib jroesch jrslepak jssanders JuanDaugherty juhp julmae junsuijin JustAPerson justinls jyyou jzelinskie k0ral_ Kabaka kaictl kamatsu KaneTW kaol kappabot kartlos kav kaw kazimir42 kcj Ke kerrick Khady Khisanth killy9999 kingugo kini Kinnison Kiryx KitB kloeri kludge` klugez kmels Kneiva_ knyppeldynan knz koala_man kolmodin koninkje_away kooga kosmikus kqr Krakarn kranius kryft kryptiskt kshannon ktosiek Kuba Kuraitou kushal kvda kxra Labrit lahwran lambdakind Laney latro`a lattenwald LeaChim leifw lenstr levi Licenser lightquake linduxed liori Liskni_si lispy liszt liyang ljhms_ LK4D4 LMolr lokydor lopex LordBrain lpsmith lpvb lq luite lulf luminous lunarjar lusory M-ou-se m3ga machisuj- machisuji macron magicman Maior majoh mak` maksbotan malorie mami_ mandarg` mantovani maoe mapreduce marienz Martty MasseR matt444_ mattp__ matzo mauke mawuli Maxdamantus Mayzie mceier McManiaC mechairo` MedDev melter mendez_ MercurialAlchemi meretrix MetaCosm mgaare mgregson mgsloan miclorb mietek mike2 mike4_ mikecaruso mikee mikeplus64 milessabin milli mimi_vx mirsal misv mithsv mixi mjrosenb MK_FG mkrull mlinksva mmaruseacph2 mmathis MnO2 MoALTz Moggle_ mokus mollerstrand monochrom mononofu morazow Morgawr mornfall morolin mortberg Mortomes MouseTheLuckyDog Mowah mr- mrd_ mrpantou1le MrRacoon mrshoe MrWoohoo mstksg munro mux mviljamaa mxf myme1 MyrAchle n00dle Nahra_ nanothief Natch natte ndonaldson ne NeatBasis_ necroyeti neektza1 neena Neqoxec neurocyte newsham Nickeeh nicoo Nik05 nik_89 niko nikolah nilg``` Nimatek nimdAHK ninegrid ninwa ninzine nitrodex nlogax noam noddy2OOO nominolo noplamodo notdan ntus1017 nu11ptr nullcone_ nuttycom2 nwf nxorg8 obcode ocharles Odd_Bloke ofan ogew2 oldmanstan OlegYch opqdonut OrangeDuck Ornedan_ orospakr ortmage OscarZ osfameron othiym23 otterdam otto_s_ ousado Paks palmje pantsman Pantsu ParahSailin ParaSa1lin parcs_ paullik pcapriotti pdxleif Peaker peddie peltchu Pengoo perlite petanqk petantik petapetapeta petekaz`` petercoulton peterhil pettter pfoetchen pharaun phienone Philippa Phlogistique PHO_ phryk pi8029 pikhq pingveno pjstadig Plex- plhk plucas pnielsen popx poucet pqmodn pr predator117 preflex profmakx prophile Proteumus ps-auxw Ptival Puffton purefn puzza007 pxqr pygospa pyrtsa pyykkis Quadrescence quicksilver qwandor qz raid Ralith Rarrikins RayNbow`TU Raynes Raynos Razz rce_ redjohn refold ReinH Reisen relrod Rembane resnik rfw rgrinberg rhodesd RichyB Riussi_ rmunroe robbert robinbb rpenguin rs0 Rutger`_ ryanakca rzh s00pcan s4msung s_quark saep Sagi saiam Saizan sajith saml satshaba1 saurik sbahra[] schlumpi_ sclv sclv_ scshunt sdx23 seantallen SegFaultAX sellout seneca setmeaway sevvie sg Sgeo sgso shachaf shanse shennyg shepheb shergill shesek shiona SHODAN shutdown_-h_now si14 simukis_ sipa SirChurchill sirspazzolot Sixmsj sjl ski skypers sleepybu1 SLi slobo sm smarter smlgs so Soft sohum solancile solarus solirc sopvop sordina1 SoupE sp3ctum_ spektroskop Spockz Squid_Tamer ssbr Starfire_ startling stass statusfa1led stelleg stepcut steshaw_ stevejb stiell stomp studybot_ stuntaneous suiside sunfun Sunhay sunnavy_ SuperNoeMan supki Svedrin Swizec swook` tahu talzeus_ tamiko Tarential taruti tavelram taylorgb td123 tdammers Tehnix Tekerson Tene tensorpudding tero- Tesseraction tessier tg Th0mas_ The_third_man theDon theorbtwo TheSpectre thetallguy thetallguy1 thirsteh ThomasLocke thorkilnaur__ thorsten1 thorsten` thoughtpolice threedaymonk thunderrd timemage Tinned_Tuna tippenein tmiw TML tomaw tomboy65 tomejaguar tomh- tomprince torkjak tpsinnem trevize tridactyla tromp_ troydm tswett tudalex tulcod tunixman tvaalen Twey tych0 tylergillies_ u_ udoprog Ulrar upgrayeddd Urchin Urchin[emacs] uu1101 valdyn Valodim ve vehk Vendethiel vhz_ vili vishesh vivekrai vmeson vnz vobi volitek Vorpal vpm Vq vvein vvv wagle Walther warpy Watcher7 waterlaz wavewave wchun weie wereHamster whaletechno WhereIsMySpoon_ wilfredh willb1 Will| wolfnn wollw wormphlegm wting wto_ wunki xaimus xcthulhu xcv xenophon xexonixxexillion xinming xl1 XMunkki_ xnyhps Xorlev xorox90_ xplat xrl xrq xymox yam yan_ Yaniel yano Yawgmoth_ Ycros yeltzooo yiannis_1 yogurt_truck zacts zaiste zaphar_ps zeiris_ zenzike_ zero7 zerokarmaleft Zesler ziman zoktar zomg zorzar zrot zvrba zw01 zxq9 zz_nh2 zzing]
2013-07-24 09:00:47	--	Channel #haskell: 988 nicks (2 ops, 0 halfops, 0 voices, 986 normals)
2013-07-24 09:00:48	--	URL for #haskell: http://www.haskell.org/
2013-07-24 09:00:48	--	Mode #haskell [+CLcnpt]
2013-07-24 09:00:49	--	Channel created on Sun, 26 Nov 2006 07:42:48
2013-07-24 09:01:26	-->	copumpkin (~copumpkin@unaffiliated/copumpkin) has joined #haskell
2013-07-24 09:01:39	-->	ozgura (~ozgura@host-89-243-198-72.as13285.net) has joined #haskell
2013-07-24 09:01:57	<--	ozgura (~ozgura@host-89-243-198-72.as13285.net) has quit (Remote host closed the connection)
2013-07-24 09:03:05	-->	hive-mind (pranq@unaffiliated/contempt) has joined #haskell
2013-07-24 09:03:07	-->	jerryzhou (~gururui@119.52.22.91) has joined #haskell
2013-07-24 09:03:23	<--	kmels (~kmels@190.148.143.2) has quit (Read error: Operation timed out)
2013-07-24 09:03:28	-->	hwiersma2 (~hwiersma@50.92.237.119) has joined #haskell
2013-07-24 09:03:43	<--	JohnBat26 (~Eugene@89.175.77.91) has quit (Remote host closed the connection)
2013-07-24 09:03:54	sopvop	scshunt: There should not be.
2013-07-24 09:04:16	-->	descender (~heh@175.143.38.221) has joined #haskell
2013-07-24 09:04:48	<--	jerryzhou (~gururui@119.52.22.91) has quit (Client Quit)
2013-07-24 09:04:51	-->	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 09:05:33	<--	eldariof (~CLD@pppoe-196-60-dyn-sr.volgaline.ru) has quit (Ping timeout: 260 seconds)
2013-07-24 09:05:52	<--	hwiersma (~hwiersma@50.92.237.119) has quit (Ping timeout: 240 seconds)
2013-07-24 09:06:25	-->	YoungFrog (~youngfrog@geodiff-mac3.ulb.ac.be) has joined #haskell
2013-07-24 09:07:37	<--	Heero (~Heero@unaffiliated/heero) has quit (Quit: Leaving)
2013-07-24 09:07:59	<--	codesoup (~codesoup@69-196-143-49.dsl.teksavvy.com) has quit (Ping timeout: 276 seconds)
2013-07-24 09:08:58	-->	vijaykiran (~user@213.208.206.28) has joined #haskell
2013-07-24 09:09:24	-->	oceanbreeze (d4b0283d@gateway/web/cgi-irc/kiwiirc.com/ip.212.176.40.61) has joined #haskell
2013-07-24 09:09:33	oceanbreeze	Guys teach me some haskell plz
2013-07-24 09:09:52	<--	copumpkin (~copumpkin@unaffiliated/copumpkin) has quit (Ping timeout: 240 seconds)
2013-07-24 09:10:51	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-24 09:11:48	-->	copumpkin (~copumpkin@unaffiliated/copumpkin) has joined #haskell
2013-07-24 09:12:33	<--	kvda (~kvda@unaffiliated/kvda) has quit (Quit: z____z)
2013-07-24 09:13:10	stevejb	hello, is cabal-uninstall the preferred method for removoing a package which I installed with cabal?
2013-07-24 09:14:04	<--	Bryan792 (~bryan@66-214-64-25.dhcp.snlo.ca.charter.com) has quit (Ping timeout: 256 seconds)
2013-07-24 09:14:13	<--	colegleason (~cole@c-50-135-30-110.hsd1.wa.comcast.net) has quit (Quit: colegleason)
2013-07-24 09:14:29	sopvop	I never heard of cabal-uninstall
2013-07-24 09:14:49	stevejb	 https://github.com/plancalculus/cabal-uninstall
2013-07-24 09:15:54	stevejb	sopvop: well, it seemed to work okay
2013-07-24 09:15:55	<--	juhp (~petersen@redhat/juhp) has quit (Quit: Ex-Chat)
2013-07-24 09:16:34	sopvop	I think everyone just use sandboxes. cabal-dev, hsenv, HEAD of cabal or made by hand. And just delete the sandbox.
2013-07-24 09:17:06	scshunt	also, is it considered bad form to write code in the list monad?
2013-07-24 09:17:15	scshunt	(using do notation)
2013-07-24 09:17:30	<--	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has quit (Quit: simukis_)
2013-07-24 09:19:10	ion	scshunt: Not at all. Why would it?
2013-07-24 09:19:12	<--	clampz (~weidav02@ada.evergreen.edu) has quit (Read error: Operation timed out)
2013-07-24 09:19:25	-->	clampz (~weidav02@ada.evergreen.edu) has joined #haskell
2013-07-24 09:20:44	-->	xwl__ (user@nat/nokia/x-pdjotyemkqlvuwyn) has joined #haskell
2013-07-24 09:21:12	scshunt	ion: too imperative! :P
2013-07-24 09:21:22	-->	juhp (~petersen@redhat/juhp) has joined #haskell
2013-07-24 09:21:42	ion	Eh, Haskell is a great imperative language.
2013-07-24 09:22:21	Walther	@faq Can haskell be a great imperative language?
2013-07-24 09:22:21	kappabot	The answer is: Yes! Haskell can do that.
2013-07-24 09:22:25	Walther	:3
2013-07-24 09:22:46	<--	LordBrain (~jim@user-0cej5u9.cable.mindspring.com) has quit (Quit: Leaving)
2013-07-24 09:22:47	edkk	haskell do do do
2013-07-24 09:22:47	<--	MnO2 (~MnO2@nat/yahoo/x-mxuxmdqlrwgntejl) has quit (Quit: MnO2)
2013-07-24 09:23:44	-->	Finnfinn (~Julian@ip-178-201-72-31.unitymediagroup.de) has joined #haskell
2013-07-24 09:24:41	-->	chuzz (~chuzz@unaffiliated/chuzz) has joined #haskell
2013-07-24 09:25:29	MrRacoon	and then haskell did
2013-07-24 09:25:36	-->	threesome (~threesome@customer-79-127-150-148.net.angelnet.cz) has joined #haskell
2013-07-24 09:25:58	ion	> do do do do do do do do do do do do do do do do "batman"
2013-07-24 09:26:01	kappabot	  "batman"
2013-07-24 09:26:14	Cale	oceanbreeze: Are you looking for tutorials?
2013-07-24 09:26:20	Cale	@where lyah
2013-07-24 09:26:21	kappabot	http://www.learnyouahaskell.com/
2013-07-24 09:26:35	<--	kartlos (~kartlos@178-85-212-203.dynamic.upc.nl) has quit (Remote host closed the connection)
2013-07-24 09:26:40	<--	blz37 (~minsa@c-24-130-180-195.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2013-07-24 09:27:16	-->	MnO2 (~MnO2@nat/yahoo/x-rtflovyvrnnhkabm) has joined #haskell
2013-07-24 09:28:16	dmj	@where rwh
2013-07-24 09:28:16	kappabot	http://www.realworldhaskell.org/blog/ http://book.realworldhaskell.org/read/
2013-07-24 09:28:18	<--	m3ga (~erikd@hendrix.mega-nerd.net) has quit (Quit: disappearing into the sunset)
2013-07-24 09:28:33	dmj	@where typeclassopedia
2013-07-24 09:28:34	kappabot	http://www.haskell.org/haskellwiki/Typeclassopedia
2013-07-24 09:29:13	<--	xwl__ (user@nat/nokia/x-pdjotyemkqlvuwyn) has quit (Remote host closed the connection)
2013-07-24 09:29:23	-->	w0rm-_x (~w0rm@client-81-105-74-94.lds-bng-011.adsl.virginmedia.net) has joined #haskell
2013-07-24 09:29:37	-->	idntfy (~idntfy@5.187.92.160) has joined #haskell
2013-07-24 09:30:11	<--	ndonaldson (~nic@61.69.24.113) has quit (Ping timeout: 264 seconds)
2013-07-24 09:30:24	<--	idntfy2 (~idntfy@5.187.92.160) has quit (Ping timeout: 268 seconds)
2013-07-24 09:30:38	-->	thalassarche (~thalassar@unaffiliated/thalassarche) has joined #haskell
2013-07-24 09:30:59	-->	Beetny (~Beetny@ppp118-208-42-134.lns20.bne1.internode.on.net) has joined #haskell
2013-07-24 09:31:14	-->	Lethalman (~luca@net77-43-20-100.mclink.it) has joined #haskell
2013-07-24 09:31:19	-->	Wizek (~Wizek@catv-80-98-252-30.catv.broadband.hu) has joined #haskell
2013-07-24 09:32:00	<--	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 246 seconds)
2013-07-24 09:32:01	-->	bondar (~bondar@197.156.132.62) has joined #haskell
2013-07-24 09:32:11	<--	bondar (~bondar@197.156.132.62) has quit (Excess Flood)
2013-07-24 09:32:16	<--	nominolo (~nominolo@158-79.63-188.cust.bluewin.ch) has quit (Ping timeout: 240 seconds)
2013-07-24 09:35:20	<--	hwiersma2 (~hwiersma@50.92.237.119) has quit (Ping timeout: 268 seconds)
2013-07-24 09:35:28	<--	pantsman (~pantsman@pdpc/supporter/active/pantsman) has quit (Ping timeout: 256 seconds)
2013-07-24 09:35:58	scshunt	ok, so suppose I have some record
2013-07-24 09:36:00	<--	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has quit (Quit: Leaving.)
2013-07-24 09:36:16	scshunt	call this record type Record
2013-07-24 09:36:49	scshunt	now, suppose I want to extend this by adding some more fields to some subset of all instances of Record. The "correct" way to do this is with BiggerRecord = BiggerRecord { record :: Record, ... }
2013-07-24 09:37:43	scshunt	the relationship here is quite rigid if I am potentially looking at a big hierarchy
2013-07-24 09:37:54	<--	bleda (~emrahbost@unaffiliated/bleda) has quit (Quit: kernel panic.)
2013-07-24 09:38:03	scshunt	but if I have typeclasses instead and extend those by refinement, I can have a much more varied hierarchy because a single type can be an instance of many typeclasses
2013-07-24 09:38:10	scshunt	whereas a single datum can have only one type
2013-07-24 09:38:13	scshunt	if this makes sense?
2013-07-24 09:38:27	scshunt	is there a way to extend this to records, or do I have to have type classes and dummy objects
2013-07-24 09:38:30	koala_man	can you specify a different ~/.cabal directory with cabal command line flags?
2013-07-24 09:38:45	--	gpampara is now known as gpampara_off
2013-07-24 09:38:59	<--	mandarg` (~user@67.202.108.110) has quit (Read error: Connection reset by peer)
2013-07-24 09:39:19	<--	Peaker (~Peaker@87.69.111.138) has quit (Ping timeout: 248 seconds)
2013-07-24 09:40:36	<--	astropirate (~astropira@unaffiliated/astropirate) has quit (Remote host closed the connection)
2013-07-24 09:41:17	-->	jerryzhou (~gururui@119.52.22.91) has joined #haskell
2013-07-24 09:41:20	-->	kartlos (~kartlos@178-85-212-203.dynamic.upc.nl) has joined #haskell
2013-07-24 09:41:50	-->	wtw (~wtw@unaffiliated/wtw) has joined #haskell
2013-07-24 09:42:02	<--	oceanbreeze (d4b0283d@gateway/web/cgi-irc/kiwiirc.com/ip.212.176.40.61) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2013-07-24 09:42:31	hpaste	haasn pasted “RPN calculator with pretty errors” at http://lpaste.net/91167
2013-07-24 09:42:50	Gracenotes	scshunt: depends on what the thing is
2013-07-24 09:43:11	Gracenotes	and, moreso, how you want to use it
2013-07-24 09:43:50	-->	ravenvz (~vizier@ip-95-220-104-103.bb.netbynet.ru) has joined #haskell
2013-07-24 09:43:51	-->	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has joined #haskell
2013-07-24 09:44:05	<--	flebron (~flebron@190.18.146.246) has quit
2013-07-24 09:44:31	-->	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 09:44:35	<--	jerryzhou (~gururui@119.52.22.91) has quit (Client Quit)
2013-07-24 09:44:44	<--	dmj (~user@205-178-72-74.c3-0.snb-ubr1.chi-snb.il.cable.rcn.com) has quit (Ping timeout: 245 seconds)
2013-07-24 09:44:45	-->	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has joined #haskell
2013-07-24 09:44:50	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-24 09:45:01	scshunt	Gracenotes: It is information about a plugin system, so the graph is not necessarily a DAG
2013-07-24 09:45:12	-->	dEPy (~dEPy@46-150-62-58.cable.teleing.net) has joined #haskell
2013-07-24 09:45:38	scshunt	and as far as I can tell, any record-based solution will be either extremely terribly hacky or have duplication since records are inherently acyclic where type instances are not
2013-07-24 09:46:09	<--	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-07-24 09:46:10	Gracenotes	well, [mutually] recursive types aren't a problem..
2013-07-24 09:46:29	-->	xpika (~jrg@1.155.16.137) has joined #haskell
2013-07-24 09:46:35	<--	Quadrescence (~quad@unaffiliated/quadrescence) has quit (Quit: This computer has gone to sleep)
2013-07-24 09:46:50	<--	kingugo (~kingugo@196.46.246.50) has quit (Ping timeout: 245 seconds)
2013-07-24 09:46:53	-->	pr_ (~pr@li544-108.members.linode.com) has joined #haskell
2013-07-24 09:46:58	<--	pr_ (~pr@li544-108.members.linode.com) has quit (Client Quit)
2013-07-24 09:47:01	-->	totos (~totos@ppp-94-67-83-163.home.otenet.gr) has joined #haskell
2013-07-24 09:48:04	<--	fosky (~fosky@ppp118-209-48-173.lns20.mel4.internode.on.net) has quit (Ping timeout: 245 seconds)
2013-07-24 09:48:05	Gracenotes	it is true that Haskell doesn't have record subtyping... the type system is complicated in other ways
2013-07-24 09:48:41	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2013-07-24 09:49:06	-->	davidt (~davidt@c-67-180-10-214.hsd1.ca.comcast.net) has joined #haskell
2013-07-24 09:49:27	-->	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has joined #haskell
2013-07-24 09:49:31	<--	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has quit (Ping timeout: 268 seconds)
2013-07-24 09:49:33	<--	w0rm-_x (~w0rm@client-81-105-74-94.lds-bng-011.adsl.virginmedia.net) has quit (Quit: Leaving)
2013-07-24 09:49:58	<--	nik_89 (~nik_89@unaffiliated/nniro) has quit (Ping timeout: 246 seconds)
2013-07-24 09:50:06	<--	Apocalisp (~textual@ip-64-134-174-210.public.wayport.net) has quit (Quit: Computer has gone to sleep.)
2013-07-24 09:50:12	<--	mandarg` (~user@67.202.108.110) has quit (Ping timeout: 256 seconds)
2013-07-24 09:51:02	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-24 09:51:13	-->	JohnBat26 (~Eugene@89.175.77.91) has joined #haskell
2013-07-24 09:51:13	<--	JohnBat26 (~Eugene@89.175.77.91) has quit (Client Quit)
2013-07-24 09:51:34	totos	Hello, anyone managed to install the openglraw package in ubuntu 13.04? I downgraded the ghc to ghc-7.4.1 and ghc-7.4.2 that is depended on, and it still fails.
2013-07-24 09:51:43	Gracenotes	there's weird stuff like HList, which I believe can be used to take 'has-field-x' to a weird extreme
2013-07-24 09:52:23	sopvop	HasField and friends can be neatly solved with lens and ${makeClassy ''Foo}
2013-07-24 09:52:36	-->	owst_ (~owst@78-86-250-181.zone2.bethere.co.uk) has joined #haskell
2013-07-24 09:52:42	<--	kartlos (~kartlos@178-85-212-203.dynamic.upc.nl) has quit (Remote host closed the connection)
2013-07-24 09:53:20	-->	eikke (~nicolas@78-20-0-121.access.telenet.be) has joined #haskell
2013-07-24 09:56:14	-->	raichoo (~raichoo@mue-88-130-22-058.dsl.tropolys.de) has joined #haskell
2013-07-24 09:56:52	-->	t7 (~chatzilla@chaucer.kent.ac.uk) has joined #haskell
2013-07-24 09:57:00	Gracenotes	lens is a bit more organic and less likely to be outlawed by the state of California for causing cancer 10 years from now
2013-07-24 09:58:16	<--	eduardo_ (~wakalabis@177.32.67.203) has quit (Ping timeout: 256 seconds)
2013-07-24 09:58:48	-->	ajhager_ (~ajhager@h107.76.53.24.cable.rdfr.jetbroadband.com) has joined #haskell
2013-07-24 09:58:57	<--	sopvop (~lonokhov@213.170.88.43) has quit (Ping timeout: 246 seconds)
2013-07-24 09:59:24	<--	gienah (~mwright@gentoo/developer/gienah) has quit (Quit: Lost terminal)
2013-07-24 09:59:54	-->	tsenart (~tsenart@62.217.45.197) has joined #haskell
2013-07-24 09:59:55	-->	pkkm (~pawel@adhj132.neoplus.adsl.tpnet.pl) has joined #haskell
2013-07-24 10:00:08	-->	nominolo (~nominolo@cust.static.81-63-183-2.swisscomdata.ch) has joined #haskell
2013-07-24 10:00:20	Gracenotes	since those three things are related
2013-07-24 10:01:16	-->	nominolo_ (~nominolo@cust.static.81-63-183-2.swisscomdata.ch) has joined #haskell
2013-07-24 10:01:33	 *	Gracenotes should really go to sleep
2013-07-24 10:02:21	<--	nominolo_ (~nominolo@cust.static.81-63-183-2.swisscomdata.ch) has quit (Client Quit)
2013-07-24 10:02:28	-->	l0p3n (~kristian@unaffiliated/l0p3n) has joined #haskell
2013-07-24 10:02:37	augur	Gracenotes: no dont sleep!
2013-07-24 10:02:42	augur	stay awake with us! :D
2013-07-24 10:03:15	<--	wormphlegm (~wormphleg@24.130.9.50) has quit (Ping timeout: 248 seconds)
2013-07-24 10:03:19	--	gpampara_off is now known as gpampara
2013-07-24 10:03:21	<--	peterhil (~peterhil@85-76-123-249-nat.elisa-mobile.fi) has quit (Read error: Connection reset by peer)
2013-07-24 10:03:28	<--	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 240 seconds)
2013-07-24 10:12:24	--	irc: disconnected from server
2013-07-24 10:12:46	-->	benoit (~benoit@130.185.130.212) has joined #haskell
2013-07-24 10:12:46	--	Topic for #haskell is "http://www.haskell.org | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | Administrative issues: #haskell-ops | Hackage down? http://hdiff.luite.com"
2013-07-24 10:12:46	--	Topic set by mauke (~mauke@p3m/member/mauke) on Wed, 17 Jul 2013 13:52:43
2013-07-24 10:12:47	--	Nicks #haskell: [@ChanServ @Igloo [[zzz]] [edwtjo] \q __knock__ __main__ _flow_ `0660 `^_^v `bps a11235 ab9rf acfoltzer acidi Adeon adimit_away adinapoli Adios adlan adnap_ aford aformeny agundry ahf ahihi ajhager_ akahn akiress akraut albel727 alcz_ aleator_ alexander__b AleXoundOS alexs alpounet Amadiro amathew amosr anachron AndChat| anders^^_ andrewsw anildigital aninhumer anon1231 AntiSpamMeta anyfoo apaku araujo arbn arcatan args[0] aristid Ark1 arkeet arkx arnsholt asante asjo` asQuirreL aszlig ataj_ Athas augur averell_ away_sondr3 Axman6 b2coutts b52 b_jonas banister`sleep banjiewen barrucadu bartavelle Baughn bb010g bben bbloom_ bcoppens bd_ bduc Beetny bel3atar Belgarion0 benoit benprew bentrevor bergmark betawaffle bezik bgamari bholst_ Bigcheese BigEndian bigs birkenfeld biscarch bitonic bitraten blakesmith BlastHardcheese Blazeix Blkt BMeph_ bobry bobthenameless_ bogdanp bogner_ Boney boothead Boreeas bqp brainproxy brainwash Brando753 brandonw brendan brett BrianHV brianloveswords brisbin_ brixen bscarlet bstrie buetow burp_ Bwild bxc ByronJohnson bz c_14 c_wraith cads cajla Cale caligula__ canar canissimia canta capisce_ carter_away catwiesel ccasin ccxCZ cdidd cdk centrinia Cerise charlesofarrell_ chatsiri_ cheezey chickenflu chirpsalot ChongLi Chousuke chrisbuchholz chrisdone chrisdotcode_ chrra chuzz ciaranm CindyLinz cjay clampz ClaudiusMaximus Clint clog cmsd2 cods colah_ compnaion_cbue confound_ copton copumpkin corkexaminer CosmicRay Counter-Strike cow-orker cronject cross cruxeternus Cryovat csakatoku cschneid cseder cynick dabradley dan_johnsin danr danvet dario^CIP Darkflux DarkFox Dashkal davd davean davidt davorak_ davorb-cellphone dcoutts deavid Deewiant def-lkb_ deggis demolithion dEPy descender destiny_ DexterLB dextrey DigitalKiwi dilinger dimday divarvel dixie_ djahandarie djcoin dju dlundy dmarker dmj dmp1ce dmwit dogmaT dolio doomlord doshitan dpwright dqd Draconx Draggor drbean DrCode drdo dreixel_ drewr drmegahertz dropdrive DrSyzygy dsantiago dsfox1 dsirenko dsp_ DT` duairc duikboot dumbhat dustinswan DustyDingo Dybber dyreshark dysinger eacameron EarlGray^^ earthy ecube edkk Edoxile edunham edwardk ehamberg ehd eikke ejls eL_Bart0 electrogeek elgot Eliel Elision_ elliott ELLIOTTCABLE em Enigmagic ent Entroacceptor epsylon epta ericmj Eridius ernst ethercrow etrepum Excureo eyck Ezku f8l fabjan fall_ farn fayanne63 fayden felipe_ fergusnoble fgomez_ fihi09``` fijimunkii fikusz Finnfinn finnrobi FireFly floatingman flori flowsnake flux folone franksh FreeFull frontend1oader froztbyte fry fryguybob ft Fubar^ Fuco Fuuzetsu FUZxxl fxrh gbarboza gbeshers gbluma gdeest gds geal geekosaur gemelen genisage gentleben geoffh gereedy ggherdov ggreg ghorn Ghoul_ Gilly gnuvince goldkatze Gothmog_ go|dfish gpampara Gracenotes greymalkin gridaphobe gseitz_ gspr guerrilla Guest1103 Guest60325 Guest66280 h_chiro_ haasn hackagebot Hafydd HalfWayM1n hallettj hamilyon hamishmack hape01 Hardolaf harovali heath helgikrs hiratara hiroakip hive-mind hiyakashi honza horlicks hpaste hpc hpd hvr ibid idnar idntfy ido idoru inarru inr insejn int-e integral Internet13 iol_ ion ipuustin iri`away Irtopiste isenmann ISF isomorphic isomorphismes iteratee iulian ivan\ ivan` ixian Jaak jackhill jaimef jamwt jang1 janinge janne- jaspervd1 jayne jbauman_ jcp jdhutah jdoles jdoliner Jello_Raptor JesuZ jix jkoppel jkpl jlaire jlamothe jlewis jliikka jlouis jmcarthur jmcarthur_mobile jml joachifm joar jobstijl jodaro joelteon joeyh johanbev johnw joneshf-laptop joneshf-work Jonte joogi joshc JPohlman1 jrib jroesch jrslepak jssanders JuanDaugherty juhp julmae junsuijin JustAPerson justinls jyyou jzelinskie k0ral_ Kabaka kaictl KaneTW kaol kappabot kav kaw kazimir42 kcj Ke kerrick Khady Khisanth killy9999 kini Kinnison Kiryx KitB kloeri kludge` klugez Kneiva_ knyppeldynan knz koala_man kolmodin koninkje_away kooga kosmikus kqr Krakarn kranius kryft kryptiskt kshannon ktosiek Kuba Kuraitou kushal kxra l0p3n Labrit lahwran lambdakind Laney latro`a lattenwald LeaChim leifw lenstr Lethalman levi Licenser lightquake linduxed liori Liskni_si lispy liszt liyang ljhms_ LK4D4 LMolr lokydor lopex lpsmith lpvb lq luite lulf luminous lunarjar lusory M-ou-se machisuj- machisuji macron magicman Maior majoh mak` maksbotan malorie mami_ mandarg` mantovani maoe mapreduce marienz Martty MasseR matt444_ mattp__ matzo mauke mawuli Maxdamantus Mayzie mceier McManiaC mechairo` MedDev melter mendez_ MercurialAlchemi meretrix MetaCosm mgaare mgregson mgsloan mietek mike2 mike4_ mikecaruso mikee mikeplus64 milessabin milli mimi_vx mirsal misv mithsv mixi mjrosenb MK_FG mkrull mlinksva mmaruseacph2 mmathis MnO2 MoALTz Moggle_ mokus mollerstrand monochrom mononofu morazow Morgawr mornfall morolin mortberg Mortomes MouseTheLuckyDog Mowah mr- mrd_ mrpantou1le MrRacoon mrshoe MrWoohoo mstksg munro mux mviljamaa mxf myme1 MyrAchle n00dle Nahra_ nanothief Natch natte ne NeatBasis_ necroyeti neektza1 neena Neqoxec neurocyte newsham Nickeeh nicoo Nik05 niko nikolah nilg``` Nimatek nimdAHK ninegrid ninwa ninzine nitrodex nlogax noam noddy2OOO nominolo noplamodo notdan ntus1017 nu11ptr nullcone_ nuttycom2 nwf nxorg8 obcode ocharles Odd_Bloke ofan ogew2 oldmanstan OlegYch opqdonut OrangeDuck Ornedan_ orospakr ortmage OscarZ osfameron othiym23 otterdam otto_s_ ousado owst_ Paks palmje pamojarpan_ Pantsu ParahSailin ParaSa1lin parcs_ paullik pcapriotti pdxleif peddie peltchu Pengoo perlite perspectival petanqk petantik petapetapeta petekaz`` petercoulton pettter pfoetchen pharaun phienone Philippa phischu Phlogistique PHO_ phryk pi8029 pikhq pingveno pjstadig pkkm Plex- plhk plucas pnielsen popx poucet pqmodn pr predator117 preflex profmakx prophile Proteumus ps-auxw Ptival Puffton purefn puzza007 pxqr pygospa pyrtsa pyykkis quicksilver qwandor qz raichoo raid Ralith Rarrikins ravenvz RayNbow`TU Raynes Raynos Razz rce_ redjohn refold ReinH Reisen relrod Rembane resnik rfw rgrinberg rhodesd RichyB Riussi_ rmunroe robbert robinbb rpenguin rs0 Rutger`_ ryanakca s00pcan s4msung s_quark saep Sagi saiam Saizan sajith saml satshaba1 saurik sbahra[] schlumpi_ sclv sclv_ scshunt sdx23 seantallen SegFaultAX sellout seneca setmeaway sevvie sg Sgeo sgso shachaf shanse shennyg shepheb shergill shesek shiona SHODAN shutdown_-h_now si14 simukis_ sipa SirChurchill sirspazzolot Sixmsj sjl ski skypers sleepybu1 SLi slobo sm smarter smlgs so Soft sohum solancile solarus solirc Sonderblade sordina1 SoupE sp3ctum_ spektroskop Spockz Squid_Tamer ssbr Starfire_ startling stass statusfa1led stelleg stepcut steshaw steshaw_ stevejb stiell stomp studybot_ stuntaneous suiside sunfun Sunhay sunnavy_ SuperNoeMan supki Svedrin Swizec swook` t7 tahu talzeus_ tamiko Tarential taruti tavelram taylorgb td123 tdammers Tehnix Tekerson Tene tensorpudding tero- Tesseraction tessier tg Th0mas_ thalassarche The_third_man theDon theorbtwo TheSpectre thetallguy thetallguy1 thirsteh ThomasLocke thorkilnaur__ thorsten1 thorsten` thoughtpolice threedaymonk threesome thunderrd timemage Tinned_Tuna tippenein tmiw TML tomaw tomboy65 tomejaguar tomh- tomprince torkjak tpsinnem trevize tridactyla tromp_ troydm tsenart tswett tudalex tulcod tunixman tvaalen Twey tych0 tylergillies_ u_ udoprog Ulrar upgrayeddd Urchin Urchin[emacs] uu1101 valdyn Valodim ve vehk Vendethiel vhz_ Vicfred vijaykiran vili vivekrai vmeson vnz vobi volitek Vorpal vpm Vq vvein vvv wagle Walther warpy Watcher7 waterlaz wavewave wchun weie wereHamster whaletechno WhereIsMySpoon_ wilfredh willb1 Will| Wizek wolfnn wollw wting wto_ wtw wunki xaimus xcthulhu xcv xenophon xexonixxexillion xinming xl1 XMunkki_ xnyhps Xorlev xorox90_ xpika xplat xrl xrq xymox yam yan_ Yaniel yano Yawgmoth_ Ycros yeltzooo yiannis_1 yogurt_truck YoungFrog zacts zaiste zaphar_ps zeiris_ Zenol zenzike_ zero7 zerokarmaleft Zesler ziman zoktar zomg zorzar zrot zvrba zw01 zxq9 zz_nh2 zzing]
2013-07-24 10:12:47	--	Channel #haskell: 991 nicks (2 ops, 0 halfops, 0 voices, 989 normals)
2013-07-24 10:12:47	--	URL for #haskell: http://www.haskell.org/
2013-07-24 10:12:49	-->	ffwacom (ffwacom@CPE-124-186-191-197.lns6.woo.bigpond.net.au) has joined #haskell
2013-07-24 10:12:49	pharaun	 m (ResumableSource m a, b)
2013-07-24 10:12:51	--	Mode #haskell [+CLcnpt]
2013-07-24 10:12:51	--	Channel created on Sun, 26 Nov 2006 07:42:48
2013-07-24 10:12:57	ffwacom	u mena haskell??
2013-07-24 10:13:00	pharaun	yeah i need to extract the ResumableSource part out of that tuple :)
2013-07-24 10:13:06	-->	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 10:13:37	-->	gusto (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has joined #haskell
2013-07-24 10:13:42	-->	nooodl_ (~nooodl@91.179.137.83) has joined #haskell
2013-07-24 10:14:20	-->	agumonkey (~agu@179.217.72.86.rev.sfr.net) has joined #haskell
2013-07-24 10:15:35	-->	sopvop (~lonokhov@213.170.88.43) has joined #haskell
2013-07-24 10:15:40	-->	Alice3 (~Alice@cpc18-grim14-2-0-cust478.12-3.cable.virginmedia.com) has joined #haskell
2013-07-24 10:15:46	pharaun	johnw: sorry, i goofed on that second part, it was a tuple, i should go to bed at this rate! anyway thanks for kicking my head into gear with the $$++ thing
2013-07-24 10:15:59	-->	betaveros (~betaveros@124.11.210.230) has joined #haskell
2013-07-24 10:16:05	johnw	sure thing!
2013-07-24 10:16:09	johnw	resumable sources are fun :)
2013-07-24 10:16:24	pharaun	my first time dealing with them so been a bit of a learning trip :)
2013-07-24 10:16:46	pharaun	i'm surprised that i've gotten this far with just following the types :)
2013-07-24 10:17:20	-->	silver (~silver@178.120.245.33) has joined #haskell
2013-07-24 10:19:16	-->	lukexi (~lukexi@cpe-72-229-189-117.nyc.res.rr.com) has joined #haskell
2013-07-24 10:39:01	-->	benoit (~benoit@130.185.130.212) has joined #haskell
2013-07-24 10:39:01	--	Topic for #haskell is "http://www.haskell.org | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | Administrative issues: #haskell-ops | Hackage down? http://hdiff.luite.com"
2013-07-24 10:39:01	--	Topic set by mauke (~mauke@p3m/member/mauke) on Wed, 17 Jul 2013 13:52:43
2013-07-24 10:39:01	--	Nicks #haskell: [@ChanServ @Igloo [[zzz]] [edwtjo] \q __main__ _flow_ `0660 `^_^v `bps a11235 ab9rf acfoltzer acidi Adeon adimit_away adinapoli Adios_ adlan adnap_ aford aformeny agumonkey agundry ahf ahihi ajhager_ akahn akiress akraut albel727 alcz_ aleator_ alexander__b AleXoundOS alexs Alice3 alpounet Amadiro amathew amosr anachron anders^^_ andrewsw anildigital aninhumer anon1231 AntiSpamMeta anyfoo apaku araujo arbn arcatan args[0] aristid Ark1 arkeet arkx_ arnsholt asante asjo` asQuirreL aszlig ataj_ Athas augur averell_ away_sondr3 Axman6 b2coutts b52 b_jonas banister`sleep Banistergalaxy banjiewen barrucadu bartavelle Baughn bb010g bben bbloom_ bcoppens bd_ bduc Beetny bel3atar Belgarion0 benoit benprew1 bentrevor bergmark betaveros betawaffle bezik bgamari bholst_ Bigcheese BigEndian bigs birkenfeld biscarch bitraten blakesmith BlastHardcheese Blazeix bleda Blkt BMeph bobry bobthenameless_ bogdanp bogner_ Boney boothead Boreeas bqp brainproxy brainwash Brando753 brandonw1 brendan brett BrianHV brianloveswords brisbin brixen bscarlet bstrie buetow burp_ Bwild bxc ByronJohnson bz c_14 c_wraith cads cajla Cale caligula__ canar canissimia canta capisce_ carter_away catwiesel ccasin ccxCZ cdidd cdk centrinia Cerise charlesofarrell_ chatsiri_ cheezey chickenflu chirpsalot ChongLi Chousuke chrisbuchholz chrisdone chrisdotcode_ chrra chuzz ciaranm CindyLinz cjay clampz ClaudiusMaximus Clint clog cmsd2 cods cognominal colah_ compnaion_cbue confound_ copton copumpkin corkexaminer CosmicRay Counter-Strike cow-orker Cromulent cronject cross cruxeternus Cryovat csakatok_ cschneid cseder cynick dabradley dan_johnsin danr danvet dario^CIP Darkflux DarkFox Dashkal davd davean davidt davorak_ davorb-cellphone dcoutts deavid Deewiant def-lkb_ deggis demolithion dEPy descender destiny_ DexterLB dextrey DigitalK1wi dilinger_ dimday divarvel dixie_ djahandarie djcoin dju dlundy dmarker dmp1ce dmwit dogmaT dolio doomlord doshitan dpwright dqd Draconx Draggor drbean DrCode drdo dreixel_ drewr drmegahertz dropdrive DrSyzygy dsantiago dsfox1 dsirenko dsp_ DT`` duairc duikboot_ dumbhat dustinswan DustyDingo Dybber dyreshark dysinger eacameron EarlGray^^ earthy ecube edkk Edoxile edunham edwardk ehamberg ehd eikke ejls eL_Bart0 electrogeek elgot Eliel Elision_ elliott ELLIOTTCABLE em Enigmagic ent Entroacceptor epsylon epta ericmj Eridius ernst ethercrow etrepum Excurio eyck_ Ezku fabjan fall_ farn fayanne63 fayden federkasten felipe_ fergusnoble ffwacom fgomez_ fihi09``` fijimunkii fikusz Finnfinn_ finnrobi FireFly floatingman flori flowsnake flux folone franksh FreeFull frontend1oader froztbyte fry fryguybob ft Fubar^ Fuco Fuuzetsu FUZxxl fxrh gbarboza gbeshers gbluma gdeest gds geal geekosaur gemelen genisage gentleben geoffh gereedy ggherdov ggreg ghorn Ghoul_ Gilly_ gnuvince- goldkatze_ Gothmog_ go|dfish gpampara Gracenotes greymalkin gridaphobe gseitz_ gspr guerrilla Guest1103 Guest60325 Guest66280 gusto h_chiro_ haasn hackagebot Hafydd hajimehoshi HalfWayM1n hallettj hamilyon hamishmack hape01 Hardolaf harovali1 heath helgikrs hiratara hiroakip hive-mind hiyakashi honza horlicks hpaste hpc hpd hvr ibid idnar idntfy ido idoru inarru inr insejn int-e integral Internet13 iol ion ipuustin iri`away Irtopiste isenmann ISF isomorphic isomorphismes iteratee_ iulian ivan\ ivan` ixian Jaak jackhill_ jaimef jamwt jang1 janinge janne- JaRoel|4d jaspervd1 jayne jbauman_ jcp jdhutah jdoles jdoliner Jello_Raptor JesuZ jix jkoppel jkpl jlaire jlamothe jlewis jliikka jlouis jmcarthur jmcarthur_mobile jml joachifm joar jobstijl jodaro joelteon joeyh johanbev johnw joneshf-laptop joneshf-work Jonte joogi jorick joshc JPohlman1 jrib jroesch_ jrslepak jssanders JuanDaugherty juhp julmae junsuijin JustAPerson justinls jyyou jzelinskie k0ral_ Kabaka kaictl KaneTW kaol kappabot kav kaw kazimir42 kcj Ke kerrick Khady Khisanth killy9999 kini Kinnison Kiryx KitB kloeri kludge` klugez Kneiva_ knyppeldynan knz koala_man kolmodin koninkje_away kooga kosmikus kqr Krakarn kranius kryft kryptiskt kshannon ktosiek Kuba Kuraitou kushal kxra l0p3n lahwran lambdaki_ Laney latro`a lattenwald LeaChim leifw` lenstr Lethalman levi Licenser lightquake linduxed liori Liskni_si lispy liszt liyang_ ljhms_ LK4D4 LMolr lokydor lopex lpsmith lpvb lq_ luite lukexi lulf luminous lunarjar lusory M-ou-se machisuj- machisuji macron magicman Maior majoh mak` maksbotan malorie_ mami_ mandarg` mantovani maoe mapreduce marienz marr Martty MasseR matt444_ mattp__ matzo mauke mawuli Maxdamantus Mayzie mceier McManiaC mechairo` MedDev melter mendez_ MercurialAlchemi meretrix MetaCosm mgaare mgregson_ mgsloan mietek mike2 mike4_ mikecaruso mikee mikeplus64 milessabin milli mimi_vx mirsal misv mithsv mixi mjrosenb MK_FG mkrull mlinksva mmaruseacph2 mmathis MnO2 MoALTz Moggle_ mokus mollerstrand monochrom mononofu morazow Morgawr mornfall morolin mortberg Mortomes MouseTheLuckyDog Mowah mr- mrd_ mrpantou1le MrRacoon mrshoe MrWoohoo mstksg_ munro mux mviljamaa mxf myme1 MyrAchle n00dle Nahra_ nanothief Natch natte ne NeatBasis_ necroyeti neektza1 neena Neqoxec neurocyte newsham Nickeeh nicoo Nik05 nik_89 niko nikolah nilg``` Nimatek nimdAHK ninegrid ninwa ninzine nitrodex nlogax noam noddy2OOO nominolo nooodl noplamodo notdan ntus1017 nu11ptr nullcone_ nuttycom2 nwf nxorg8 obcode ocharles Odd_Bloke ofan ogew2 oldmanstan OlegYch opqdonut OrangeDuck Ornedan_ orospakr ortmage OscarZ osfameron othiym23 otterdam otto_s ousado Paks palmje pamojarpan_ Pantsu ParahSailin ParaSa1lin parcs_ paullik pcapriotti pdxleif peddie peltchu Pengoo perlite perspectival petanqk petantik petapetapeta petekaz`` petercoulton peterhil pettter_ pfoetchen pharaun phienone Philippa phischu Phlogistique PHO_ phryk pi8029 pikhq pingveno pjstadig pkkm Plex- plhk plucas pnielsen popx poucet pqmodn_ pr predator117 preflex PRISMBITCH profmakx prophile Proteumus ps-auxw ptek Ptival Puffton purefn puzza007 pxqr pygospa pyrtsa pyykkis quchen quicksilver qwandor qz raichoo raid Ralith Rarrikins ravenvz RayNbow`TU Raynes Razz rce_ redjohn refold ReinH Reisen relrod Rembane resnik rfw rgrinberg rhodesd RichyB Riussi_ rmunroe robbert robinbb rpenguin rs0 Rutger`_ ryanakca s00pcan s4msung s_quark Saeppel Sagi saiam Saizan sajith saml satshaba1 saurik sbahra[] schlumpi_ sclv sclv_ scshunt sdx23 seantallen SegFaultAX sellout seneca setmeaway sevvie sg Sgeo sgso shachaf shanse shennyg shepheb shergill shesek shiona SHODAN shutdown_-h_now si14 silver simukis_ sipa SirChurchill sirspazz1lot Sixmsj sjl ski skypers sleepybu1 SLi slobo sm smarter smlgs so Soft sohum solancile solarus solirc Sonderblade sopvop sordina1 SoupE sp3ctum_ spektroskop Spockz Squid_Tamer ssbr Starfire_ startling stass statusfa1led stelleg_ stepcut steshaw steshaw_ stevejb stiell stomp studybot_ stuntaneous suiside sunfun Sunhay sunnavy_ SuperNoeMan supki Svedrin Swizec swook` t7 tahu talzeus_ tamiko Tarential taruti tavelram taylorgb td123_ tdammers Tehnix Tekerson_ Tene tensorpudding tero- Tesseraction tessier tg Th0mas_ thalassarche theDon theorbtwo TheSpectre thetallguy thetallguy1 thirsteh ThomasLocke thorkilnaur__ thorsten1 thorsten` thoughtp1lice threedaymonk threesome thunderrd timemage Tinned_Tuna tippenei1 tmiw TML tomaw tomboy65 tomejaguar tomh- tomprince torkjak totos tpsinnem trevize Tribal tridactyla tromp_ troydm ts33kr tsenart tswett ttm tudalex tulcod tunixman tvaalen Twey tych0 tylergillies_ udoprog Ulrar upgrayeddd Urchin Urchin[emacs] uu1101 valdyn Valodim ve vehk Vendethiel vhz_ Vicfred vijaykiran vili vivekrai vmeson vnz vobi volitek_ Vorpal vpm Vq vvein vvv wagle Walther warpy Watcher7 waterlaz wavewave wchun weie wereHamster whaletechno WhereIsMySpoon_ wilfredh willb1 Will| Wizek wolfnn wollw wormphlegm wting wto_ wtw wunki xaimus xcthulhu xcv xenophon xexonixxexillion xinming xl1 XMunkki_ xnyhps Xorlev xorox90_ xpika xplat xrl xrq xymox yam yan_ Yaniel yano Yawgmoth_ Ycros yeltzooo yiannis_1 yogurt_truck YoungFrog zacts zaiste zaphar_ps zeiris_ Zenol zenzike_ zero7 zerokarmaleft Zesler ziman zoktar zomg zorzar zrot zvrba zw01 zxq9 zz_nh2 zzing]
2013-07-24 10:39:01	--	Channel #haskell: 1009 nicks (2 ops, 0 halfops, 0 voices, 1007 normals)
2013-07-24 10:39:01	--	URL for #haskell: http://www.haskell.org/
2013-07-24 10:39:05	--	Mode #haskell [+CLcnpt]
2013-07-24 10:39:05	--	Channel created on Sun, 26 Nov 2006 07:42:48
2013-07-24 10:39:11	<--	hajimehoshi (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has quit (Ping timeout: 264 seconds)
2013-07-24 10:40:08	-->	Mon_Ouie (~Mon_Ouie@subtle/user/MonOuie) has joined #haskell
2013-07-24 10:40:51	<--	betaveros (~betaveros@124.11.210.230) has quit (Quit: betaveros)
2013-07-24 10:41:36	<--	stiell (~stian@fsf/member/stiell) has quit (Read error: Connection reset by peer)
2013-07-24 10:41:37	<--	alexander__b (~alexander@fsf/member/alexanderb) has quit (Read error: Connection reset by peer)
2013-07-24 10:41:44	-->	hsyl20 (~shenry@193.50.110.125) has joined #haskell
2013-07-24 10:42:40	haasn	Is there something like ‘beside’ but for Either instead of (,)?
2013-07-24 10:42:42	-->	alexander__b (~alexander@107.4.189.109.customer.cdi.no) has joined #haskell
2013-07-24 10:42:49	haasn	in the context of lens
2013-07-24 10:43:22	<--	alexander__b (~alexander@107.4.189.109.customer.cdi.no) has quit (Changing host)
2013-07-24 10:43:22	-->	alexander__b (~alexander@fsf/member/alexanderb) has joined #haskell
2013-07-24 10:45:13	-->	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has joined #haskell
2013-07-24 10:45:24	-->	dcoutts_ (~dcoutts@unaffiliated/dcoutts) has joined #haskell
2013-07-24 10:45:50	-->	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has joined #haskell
2013-07-24 10:46:25	<--	mandarg` (~user@67.202.108.110) has quit (Read error: Connection reset by peer)
2013-07-24 10:46:36	-->	MrFenix (~JanB@p57A1BBD7.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 10:47:35	<--	mstksg_ (~justin@ip68-5-181-190.oc.oc.cox.net) has quit (Quit: leaving)
2013-07-24 10:47:52	-->	mstksg (~justin@ip68-5-181-190.oc.oc.cox.net) has joined #haskell
2013-07-24 10:48:16	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-24 10:48:17	<--	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has quit (Remote host closed the connection)
2013-07-24 10:48:26	mstksg	hey, what happened to lambdabot?
2013-07-24 10:48:37	-->	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has joined #haskell
2013-07-24 10:49:32	<--	alexander__b (~alexander@fsf/member/alexanderb) has quit (Read error: Connection reset by peer)
2013-07-24 10:49:32	-->	jjohnsson (~jjohnsson@host-95-199-15-223.mobileonline.telia.com) has joined #haskell
2013-07-24 10:49:53	startling	kappabot usurped her.
2013-07-24 10:49:57	<--	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has quit (Ping timeout: 268 seconds)
2013-07-24 10:52:06	<--	ffwacom (ffwacom@CPE-124-186-191-197.lns6.woo.bigpond.net.au) has left #haskell
2013-07-24 10:52:31	-->	eduardo__ (~wakalabis@177.32.67.203) has joined #haskell
2013-07-24 10:53:01	<--	flowsnake (~flowsnake@cpc26-aztw25-2-0-cust894.aztw.cable.virginmedia.com) has quit (Ping timeout: 264 seconds)
2013-07-24 10:54:37	mstksg	shame
2013-07-24 10:54:37	-->	kartlos (~kartlos@192.87.139.123) has joined #haskell
2013-07-24 10:54:41	<--	kartlos (~kartlos@192.87.139.123) has quit (Remote host closed the connection)
2013-07-24 10:55:01	-->	owst (~owst@tarsier.ecs.soton.ac.uk) has joined #haskell
2013-07-24 10:55:02	elliott	was there another netsplit?
2013-07-24 10:55:34	-->	lambdabot (lambdabot@2a01:7e00::f03c:91ff:fedf:9fdd) has joined #haskell
2013-07-24 10:55:39	johnw	when I see omegabot, I will worry
2013-07-24 10:55:51	elliott	maybe I should put "lambdabot" on highlight
2013-07-24 10:55:53	startling	> "uh-oh"
2013-07-24 10:55:56	kappabot	  "uh-oh"
2013-07-24 10:56:04	lambdabot	  "uh-oh"
2013-07-24 10:56:21	mgsloan	> putStrLn "> \"uh-oh\""
2013-07-24 10:56:24	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2013-07-24 10:56:24	mstksg	he returns :)
2013-07-24 10:56:24	kappabot	  No instance for (GHC.Show.Show (GHC.Types.IO ()))
2013-07-24 10:56:24	kappabot	   arising from a use of ...
2013-07-24 10:56:30	lambdabot	  <IO ()>
2013-07-24 10:56:39	mgsloan	> "> \"uh-oh\""
2013-07-24 10:56:42	kappabot	  "> \"uh-oh\""
2013-07-24 10:56:44	lambdabot	  "> \"uh-oh\""
2013-07-24 10:56:50	mgsloan	Hrmph of course
2013-07-24 10:57:45	<--	perspectival (~perspecti@35.158.broadband4.iol.cz) has quit (Quit: Leaving.)
2013-07-24 10:57:56	<--	bleda (~emrahbost@unaffiliated/bleda) has quit (Quit: kernel panic.)
2013-07-24 10:57:58	-->	stiell (~stian@fsf/member/stiell) has joined #haskell
2013-07-24 10:58:03	-->	perspectival (~perspecti@35.158.broadband4.iol.cz) has joined #haskell
2013-07-24 11:00:23	<--	totos (~totos@ppp-94-67-127-23.home.otenet.gr) has quit (Read error: Connection reset by peer)
2013-07-24 11:00:45	-->	merijn (~merijn@laptop-27-102.macs.hw.ac.uk) has joined #haskell
2013-07-24 11:00:50	elliott	kappabot: @part #haskell
2013-07-24 11:00:50	<--	kappabot (kappabot@unaffiliated/shachaf) has left #haskell
2013-07-24 11:00:55	<--	iol (~eric@218.241.207.78) has quit (Ping timeout: 248 seconds)
2013-07-24 11:01:23	-->	danilo2 (959cc887@gateway/web/freenode/ip.149.156.200.135) has joined #haskell
2013-07-24 11:01:34	-->	totos (~totoylis@ppp-94-67-127-23.home.otenet.gr) has joined #haskell
2013-07-24 11:01:35	-->	erochester (~erocheste@71.206.171.217) has joined #haskell
2013-07-24 11:03:11	ion	@type let either_ :: Functor f => ((a -> f b) -> s -> f t) -> ((a -> f b) -> s' -> f t') -> (a -> f b) -> Either s s' -> f (Either t t'); either_ l r f = either (fmap Left . l f) (fmap Right . r f) in either_
2013-07-24 11:03:11	lambdabot	Functor f => ((a -> f b) -> s -> f t) -> ((a -> f b) -> s' -> f t') -> (a -> f b) -> Either s s' -> f (Either t t')
2013-07-24 11:03:25	danilo2	Hi! What is the best method to call Haskell from C / C++? I'm writing a batch application (terminal based system) which should communicate with GHCI-like Haskell program. The Haskell program has got some data structures, which C++ code should operate on. :)
2013-07-24 11:03:27	ion	haasn: You figure out if it violates the laws, i can't be bothered. :-P
2013-07-24 11:03:57	startling	man, I almost had a botflood set up. :(
2013-07-24 11:04:03	<--	steshaw (~steshaw@CPE-124-177-110-136.lns5.woo.bigpond.net.au) has quit (Quit: steshaw)
2013-07-24 11:04:09	ion	haasn: That's :: Functor f => LensLike f s t a b -> LensLike f s' t' a b -> LensLike f (Either s s') (Either t t') a b
2013-07-24 11:04:20	elliott	ion: I think we have that in lens
2013-07-24 11:04:53	haasn	ion: oh, neat; I was trying ‘l . f’
2013-07-24 11:04:54	ion	We should have a flat list of all the combinators in lens, with links to the haddocks.
2013-07-24 11:05:03	haasn	elliott: any idea where?
2013-07-24 11:05:38	Lethalman	danilo2, I did it and it's very easy
2013-07-24 11:05:46	ion	lethalman: Like monoids
2013-07-24 11:05:54	Lethalman	danilo2, just search for call haskell from c
2013-07-24 11:06:01	elliott	haasn: nope
2013-07-24 11:06:12	elliott	ion: that exists sorta
2013-07-24 11:06:14	elliott	use the index
2013-07-24 11:06:15	Lethalman	danilo2, you can call haskell functions like you would call C functions, then you can serialize haskell data types
2013-07-24 11:06:39	-->	alexander__b (~alexander@107.4.189.109.customer.cdi.no) has joined #haskell
2013-07-24 11:06:40	Lethalman	danilo2, you can run this example straight on http://www.haskell.org/haskellwiki/Calling_Haskell_from_C
2013-07-24 11:06:45	<--	dimday (~amcvega@49.144.194.156) has quit (Ping timeout: 264 seconds)
2013-07-24 11:06:47	-->	kakos (~kakos@c-174-51-43-7.hsd1.co.comcast.net) has joined #haskell
2013-07-24 11:07:11	<--	kazimir42 (~kazimir42@gateway/tor-sasl/kazimir42) has quit (Remote host closed the connection)
2013-07-24 11:07:16	-->	niklasb (~codeslay0@p5B312E5A.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 11:07:25	ion	haasn: Control.Lens.Lens.choosing
2013-07-24 11:07:31	-->	kongyang (~kongyang@116.226.82.155) has joined #haskell
2013-07-24 11:07:33	<--	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has quit (Remote host closed the connection)
2013-07-24 11:07:45	haasn	ion: great, thanks
2013-07-24 11:08:39	danilo2	Lethalman - I've seen that article - could you tell me more about this serialization please? How can I "deserialize" and "serialize back" these strctures in C++ code?
2013-07-24 11:09:25	<--	agumonkey (~agu@179.217.72.86.rev.sfr.net) has quit (Ping timeout: 248 seconds)
2013-07-24 11:10:11	-->	remdezx (959cc887@gateway/web/freenode/ip.149.156.200.135) has joined #haskell
2013-07-24 11:12:56	-->	chrisdotcode__ (~quassel@207.239.64.231) has joined #haskell
2013-07-24 11:13:28	<--	chrisdotcode_ (~quassel@207.239.64.231) has quit (Ping timeout: 245 seconds)
2013-07-24 11:13:53	haasn	ion: now I don't suppose there's a name for ‘choosing id’ ;-)
2013-07-24 11:13:58	-->	Tungsteno (~Tungsteno@unaffiliated/hlvsv) has joined #haskell
2013-07-24 11:14:53	ion	I think there was, look at Control.Lens.Lens
2013-07-24 11:14:58	-->	Reite (~Reite@cCF3F47C1.dhcp.as2116.net) has joined #haskell
2013-07-24 11:15:07	startling	:t choosing
2013-07-24 11:15:09	lambdabot	Not in scope: `choosing'
2013-07-24 11:15:14	haasn	I see one for choosing id id but I need to compose a lens onto the right side of an Either only
2013-07-24 11:15:18	startling	:t Control.Lens.choosing
2013-07-24 11:15:19	lambdabot	Functor f => Control.Lens.Type.LensLike f s t a b -> Control.Lens.Type.LensLike f s' t' a b -> Control.Lens.Type.LensLike f (Either s s') (Either t t') a b
2013-07-24 11:15:25	ion	haasn: oh, ok
2013-07-24 11:15:35	startling	:t Control.Lens.choosing id
2013-07-24 11:15:35	lambdabot	Functor f => Control.Lens.Type.LensLike f s' t' s t -> Control.Lens.Type.LensLike f (Either s s') (Either t t') s t
2013-07-24 11:15:43	startling	oh, I see.
2013-07-24 11:16:01	<--	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has quit (Ping timeout: 276 seconds)
2013-07-24 11:16:31	-->	egork8n (~egor.kuro@77.232.56.194) has joined #haskell
2013-07-24 11:16:36	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-24 11:17:02	<--	duikboot_ (~ad@s3eea3de7.adsl.online.nl) has quit (Quit: Leaving)
2013-07-24 11:17:56	-->	Yuu-chan (~yuu@2.mfisoft.ru) has joined #haskell
2013-07-24 11:18:43	-->	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has joined #haskell
2013-07-24 11:19:16	<--	MercurialAlchemi (~Mercurial@188.114.134.119) has quit (Ping timeout: 276 seconds)
2013-07-24 11:19:34	danilo2	Hi Everyone! :D I was asking about communication between C++ and Haskell and couple minutes ago Lethalman told me that I can use http://www.haskell.org/haskellwiki/Calling_Haskell_from_C and serialize haskell data structures - but It seems Lethalman is not here right now - could somebody explain how to serialize and deserialize haskell structures from C++ ?
2013-07-24 11:19:44	danilo2	My oryginal question was: What is the best method to call Haskell from C / C++? I'm writing a batch application (terminal based system) which should communicate with GHCI-like Haskell program. The Haskell program has got some data structures, which C++ code should operate on. :)
2013-07-24 11:19:53	haasn	Hmm, there's no neat alternative to <>~ when you're providing the right argument
2013-07-24 11:20:00	haasn	I have to go through the ugly l %~ (<> x)
2013-07-24 11:20:01	-->	HugoDaniel (~hugo@elab.fcsh.unl.pt) has joined #haskell
2013-07-24 11:20:14	-->	MercurialAlchemi (~Mercurial@sopona.idm.fr) has joined #haskell
2013-07-24 11:20:16	-->	iol (~eric@218.241.207.78) has joined #haskell
2013-07-24 11:21:04	supki	you mean left
2013-07-24 11:21:15	elliott	<>~ appends
2013-07-24 11:21:26	elliott	danilo2: look into the Storable typeclasses.
2013-07-24 11:21:33	<--	kcj (~casey@unaffiliated/kcj) has quit (Remote host closed the connection)
2013-07-24 11:21:34	elliott	danilo2: also hsc2hs and c2hs
2013-07-24 11:21:35	-->	WBit (~WBit@213.160.180.125) has joined #haskell
2013-07-24 11:22:16	<--	ntus1017 (~ntus1017@123.21.116.182) has quit (Remote host closed the connection)
2013-07-24 11:22:23	johnw	and c2hsc
2013-07-24 11:22:53	-->	hashcat (~chatzilla@1-172-246-58.dynamic.hinet.net) has joined #haskell
2013-07-24 11:23:09	merijn	johnw: Did I ever mention I <3 you for writing c2hsc?
2013-07-24 11:23:19	-->	joaopizani (~joaopizan@175pc204.sshunet.nl) has joined #haskell
2013-07-24 11:23:21	johnw	yes!  thank you :):)
2013-07-24 11:23:37	haasn	elliott: oh?
2013-07-24 11:23:49	johnw	it's followers are few but loyal :)
2013-07-24 11:23:49	elliott	haasn: well x += y is x = x + y
2013-07-24 11:23:55	elliott	so x <>= y is x = x <> y
2013-07-24 11:24:01	WBit	how hard is it to create a 2D Pong game in Haskell, for someone just coming from C++?
2013-07-24 11:24:04	elliott	unless edwardk made it dumb and the other way around, but I believe in him.
2013-07-24 11:24:05	 *	johnw used shake in anger for the first time today
2013-07-24 11:24:19	haasn	elliott: right, of course; it makes sense now
2013-07-24 11:24:19	-->	jbracker_ (~quassel@m-116.informatik.uni-kiel.de) has joined #haskell
2013-07-24 11:24:21	johnw	WBit: knowing no Haskell?  hard
2013-07-24 11:24:26	mauke	WBit: I'd start with hello world and cat
2013-07-24 11:24:42	WBit	Well, I started a week ago...
2013-07-24 11:24:53	--	jbracker_ is now known as jbracker
2013-07-24 11:25:04	<--	gpampara (~gpampara@174.136.1.66) has quit (Remote host closed the connection)
2013-07-24 11:25:35	WBit	I love the language, where should I place my next steps?
2013-07-24 11:26:10	danilo2	elliott: As I understand these tools help me call C/C++ from Haskell - I need to create binding in the other direction. Am I wrong?
2013-07-24 11:26:15	johnw	you are reading Learn You a Haskell now?
2013-07-24 11:26:29	-->	dschoepe (~dschoepe@unaffiliated/dschoepe) has joined #haskell
2013-07-24 11:26:39	<--	Swizec (~swizec@c-24-6-53-23.hsd1.ca.comcast.net) has quit (Ping timeout: 256 seconds)
2013-07-24 11:26:39	<--	startling (~user@2602:30a:2e1f:aa0:21b:63ff:fec8:d7b8) has quit (Ping timeout: 245 seconds)
2013-07-24 11:26:39	WBit	Inread Haskell for C programmers
2013-07-24 11:26:49	johnw	@where lyah
2013-07-24 11:26:49	lambdabot	http://www.learnyouahaskell.com/
2013-07-24 11:26:51	-->	shrekster (~small@c-24-18-241-158.hsd1.wa.comcast.net) has joined #haskell
2013-07-24 11:26:52	WBit	*I read
2013-07-24 11:26:54	johnw	I'd head there next
2013-07-24 11:26:59	<--	tsenart (~tsenart@62.217.45.197) has quit (Remote host closed the connection)
2013-07-24 11:27:00	johnw	it's fun
2013-07-24 11:27:22	elliott	danilo2: well, they can help you handle the data interchange stuff.
2013-07-24 11:27:28	elliott	it was just re: serialisation things
2013-07-24 11:27:28	Lethalman	danilo2, look for StablePtr and Storage
2013-07-24 11:27:44	WBit	How long will it take me to get to the level.. opengl and stuff?
2013-07-24 11:27:49	<--	vijaykiran (~user@213.208.206.28) has quit (Ping timeout: 246 seconds)
2013-07-24 11:27:57	<--	kongyang (~kongyang@116.226.82.155) has quit (Quit: Linkinus - http://linkinus.com)
2013-07-24 11:28:04	merijn	danilo2: All these tools are bidirectional
2013-07-24 11:28:07	hpaste	haasn annotated “clac2” with “clac2 (annotation)” at http://lpaste.net/91171#a91172
2013-07-24 11:28:12	haasn	and with the power of lenses, my clac2 is now complete
2013-07-24 11:28:22	-->	phischu (~pschuster@dhcp244.uni-koblenz.de) has joined #haskell
2013-07-24 11:29:13	merijn	WBit: It kinda depends on your experience. If you already know like C and opengl, that shouldn't be very tricky. If you don't, then you have to learn both opengl and the more advanced haskell tricks at the same time, which can be tricky
2013-07-24 11:29:30	merijn	WBit: As for Pong, I believe lens has a pong example?
2013-07-24 11:29:32	haasn	except it's bugged!
2013-07-24 11:29:34	haasn	gah
2013-07-24 11:29:55	merijn	WBit: https://github.com/ekmett/lens/blob/master/examples/Pong.hs
2013-07-24 11:30:20	danilo2	elliott, Lethalman, merijn: I Understand these tools (hsc2hs, c2hs AND c2hsc) are helping in solving the same problem - which one should I use in this case? (which one is most powerfull)? Or maybe I'm wrong with this sentence?
2013-07-24 11:30:33	-->	gpampara_off (~gpampara@174.136.1.66) has joined #haskell
2013-07-24 11:30:38	<--	Puffton (~Puffton@c-b75ae155.011-1-64736c11.cust.bredbandsbolaget.se) has quit (Quit: Leaving)
2013-07-24 11:30:38	-->	yacks (~py@103.6.158.102) has joined #haskell
2013-07-24 11:30:58	<--	kludge` (~comet@unaffiliated/espiral) has quit (Ping timeout: 245 seconds)
2013-07-24 11:31:06	-->	elhuman (~jahu@ipc632.bioinf.uni-jena.de) has joined #haskell
2013-07-24 11:31:34	elhuman	Hi. Is there a reason that there is no singleton function for lists?
2013-07-24 11:31:42	elhuman	Like Data.List.singleton x = [x]
2013-07-24 11:32:03	--	gpampara_off is now known as gpampara
2013-07-24 11:32:03	elliott	elhuman: "pure" or "return"
2013-07-24 11:32:12	elliott	or even (:[]) but that's ugly
2013-07-24 11:32:43	johnw	danilo2: c2hsc is meant to "bootstrap" you by creating a whole bunch of .hsc files that you don't have to write by hand.  It helps when you have an existing library with lots of headers
2013-07-24 11:32:48	WBit	merijn: thank you, looks good! I'll spend the next two weeks staring at ot though :)
2013-07-24 11:32:55	<--	PRISMBITCH (~PRISMBITC@178-85-121-235.dynamic.upc.nl) has quit (Ping timeout: 276 seconds)
2013-07-24 11:32:58	johnw	I think c2hs is better if you are writing the C library from scratch along with Haskell library
2013-07-24 11:33:05	elhuman	elliott: thanks, (:[]) is what I am looking for. Does not seem ugly to me :-)
2013-07-24 11:33:13	johnw	hsc2hs compiles the .hsc files that c2hsc produces, for example
2013-07-24 11:33:27	<--	catwiesel (~catwiesel@p579D3282.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2013-07-24 11:33:30	-->	tazjin (~tazjin@2a01:2b0:3041:3018:85dd:705e:6c9e:b728) has joined #haskell
2013-07-24 11:33:46	<--	dschoepe (~dschoepe@unaffiliated/dschoepe) has quit (Ping timeout: 246 seconds)
2013-07-24 11:34:02	danilo2	johnw: But I dont want to use C library from Haskell at all - I want the C program (or library) ONLY to call Haskell library
2013-07-24 11:34:14	johnw	oh, you want to go C -> Haskell only?
2013-07-24 11:34:29	danilo2	johnw: yes
2013-07-24 11:34:40	johnw	hmm
2013-07-24 11:34:51	-->	jozefg (~dannygrat@c-24-63-142-232.hsd1.ma.comcast.net) has joined #haskell
2013-07-24 11:35:01	danilo2	johnw: and return some results from Haskell bac to C of course
2013-07-24 11:35:07	danilo2	*back
2013-07-24 11:35:39	<--	augur (~augur@c-71-57-182-133.hsd1.fl.comcast.net) has quit (Remote host closed the connection)
2013-07-24 11:35:43	johnw	i've never tried doing that yet
2013-07-24 11:35:55	<--	elhuman (~jahu@ipc632.bioinf.uni-jena.de) has quit (Client Quit)
2013-07-24 11:36:01	-->	_br_ (~bjoern_fr@213-239-215-232.clients.your-server.de) has joined #haskell
2013-07-24 11:36:13	-->	augur (~augur@c-71-57-182-133.hsd1.fl.comcast.net) has joined #haskell
2013-07-24 11:36:23	johnw	as we speak I'm binding some C++ gSOAP code into Haskell, but that's Haskell originating the communication
2013-07-24 11:36:35	-->	gadjo (~gggg@109.102.72.188) has joined #haskell
2013-07-24 11:36:43	danilo2	I'm trying to do the opposite thing
2013-07-24 11:36:47	johnw	yeah
2013-07-24 11:37:05	-->	ceii (~ceii@43-65.1-85.cust.bluewin.ch) has joined #haskell
2013-07-24 11:39:26	<--	WBit (~WBit@213.160.180.125) has quit (Ping timeout: 240 seconds)
2013-07-24 11:40:17	-->	WBit (~WBit@static-dsl-125.213-160-180.telecom.sk) has joined #haskell
2013-07-24 11:40:28	merijn	danilo2: There's not much difference, between calling haskell from C and vice versa
2013-07-24 11:40:39	remdezx	Hi! I tried to use c2hsc but I got an error "c2hsc: Failed to run cpp: ExitFailure 1" I run it with command "c2hsc  --prefix=MyModule --gcc=/bin/gcc api.cpp"
2013-07-24 11:40:53	merijn	danilo2: http://www.haskell.org/haskellwiki/Calling_Haskell_from_C
2013-07-24 11:41:18	merijn	danilo2: Note that all uses of "Safe" in that C code should be replaced by YourModule
2013-07-24 11:41:40	-->	kingugo (~kingugo@196.46.245.50) has joined #haskell
2013-07-24 11:42:03	johnw	remdezx: does --verbose add any info?
2013-07-24 11:42:32	remdezx	merijn: Have you any good examples of how to do such calls?
2013-07-24 11:42:39	remdezx	johnw: no
2013-07-24 11:42:48	remdezx	"gcc: error: : Nie ma takiego pliku ani katalogu c2hsc: Failed to run cpp: ExitFailure 1"
2013-07-24 11:42:58	danilo2	merijn: do you have any examples of  (http://www.haskell.org/haskellwiki/Calling_Haskell_from_C) when haskell returns a structure?
2013-07-24 11:42:59	merijn	remdezx: The wiki entry I just linked is a complete program to do that, haskell + C
2013-07-24 11:42:59	<--	yacks (~py@103.6.158.102) has quit (Quit: Leaving)
2013-07-24 11:43:14	johnw	is there a cpp on your PATH?
2013-07-24 11:43:20	-->	kludge` (~comet@unaffiliated/espiral) has joined #haskell
2013-07-24 11:43:24	merijn	danilo2: That requires a Storable instance and custom data structure for the struct
2013-07-24 11:43:28	johnw	c2hsc has to run the C preprocessor
2013-07-24 11:44:28	merijn	danilo2: I have some code that uses c2hsc to produce a Storable instance and calling C from haskell using that, that plus the example of calling haskell from C should be enough
2013-07-24 11:44:31	remdezx	johnw: yes, it is in PATH
2013-07-24 11:44:31	merijn	danilo2: https://github.com/merijn/SNet2.0/tree/master/SNet/Interfaces
2013-07-24 11:44:32	danilo2	merijn: I'm trying to do it - anyway = if somebody has a working example with this Storable instance (which is read by C++ code) I would love to see it :)
2013-07-24 11:44:50	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2013-07-24 11:45:06	<--	WBit (~WBit@static-dsl-125.213-160-180.telecom.sk) has quit (Ping timeout: 264 seconds)
2013-07-24 11:45:16	danilo2	merijn: Thnak you :) looking at it right now
2013-07-24 11:45:29	merijn	danilo2: basically my code gets a Storable struct from C, if you just change the import to export it should work the other way around :p
2013-07-24 11:45:41	-->	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has joined #haskell
2013-07-24 11:45:50	johnw	remdezx: also, it's meant to be run on a header file, if that helps
2013-07-24 11:46:03	<--	Moggle_ (~chatzilla@S01060014d1c3a9f9.wp.shawcable.net) has quit (Ping timeout: 268 seconds)
2013-07-24 11:46:09	johnw	and you may need some --cppopts, to teach it where to find other headers, etc.
2013-07-24 11:47:02	danilo2	merijn: sorry for my silly question, but I dont see any "Storable" in your code
2013-07-24 11:47:04	<--	totos (~totoylis@ppp-94-67-127-23.home.otenet.gr) has quit (Ping timeout: 246 seconds)
2013-07-24 11:47:20	<--	Mortomes (~Moretomes@unaffiliated/mortomes) has quit
2013-07-24 11:47:55	<--	lukexi (~lukexi@cpe-72-229-189-117.nyc.res.rr.com) has quit (Quit: lukexi)
2013-07-24 11:48:22	remdezx	johnw: I was running on cpp, but when I changed to header file I still get an error
2013-07-24 11:49:19	-->	catwiesel (~catwiesel@p579D3282.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 11:49:22	merijn	danilo2: no, I'm running c2hsc to generate it from the C header. You can clone the thing and run "cabal build" to see the code that produces
2013-07-24 11:49:39	-->	m0g (~mog@136.206.48.176) has joined #haskell
2013-07-24 11:49:54	<--	LMolr (~LMolr@87.18.245.19) has quit (Ping timeout: 264 seconds)
2013-07-24 11:49:56	johnw	remdezx: what happens if you run "cpp <FILE>" yourself?
2013-07-24 11:49:57	danilo2	merijn: Thnak you! Checking it right now :)
2013-07-24 11:50:08	<--	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has quit (Ping timeout: 245 seconds)
2013-07-24 11:50:09	merijn	There's no forkIOWithUnmaskFinally, I guess?
2013-07-24 11:50:31	johnw	merijn: what would you like that to do?
2013-07-24 11:50:36	remdezx	johnw: it prints it
2013-07-24 11:50:38	-->	jibi (~jibi@77.42.48.122) has joined #haskell
2013-07-24 11:50:56	merijn	johnw: combine forkIOWithUnmask and forkFinally? :p
2013-07-24 11:50:58	<--	catwiesel (~catwiesel@p579D3282.dip0.t-ipconnect.de) has quit (Client Quit)
2013-07-24 11:51:03	johnw	remdezx: try dropping your --gcc argument, since gcc is the default?
2013-07-24 11:51:23	johnw	merijn: ah, neat
2013-07-24 11:51:28	 *	johnw is a big fan of lifted-base
2013-07-24 11:51:33	<--	amathew (~Adium@cpe-74-68-136-238.nyc.res.rr.com) has quit (Quit: Leaving.)
2013-07-24 11:51:36	remdezx	johnw: I tried it, still the same error
2013-07-24 11:52:09	johnw	remdezx: c2hsc is just calling runPreprocessor, from the language-c library, so I'm not sure why that would be choking for you.  What OS are you on?
2013-07-24 11:52:27	remdezx	johnw: fedora 18
2013-07-24 11:52:54	<--	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has quit (Ping timeout: 264 seconds)
2013-07-24 11:52:56	-->	Swizec (~swizec@c-24-6-53-23.hsd1.ca.comcast.net) has joined #haskell
2013-07-24 11:52:58	johnw	try: strace c2hsc  --prefix=MyModule api.cpp
2013-07-24 11:53:04	johnw	see what cpp command it's actually invoking
2013-07-24 11:53:06	-->	catwiesel (~catwiesel@p579D3282.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 11:53:30	<--	phischu (~pschuster@dhcp244.uni-koblenz.de) has quit (Ping timeout: 246 seconds)
2013-07-24 11:54:01	-->	dimday (~amcvega@114.108.252.168) has joined #haskell
2013-07-24 11:54:20	<--	gpampara (~gpampara@174.136.1.66) has quit (Quit: ZNC - http://znc.in)
2013-07-24 11:54:32	<--	dimday (~amcvega@114.108.252.168) has quit (Client Quit)
2013-07-24 11:54:34	-->	gpampara (~gpampara@174.136.1.66) has joined #haskell
2013-07-24 11:56:54	--	Valodim is now known as Trixie
2013-07-24 11:57:28	<--	gpampara (~gpampara@174.136.1.66) has quit (Client Quit)
2013-07-24 11:58:50	<--	Vorpal (~Vorpal@unaffiliated/vorpal) has quit (Quit: ZNC - http://znc.sourceforge.net)
2013-07-24 11:59:33	<--	juhp (~petersen@redhat/juhp) has quit (Ping timeout: 248 seconds)
2013-07-24 12:01:03	-->	tsenart (~tsenart@62.217.45.197) has joined #haskell
2013-07-24 12:01:28	merijn	hmm, if I nest async exception masks, do I only need to call the outer restore to restore exceptions?
2013-07-24 12:01:42	johnw	good question!
2013-07-24 12:01:51	johnw	pretty easy to test that one
2013-07-24 12:01:56	remdezx	johnw: thats the output: http://wklej.org/id/1093337/
2013-07-24 12:02:21	<--	bogdanp (~bogdan@94.52.234.107) has quit (Ping timeout: 256 seconds)
2013-07-24 12:03:12	-->	bogdanp (~bogdan@79.119.104.247) has joined #haskell
2013-07-24 12:04:13	<--	gusto (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has quit (Quit: leaving)
2013-07-24 12:04:29	johnw	oh, did I mention that c2hsc doesn't work with C++?
2013-07-24 12:04:40	merijn	The FFI doesn't work with C++
2013-07-24 12:04:57	-->	PRISMBITCH (~PRISMBITC@178-85-121-235.dynamic.upc.nl) has joined #haskell
2013-07-24 12:05:15	scshunt	hey, is anyone around familiar with TH? Like, really familiar? I'm trying to pull out all the type signatures from a typeclass and declare new functions with the same signatures, but I can't seem to pull out the type variables correctly.
2013-07-24 12:05:16	johnw	you're also using ccache; I wonder if that has an effect
2013-07-24 12:06:05	merijn	uhoh
2013-07-24 12:06:09	merijn	"ghc: ioManagerWakeup: write: Bad file descriptor"
2013-07-24 12:06:18	merijn	ghci doesn't like my test code it seems...
2013-07-24 12:07:02	--	Trixie is now known as Valodim
2013-07-24 12:07:15	merijn	well...
2013-07-24 12:07:19	merijn	that bricked ghci pretty hard
2013-07-24 12:08:09	<--	MnO2 (~MnO2@nat/yahoo/x-rtflovyvrnnhkabm) has quit (Quit: MnO2)
2013-07-24 12:08:15	-->	juhp (~petersen@redhat/juhp) has joined #haskell
2013-07-24 12:09:06	merijn	johnw: Not quite as easy to test as you'd think, apparently
2013-07-24 12:09:14	johnw	:)
2013-07-24 12:09:20	merijn	Does this hard hang your ghci?
2013-07-24 12:09:20	merijn	tid <- mask $ \restore -> mask $ \restore2 -> do { forkIO (threadDelay maxBound `catch` (\(_ :: SomeException) -> putStrLn "w00t!")) }
2013-07-24 12:09:50	johnw	<interactive>: kevent: invalid argument (Invalid argument)
2013-07-24 12:09:59	-->	totos (~totoylis@ppp-94-67-127-23.home.otenet.gr) has joined #haskell
2013-07-24 12:10:03	merijn	I have to kill -9 to get rid of ghci after that
2013-07-24 12:10:17	merijn	Not sure what's wrong, though. seems like it should be valid code
2013-07-24 12:11:00	<--	juhp (~petersen@redhat/juhp) has quit (Client Quit)
2013-07-24 12:11:17	merijn	if I remove the do it still produces the kevent error, but no hang
2013-07-24 12:11:49	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-24 12:11:53	-->	MnO2 (~MnO2@nat/yahoo/x-nqopiqfqlpakcqgr) has joined #haskell
2013-07-24 12:12:10	merijn	And I guess I need uninterruptibleMask, since threadDelay is interruptible anyway
2013-07-24 12:12:16	<--	dcoutts_ (~dcoutts@unaffiliated/dcoutts) has quit (Ping timeout: 246 seconds)
2013-07-24 12:12:40	-->	hajimehoshi (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has joined #haskell
2013-07-24 12:13:43	remdezx	johnw: it doesn't run with C too ;(
2013-07-24 12:13:55	-->	ndonaldson (~nic@61.69.24.113) has joined #haskell
2013-07-24 12:14:14	merijn	ok, unmasking the outer one works, unmasking the inner crashes, oddly enough
2013-07-24 12:14:17	<--	ataj_ (~ataj@ip68-6-121-160.sb.sd.cox.net) has quit (Remote host closed the connection)
2013-07-24 12:14:17	johnw	remdezx: i'm sorry, remdezx, it's 5:14 AM today and I've spent almost 10 hours battling the SOAP standard.  I'm beat.  Perhaps I can take this up with you another day?
2013-07-24 12:14:49	merijn	It seems odd that the io manager crashes on this, though...maybe it's just ghci
2013-07-24 12:14:54	remdezx	johnw: no problem
2013-07-24 12:15:20	remdezx	johnw: thank you for your help and have a nice day ;)
2013-07-24 12:15:23	<--	DigitalK1wi (~kiwi@li41-213.members.linode.com) has quit (Changing host)
2013-07-24 12:15:23	-->	DigitalK1wi (~kiwi@unaffiliated/digitalkiwi) has joined #haskell
2013-07-24 12:15:28	--	DigitalK1wi is now known as DigitalKiwi
2013-07-24 12:15:33	johnw	you too, I'm sorry c2hsc was such a bummer this morning
2013-07-24 12:15:37	<--	Swizec (~swizec@c-24-6-53-23.hsd1.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-07-24 12:15:41	int-e	merijn: which ghc version is that? ghc 7.6.3 handles this fine, including a followup killThread tid.
2013-07-24 12:15:56	int-e	(linux, x86_64)
2013-07-24 12:16:02	-->	juhp (~petersen@redhat/juhp) has joined #haskell
2013-07-24 12:16:06	-->	ataj (~ataj@ip68-6-121-160.sb.sd.cox.net) has joined #haskell
2013-07-24 12:16:35	-->	Quadrescence (~quad@unaffiliated/quadrescence) has joined #haskell
2013-07-24 12:17:04	<--	tazjin (~tazjin@2a01:2b0:3041:3018:85dd:705e:6c9e:b728) has quit (Ping timeout: 245 seconds)
2013-07-24 12:17:17	merijn	7.63 OSX
2013-07-24 12:18:12	-->	flowsnake (~flowsnake@cpc26-aztw25-2-0-cust894.aztw.cable.virginmedia.com) has joined #haskell
2013-07-24 12:18:21	hpaste	merijn pasted “hard hang on 7.6.3” at http://lpaste.net/91173
2013-07-24 12:18:29	merijn	That hangs hard on my system
2013-07-24 12:19:33	johnw	John: "How's it hanging, Merijn?"  Merijn: "Hard."  Hmm.
2013-07-24 12:20:02	merijn	in fact
2013-07-24 12:20:12	merijn	Compiling it and running the compiled code exits with: "test: select: Invalid argument"
2013-07-24 12:20:33	<--	jroesch_ (~jared@chips.whatbox.ca) has quit (Ping timeout: 245 seconds)
2013-07-24 12:20:42	johnw	night all
2013-07-24 12:20:43	-->	Taneb (~nathan@host-92-30-203-51.as13285.net) has joined #haskell
2013-07-24 12:20:52	-->	hexagoxel (~hexagoxel@gateway-230-0-23.netz.uni-kiel.de) has joined #haskell
2013-07-24 12:21:23	mauke	 EINVAL nfds is negative or the value contained within timeout is invalid.
2013-07-24 12:21:39	-->	ksf (~ksf@d013167.adsl.hansenet.de) has joined #haskell
2013-07-24 12:21:51	<--	peterhil (~peterhil@158.127.31.162) has quit (Ping timeout: 246 seconds)
2013-07-24 12:22:57	<--	catwiesel (~catwiesel@p579D3282.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2013-07-24 12:22:57	merijn	Wait what...
2013-07-24 12:23:01	merijn	"ghc: unrecognised flags: --with-rtsopts=-threaded"
2013-07-24 12:23:04	<--	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Remote host closed the connection)
2013-07-24 12:23:20	merijn	is it -threaded then?
2013-07-24 12:23:25	merijn	Not a runtime option?
2013-07-24 12:23:41	merijn	ah, apparently yes
2013-07-24 12:23:52	int-e	yes, it's a link time option.
2013-07-24 12:23:56	merijn	Weirder and weirder
2013-07-24 12:24:16	-->	JaRoel (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:24:16	int-e	ghci is using the threaded RTS though
2013-07-24 12:24:19	merijn	test: kevent: invalid argument (Invalid argument)
2013-07-24 12:24:19	merijn	test: <stdin>: hGetLine: invalid argument (Bad file descriptor)
2013-07-24 12:24:19	merijn	test: ioManagerDie: write: Bad file descriptor
2013-07-24 12:24:43	mauke	report all the bugs
2013-07-24 12:24:58	-->	roelbruggink (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:25:05	-->	Croms (~dv@92.109.224.112) has joined #haskell
2013-07-24 12:25:20	-->	RoXtein (~roxtein@di18.di.fct.unl.pt) has joined #haskell
2013-07-24 12:25:39	-->	JaRoel|4_ (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:25:58	<--	kingugo (~kingugo@196.46.245.50) has quit (Ping timeout: 245 seconds)
2013-07-24 12:26:17	merijn	I can't imagine this is a bug...how would any threaded haskell code ever have worked if this code is broken..
2013-07-24 12:26:41	int-e	does it work when compiled?
2013-07-24 12:26:42	mauke	schroedinbug
2013-07-24 12:27:25	int-e	(where by "work" I mean that it hands indefinitely, but can be interrupted by ^C, both before and after the first getLine)
2013-07-24 12:27:35	int-e	*hangs
2013-07-24 12:27:40	merijn	int-e: I'm compiling
2013-07-24 12:27:49	-->	Raynos (uid3611@gateway/web/irccloud.com/x-frsugiwmqdsivuvw) has joined #haskell
2013-07-24 12:27:52	merijn	It crashes straight away
2013-07-24 12:28:08	merijn	Even the simplified case
2013-07-24 12:28:20	int-e	fun.
2013-07-24 12:28:28	<--	JaRoel (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 245 seconds)
2013-07-24 12:28:36	<--	hexagoxel (~hexagoxel@gateway-230-0-23.netz.uni-kiel.de) has quit (Ping timeout: 268 seconds)
2013-07-24 12:28:57	hpaste	merijn pasted “crash on 7.6.3” at http://lpaste.net/91174
2013-07-24 12:29:02	<--	roelbruggink (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 240 seconds)
2013-07-24 12:29:06	-->	JaRoel (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:29:11	merijn	Can someone try that and see if they have different results?
2013-07-24 12:29:46	-->	roelbruggink (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:29:50	<--	JaRoel|4_ (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 240 seconds)
2013-07-24 12:30:00	merijn	Without -threaded it crashes on "select: Invalid argument"
2013-07-24 12:30:13	-->	ismlages (~ismlages@212.174.109.55) has joined #haskell
2013-07-24 12:30:14	merijn	With -threaded it crashes with the three errrors from earlier
2013-07-24 12:30:15	hpaste	mauke annotated “crash on 7.6.3” with “crash on 7.6.3 (annotation)” at http://lpaste.net/91174#a91175
2013-07-24 12:30:15	<--	MercurialAlchemi (~Mercurial@sopona.idm.fr) has quit (Ping timeout: 246 seconds)
2013-07-24 12:30:30	mauke	now with less language extensions
2013-07-24 12:30:33	<--	fayanne63 (~Fayanne63@c-67-182-147-102.hsd1.wa.comcast.net) has quit (Quit: fayanne63)
2013-07-24 12:30:34	scshunt	is there a better idiom than "liftM concat $ sequence foo"?
2013-07-24 12:30:49	merijn	:t concatM
2013-07-24 12:30:49	mauke	concat <$> sequence foo
2013-07-24 12:30:49	lambdabot	    Not in scope: `concatM'
2013-07-24 12:30:49	lambdabot	    Perhaps you meant one of these:
2013-07-24 12:30:50	lambdabot	      `concat' (imported from Data.List),
2013-07-24 12:30:50	hpc	it works for me with runghc
2013-07-24 12:30:52	-->	perspectival1 (~perspecti@6.77.broadband6.iol.cz) has joined #haskell
2013-07-24 12:30:57	hpc	7.4.1
2013-07-24 12:31:02	merijn	hmm
2013-07-24 12:31:25	<--	bogdanp (~bogdan@79.119.104.247) has quit (Ping timeout: 276 seconds)
2013-07-24 12:31:29	hpc	and it works compiled
2013-07-24 12:31:36	int-e	merijn: still works on Linux, compiled with vanilla and threaded RTSs, and with ghci. It could be your ghc build or a macos thing.
2013-07-24 12:32:00	merijn	int-e: I'm just using the OSX binary install
2013-07-24 12:32:18	mauke	merijn: works on 7.6.2, x86 linux
2013-07-24 12:32:20	<--	alexander__b (~alexander@107.4.189.109.customer.cdi.no) has quit (Changing host)
2013-07-24 12:32:20	-->	alexander__b (~alexander@fsf/member/alexanderb) has joined #haskell
2013-07-24 12:32:31	mauke	ghc {-O2,} {-threaded,}
2013-07-24 12:32:32	-->	JaRoel___ (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:32:58	merijn	Crashes in 7.7 I build myself too
2013-07-24 12:33:14	-->	bogdanp (~bogdan@94.52.234.107) has joined #haskell
2013-07-24 12:33:20	-->	ntus1017 (~ntus1017@123.21.116.182) has joined #haskell
2013-07-24 12:33:28	<--	JaRoel (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 245 seconds)
2013-07-24 12:33:52	-->	JaRoel (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:33:53	<--	roelbruggink (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 245 seconds)
2013-07-24 12:34:06	int-e	works fin with a 2 week old 7.7, for me.
2013-07-24 12:34:28	merijn	Narrowing down on the culprit
2013-07-24 12:34:46	merijn	looks like threadDelay is broken
2013-07-24 12:35:17	-->	JaRoel|4_ (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:35:59	hpc	pppsh, nobody needs threadDelay ;)
2013-07-24 12:36:00	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2013-07-24 12:36:02	-->	JaRoel|__ (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:36:33	merijn	I reduced the minimal case for crash to "main = threadDelay maxBound"
2013-07-24 12:36:44	-->	QInGW (~emacs@115.171.158.36) has joined #haskell
2013-07-24 12:36:46	<--	JaRoel___ (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 246 seconds)
2013-07-24 12:36:57	merijn	How the hell can threadDelay be broken on OSX without anyone noticing?!
2013-07-24 12:37:00	hpc	can you reduce it to something like main = threadDelay (whatever 5 seconds is)
2013-07-24 12:37:28	-->	unperceptually68 (~unpercept@c-67-182-147-102.hsd1.wa.comcast.net) has joined #haskell
2013-07-24 12:37:52	mauke	merijn: maybe maxBound is broken
2013-07-24 12:38:33	<--	JaRoel (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 264 seconds)
2013-07-24 12:38:40	merijn	mauke: I suspect a limit that's not being checked
2013-07-24 12:38:49	-->	jroesch (~jared@chips.whatbox.ca) has joined #haskell
2013-07-24 12:38:49	<--	hajimehoshi (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has quit (Read error: Connection reset by peer)
2013-07-24 12:39:01	merijn	Yeah, it seems the combination of "threadDelay maxBound" is dying
2013-07-24 12:39:11	-->	hajimehoshi (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has joined #haskell
2013-07-24 12:39:26	<--	JaRoel|4_ (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 240 seconds)
2013-07-24 12:39:41	-->	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has joined #haskell
2013-07-24 12:39:42	-->	vijaykiran (~user@213.208.206.28) has joined #haskell
2013-07-24 12:39:51	hpc	now write a patch!
2013-07-24 12:40:33	<--	JaRoel|__ (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 245 seconds)
2013-07-24 12:41:26	-->	JaRoel|__ (~jaroel|4d@lukkien-test1.customer.bit.nl) has joined #haskell
2013-07-24 12:42:09	<--	zerokarmaleft (zkl@morpheus.net) has quit (Ping timeout: 248 seconds)
2013-07-24 12:42:28	-->	JaRoel___ (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-24 12:42:29	-->	vishesh (~vishesh@122.177.46.129) has joined #haskell
2013-07-24 12:43:21	<--	Urchin[emacs] (~user@unaffiliated/urchin) has quit (Ping timeout: 264 seconds)
2013-07-24 12:43:28	merijn	Selfish GHC bastards, the functions I proposed alredy exist but aren't exported!
2013-07-24 12:43:56	hpc	haha
2013-07-24 12:44:00	merijn	threadWaitReadSTM
2013-07-24 12:44:05	merijn	I wants it :(
2013-07-24 12:44:11	hpc	whatis?
2013-07-24 12:44:30	merijn	"Fd -> IO (STM (), IO ())"
2013-07-24 12:44:46	merijn	i.e. the "STM ()" is retry until Fd is readable
2013-07-24 12:44:57	hpc	snazzy
2013-07-24 12:45:06	elliott	what is the IO ()
2013-07-24 12:45:11	merijn	It would let write a blocking poll between files and TChan's
2013-07-24 12:45:12	hpc	close, i take it
2013-07-24 12:45:30	merijn	No, it unregisters interest in the Fd
2013-07-24 12:45:34	hpc	ah, or that
2013-07-24 12:45:39	-->	dcoutts_ (~dcoutts@cpc6-oxfd21-2-0-cust475.4-3.cable.virginmedia.com) has joined #haskell
2013-07-24 12:45:39	<--	dcoutts_ (~dcoutts@cpc6-oxfd21-2-0-cust475.4-3.cable.virginmedia.com) has quit (Changing host)
2013-07-24 12:45:39	-->	dcoutts_ (~dcoutts@unaffiliated/dcoutts) has joined #haskell
2013-07-24 12:46:15	-->	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has joined #haskell
2013-07-24 12:46:22	<--	JaRoel|__ (~jaroel|4d@lukkien-test1.customer.bit.nl) has quit (Ping timeout: 276 seconds)
2013-07-24 12:46:41	<--	asQuirreL (~asQuirreL@31.221.60.107) has quit (Quit: Computer has gone to sleep.)
2013-07-24 12:46:58	-->	lemao (~lemao@189.60.37.42) has joined #haskell
2013-07-24 12:47:18	-->	Franciman (~quassel@host42-22-dynamic.13-79-r.retail.telecomitalia.it) has joined #haskell
2013-07-24 12:47:28	<--	MnO2 (~MnO2@nat/yahoo/x-nqopiqfqlpakcqgr) has quit (Quit: MnO2)
2013-07-24 12:47:30	-->	Wuzzy (~Wuzzy@p549FABE4.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 12:47:32	scshunt	argh
2013-07-24 12:47:56	scshunt	does anyone know a function which automatically makes functions to wrap classes when using existential types?
2013-07-24 12:48:01	scshunt	would be *really* handy right about now
2013-07-24 12:49:18	<--	ThomasLocke (~ThomasLoc@pdpc/supporter/active/thomaslocke) has quit (Ping timeout: 264 seconds)
2013-07-24 12:49:31	merijn	I'm betting GHC isn't checking for overflow on the clock
2013-07-24 12:49:50	supki	scshunt: can you show an example?
2013-07-24 12:50:34	<--	erochester (~erocheste@71.206.171.217) has quit (Quit: Leaving.)
2013-07-24 12:50:45	<--	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has quit (Ping timeout: 248 seconds)
2013-07-24 12:50:52	merijn	In the meantime, time for lunch
2013-07-24 12:51:02	-->	MercurialAlchemi (~Mercurial@188.114.134.119) has joined #haskell
2013-07-24 12:51:23	merijn	Wait!
2013-07-24 12:51:24	<--	perspectival1 (~perspecti@6.77.broadband6.iol.cz) has quit (Quit: Leaving.)
2013-07-24 12:51:33	merijn	You guys that tested my code
2013-07-24 12:51:39	merijn	32bit GHC or 64 bit ghc?
2013-07-24 12:51:54	-->	kofno (~kofno@cpe-24-165-210-251.neo.res.rr.com) has joined #haskell
2013-07-24 12:52:02	<--	MyrAchle (~MyrAchle@server56310.uk2net.com) has quit (Ping timeout: 268 seconds)
2013-07-24 12:52:46	<--	QInGW (~emacs@115.171.158.36) has quit (Read error: Connection reset by peer)
2013-07-24 12:53:09	int-e	merijn: 64bit so far
2013-07-24 12:53:49	scshunt	supki: I have a class Foo a where { bar :: a -> Int }
2013-07-24 12:54:05	merijn	hmm
2013-07-24 12:54:20	scshunt	I have generated a data Baz = forall a. (Foo a) => Baz a
2013-07-24 12:54:42	<--	mawuli (~mawuli@41-210-22-248-adsl-dyn.4u.com.gh) has quit (Ping timeout: 264 seconds)
2013-07-24 12:54:44	int-e	merijn: but no trouble with 7.6.1 on x86 either. (the computer is slow so I don't build new ghcs very often)
2013-07-24 12:54:52	scshunt	I would like to create the function barbaz :: forall a. (Foo a) => a -> Int ; barbaz (Baz f) = bar f
2013-07-24 12:54:56	<--	lambdaki_ (~lambdakin@cpe-66-25-204-143.sw.res.rr.com) has quit (Remote host closed the connection)
2013-07-24 12:55:08	scshunt	supki: doing the correct rewriting of type signatures seems laborious
2013-07-24 12:55:14	scshunt	and I'm wondering if someone has done this form e
2013-07-24 12:55:16	scshunt	*for me
2013-07-24 12:55:27	-->	lambdakind (~lambdakin@cpe-66-25-204-143.sw.res.rr.com) has joined #haskell
2013-07-24 12:55:27	<--	lambdakind (~lambdakin@cpe-66-25-204-143.sw.res.rr.com) has quit (Read error: Connection reset by peer)
2013-07-24 12:55:49	-->	lambdakind (~lambdakin@cpe-66-25-204-143.sw.res.rr.com) has joined #haskell
2013-07-24 12:56:08	scshunt	if I don't want to specify an explicit type signature I can do it easily also
2013-07-24 12:56:09	<--	dcoutts_ (~dcoutts@unaffiliated/dcoutts) has quit (Ping timeout: 246 seconds)
2013-07-24 12:56:39	merijn	int-e: OSX has a separate implementation of the code by GHC to obtain a timer
2013-07-24 12:56:57	merijn	int-e: So if my suspicions are right it shouldn't be reproducible on non-OSX anyway
2013-07-24 12:57:18	supki	scshunt: the type of barbaz doesn't look right
2013-07-24 12:57:39	scshunt	supki: err, you're right
2013-07-24 12:57:41	<--	xl1 (~xl@125.39.117.36) has quit (Quit: Leaving.)
2013-07-24 12:57:49	scshunt	forall a. (Foo a) => Baz a -> Int
2013-07-24 12:57:51	-->	[[zzzz]] (~q@node-uej.pool-125-24.dynamic.totbb.net) has joined #haskell
2013-07-24 12:58:07	<--	pygospa (~Pygosceli@kiel-d9bfcbd5.pool.mediaWays.net) has quit (Ping timeout: 246 seconds)
2013-07-24 12:58:10	supki	that doesn't look right either :)
2013-07-24 12:58:15	scshunt	why not?
2013-07-24 12:58:26	supki	Baz does not have type parameters
2013-07-24 12:58:33	scshunt	oh yeah
2013-07-24 12:58:34	supki	barbaz :: Baz -> Int
2013-07-24 12:58:37	scshunt	right
2013-07-24 12:58:55	supki	you get Foo constraint on a by pattern matching
2013-07-24 12:58:56	scshunt	but if there's some more complex function in Foo, I'll have to dive through and replace all instances of the type variable with Baz
2013-07-24 12:58:59	scshunt	seems bad
2013-07-24 12:59:02	int-e	merijn: yes, I didn't expect the 32 bit code to fail on linux, but it can't hurt to have verified that :)
2013-07-24 12:59:20	scshunt	hence: is there code somewhere that helps with this?
2013-07-24 13:00:09	-->	pygospa (~Pygosceli@kiel-5f768749.pool.mediaWays.net) has joined #haskell
2013-07-24 13:00:20	<--	copumpkin (~copumpkin@unaffiliated/copumpkin) has quit (Remote host closed the connection)
2013-07-24 13:00:21	<--	tsenart (~tsenart@62.217.45.197) has quit (Quit: Leaving...)
2013-07-24 13:00:49	<--	[[zzz]] (~q@118.174.200.155) has quit (Ping timeout: 248 seconds)
2013-07-24 13:00:57	-->	q66 (~quaker66@213.191.105.214) has joined #haskell
2013-07-24 13:01:50	-->	copumpkin (~copumpkin@unaffiliated/copumpkin) has joined #haskell
2013-07-24 13:03:32	<--	ravenvz (~vizier@ip-95-220-104-103.bb.netbynet.ru) has quit (Quit: Konversation terminated!)
2013-07-24 13:03:33	<--	xpika (~jrg@1.155.16.137) has quit (Ping timeout: 256 seconds)
2013-07-24 13:03:45	<--	totos (~totoylis@ppp-94-67-127-23.home.otenet.gr) has quit (Ping timeout: 268 seconds)
2013-07-24 13:05:15	--	volitek_ is now known as volitek
2013-07-24 13:07:13	<--	jjohnsson (~jjohnsson@host-95-199-15-223.mobileonline.telia.com) has quit (Ping timeout: 245 seconds)
2013-07-24 13:07:16	-->	htau (~chatzilla@adsl-76-237-226-99.dsl.rcsntx.sbcglobal.net) has joined #haskell
2013-07-24 13:10:43	<--	paullik (~paullik@unaffiliated/paullik) has quit (Ping timeout: 246 seconds)
2013-07-24 13:11:58	-->	jjohnsson (~jjohnsson@host-95-195-132-108.mobileonline.telia.com) has joined #haskell
2013-07-24 13:12:14	<--	Kiryx (~Kiryx@109.231.16.178) has quit (Ping timeout: 240 seconds)
2013-07-24 13:12:43	-->	asQuirreL (~asQuirreL@31.221.60.107) has joined #haskell
2013-07-24 13:13:22	-->	flebron (~flebron@190.18.146.246) has joined #haskell
2013-07-24 13:13:30	-->	gienah (~mwright@gentoo/developer/gienah) has joined #haskell
2013-07-24 13:15:06	-->	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has joined #haskell
2013-07-24 13:15:17	<--	csakatok_ (~csakatoku@em119-72-198-139.pool.e-mobile.ne.jp) has quit (Remote host closed the connection)
2013-07-24 13:16:21	-->	catwiesel (~catwiesel@wf0992.dip.tu-dresden.de) has joined #haskell
2013-07-24 13:17:23	--	ne is now known as luzie
2013-07-24 13:19:35	merijn	ok, it doesn't seem to be an overflow
2013-07-24 13:20:04	merijn	Or at least, the OSX clock gets converted to seconds (as double) and the threadDelay is added to it in Double form
2013-07-24 13:20:41	--	adnap_ is now known as adnap
2013-07-24 13:22:24	-->	jvrmaia (~jvrmaia@179.99.212.51) has joined #haskell
2013-07-24 13:22:57	-->	beckerb (~beckerb@2001:660:3013:3:7aac:c0ff:fea0:a7b4) has joined #haskell
2013-07-24 13:23:42	elliott	eww, it uses double?
2013-07-24 13:24:03	-->	tazjin (~tazjin@2a01:2b0:3041:3018:b1c4:90f7:8add:f181) has joined #haskell
2013-07-24 13:25:45	merijn	elliott: Yeah
2013-07-24 13:25:58	merijn	getMonotonicTime :: IO Double
2013-07-24 13:26:30	<--	l0p3n (~kristian@unaffiliated/l0p3n) has quit (Quit: WeeChat 0.4.0)
2013-07-24 13:26:57	hpc	that's one way of putting off the 2038 bug...
2013-07-24 13:26:57	<--	ntus1017 (~ntus1017@123.21.116.182) has quit (Remote host closed the connection)
2013-07-24 13:27:11	<--	MedDev (~MDev@68-112-203-118.dhcp.eucl.wi.charter.com) has quit (Ping timeout: 268 seconds)
2013-07-24 13:28:01	elliott	getMoronicTime
2013-07-24 13:28:06	Quadrescence	:)
2013-07-24 13:28:28	-->	roboguy_ (~roboguy_@98.156.67.41) has joined #haskell
2013-07-24 13:28:28	Quadrescence	elliott, why do you suppose Double is an issue?
2013-07-24 13:28:45	-->	k00mi (~koomi@dslb-188-105-102-080.pools.arcor-ip.net) has joined #haskell
2013-07-24 13:28:53	<--	jroesch (~jared@chips.whatbox.ca) has quit (Ping timeout: 245 seconds)
2013-07-24 13:29:21	-->	jroesch (~jared@chips.whatbox.ca) has joined #haskell
2013-07-24 13:30:13	Quadrescence	I can see only two other reasonable solutions: using a rational number, or using some abstract unit, and having another constant: timeUnitsPerSecond.
2013-07-24 13:30:45	<--	descender (~heh@175.143.38.221) has quit (Ping timeout: 256 seconds)
2013-07-24 13:31:03	-->	dschoepe (~dschoepe@unaffiliated/dschoepe) has joined #haskell
2013-07-24 13:32:05	elliott	threadDelay doesn't take a Double anyway.
2013-07-24 13:33:09	<--	roboguy_ (~roboguy_@98.156.67.41) has quit (Ping timeout: 264 seconds)
2013-07-24 13:33:53	-->	blueonyx (~blueonyx@p578be0b3.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 13:33:54	<--	blueonyx (~blueonyx@p578be0b3.dip0.t-ipconnect.de) has quit (Changing host)
2013-07-24 13:33:54	-->	blueonyx (~blueonyx@unaffiliated/blueonyx) has joined #haskell
2013-07-24 13:35:27	tulcod	"cabal: The following packages are likely to be broken by the reinstalls:". okay, sure, can't cabal rebuild them for me?
2013-07-24 13:35:51	dcoutts	tulcod: sure, just ask it to do so
2013-07-24 13:36:00	tulcod	how?
2013-07-24 13:36:07	dcoutts	tulcod: use --dry-run and add those to the list of targets
2013-07-24 13:36:14	tulcod	ugh :-/
2013-07-24 13:37:31	tulcod	dcoutts: okay, i added them to the list of targets, but they're still showing up
2013-07-24 13:38:02	dcoutts	older versions thereof?
2013-07-24 13:38:03	-->	miclorb (~textual@ppp121-44-97-136.lns20.syd6.internode.on.net) has joined #haskell
2013-07-24 13:38:20	dcoutts	if you're happy to break those ones, you can (or unregister them)
2013-07-24 13:38:48	tulcod	dcoutts: ah yes, older versions :)
2013-07-24 13:39:07	-->	favonia (~favonia@pdpc/supporter/student/favonia) has joined #haskell
2013-07-24 13:40:31	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-24 13:40:45	<--	danilo2 (959cc887@gateway/web/freenode/ip.149.156.200.135) has quit (Ping timeout: 250 seconds)
2013-07-24 13:41:06	-->	nicklasbo (~nicklas@gw1.imm.dtu.dk) has joined #haskell
2013-07-24 13:41:15	tulcod	dcoutts: fixed it by giving targets in a different order
2013-07-24 13:41:21	tulcod	(which is weird)
2013-07-24 13:41:32	dcoutts	mm, that is a bit odd
2013-07-24 13:41:50	dcoutts	tulcod: is the list of packages (versions) it's going to install different?
2013-07-24 13:41:57	dcoutts	ie in the --dry-run output
2013-07-24 13:42:09	-->	yogert (~Adium@ool-457128b5.dyn.optonline.net) has joined #haskell
2013-07-24 13:42:17	-->	hexagoxel (~hexagoxel@gateway-230-0-23.netz.uni-kiel.de) has joined #haskell
2013-07-24 13:42:28	-->	gpampara (~gpampara@174.136.1.66) has joined #haskell
2013-07-24 13:42:29	tulcod	dcoutts: sorry, it's already installing
2013-07-24 13:43:12	-->	paullik (~paullik@unaffiliated/paullik) has joined #haskell
2013-07-24 13:43:14	<--	Yuu-chan (~yuu@2.mfisoft.ru) has left #haskell
2013-07-24 13:43:46	tulcod	dcoutts: the only new thing was the first package, threepenny-gui, which i couldn't find, so i had to cabal update. after moving the two packages that still showed up as "going to be broken" to the front, it started installing without error
2013-07-24 13:43:50	-->	jvrmaia_ (~jvrmaia@179.99.212.51) has joined #haskell
2013-07-24 13:44:12	dcoutts	tulcod: oh doing a cabal update in between could easily change the results
2013-07-24 13:44:31	<--	jvrmaia_ (~jvrmaia@179.99.212.51) has quit (Remote host closed the connection)
2013-07-24 13:44:52	dcoutts	tulcod: changing the target order can certainly change the solution the solver finds
2013-07-24 13:44:52	tulcod	dcoutts: no, i first did the update, then tried cabal install threepenny-gui, got a bunch of troublesome packages, added those to the list, two remained, moved them to the front, it statred installing
2013-07-24 13:45:20	-->	synonymous (~Adium@60-242-194-203.static.tpgi.com.au) has joined #haskell
2013-07-24 13:45:25	dcoutts	there can be many solutions, and the target order can affect the search order
2013-07-24 13:45:42	<--	miclorb (~textual@ppp121-44-97-136.lns20.syd6.internode.on.net) has quit (Quit: miclorb)
2013-07-24 13:46:03	tulcod	dcoutts: well but clearly one solution is better than the other
2013-07-24 13:46:04	<--	iol (~eric@218.241.207.78) has quit (Ping timeout: 246 seconds)
2013-07-24 13:46:44	-->	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has joined #haskell
2013-07-24 13:47:28	<--	asQuirreL (~asQuirreL@31.221.60.107) has quit (Quit: Computer has gone to sleep.)
2013-07-24 13:50:03	-->	Ue (~Ue@unaffiliated/ue) has joined #haskell
2013-07-24 13:50:33	<--	Taneb (~nathan@host-92-30-203-51.as13285.net) has quit (Ping timeout: 264 seconds)
2013-07-24 13:50:58	<--	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has quit (Ping timeout: 245 seconds)
2013-07-24 13:50:58	mr-	tulcod: It is not always possible to look at all solutions. The search tree can be quite big
2013-07-24 13:51:48	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-24 13:51:52	tulcod	okay, but this kind of user intervention should not be necessary
2013-07-24 13:52:09	<--	jibi (~jibi@77.42.48.122) has quit (Quit: .)
2013-07-24 13:52:28	<--	thunderrd (~thunderrd@119.42.94.34) has quit (Ping timeout: 268 seconds)
2013-07-24 13:52:43	<--	Sgeo (~quassel@ool-ad034ea6.dyn.optonline.net) has quit (Read error: Connection reset by peer)
2013-07-24 13:53:46	-->	Pranz (~jesper-fr@c80-217-216-30.bredband.comhem.se) has joined #haskell
2013-07-24 13:54:20	-->	dgpratt (~dpratt71@207.182.200.34) has joined #haskell
2013-07-24 13:55:34	-->	amyers (~quassel@128.177.89.135) has joined #haskell
2013-07-24 13:55:42	<--	perspectival (~perspecti@35.158.broadband4.iol.cz) has quit (Quit: Leaving.)
2013-07-24 13:55:59	<--	tazjin (~tazjin@2a01:2b0:3041:3018:b1c4:90f7:8add:f181) has quit (Ping timeout: 264 seconds)
2013-07-24 13:56:00	-->	perspectival (~perspecti@35.158.broadband4.iol.cz) has joined #haskell
2013-07-24 13:56:02	mr-	I agree.. it is annoying that order matters.. but it does
2013-07-24 13:56:09	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2013-07-24 13:56:30	-->	asQuirreL (~asQuirreL@31.221.60.107) has joined #haskell
2013-07-24 13:57:10	 *	hackagebot graph-visit 0.1.0.2 - Graph walk abstraction  http://hackage.haskell.org/package/graph-visit-0.1.0.2 (AtzeDijkstra)
2013-07-24 13:57:14	tulcod	so that's a bug then?
2013-07-24 13:58:21	-->	Philonous (~Philonous@dslb-178-005-138-065.pools.arcor-ip.net) has joined #haskell
2013-07-24 14:01:23	-->	voxpopuli (~fanservic@c-24-3-22-132.hsd1.pa.comcast.net) has joined #haskell
2013-07-24 14:01:24	mr-	I don't think so. It really is just an issue of limited time
2013-07-24 14:01:33	<--	remdezx (959cc887@gateway/web/freenode/ip.149.156.200.135) has quit (Ping timeout: 250 seconds)
2013-07-24 14:01:54	-->	Azdle (~patrick@c-174-53-163-211.hsd1.mn.comcast.net) has joined #haskell
2013-07-24 14:02:09	 *	hackagebot macosx-make-standalone 0.1.0.1 - Make a macosx app standalone deployable  http://hackage.haskell.org/package/macosx-make-standalone-0.1.0.1 (AtzeDijkstra)
2013-07-24 14:02:41	tulcod	mr-: i never had this with my distro's package managers
2013-07-24 14:03:29	merijn	ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ ಠ_ಠ
2013-07-24 14:03:35	merijn	I found the error
2013-07-24 14:03:41	merijn	Shame!
2013-07-24 14:03:55	-->	petermw (~scpmw@cslin101.csunix.comp.leeds.ac.uk) has joined #haskell
2013-07-24 14:04:07	--	anildigital is now known as anildigital_away
2013-07-24 14:04:38	-->	thunderrd (~thunderrd@61.7.189.194) has joined #haskell
2013-07-24 14:05:35	supki	tulcod: distro package manager solves different problem
2013-07-24 14:05:36	merijn	Someone is converting a Double to an Int by use of ceil and then converting Int to CInt without any bounds checking
2013-07-24 14:05:55	-->	stepkut (~user@c-24-12-184-84.hsd1.il.comcast.net) has joined #haskell
2013-07-24 14:07:33	<--	bogdanp (~bogdan@94.52.234.107) has quit (Ping timeout: 248 seconds)
2013-07-24 14:07:45	-->	bgilbert (~gilbertw1@108-239-26-79.lightspeed.chtnsc.sbcglobal.net) has joined #haskell
2013-07-24 14:07:48	<--	flebron (~flebron@190.18.146.246) has quit
2013-07-24 14:08:38	<--	wormphlegm (~wormphleg@24.130.9.50) has quit (Ping timeout: 240 seconds)
2013-07-24 14:09:04	-->	wormphlegm (~wormphleg@24.130.9.50) has joined #haskell
2013-07-24 14:09:47	-->	bogdanp (~bogdan@79.119.105.172) has joined #haskell
2013-07-24 14:10:05	-->	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has joined #haskell
2013-07-24 14:10:15	<--	ataj (~ataj@ip68-6-121-160.sb.sd.cox.net) has quit (Remote host closed the connection)
2013-07-24 14:10:58	<--	vijaykiran (~user@213.208.206.28) has quit (Ping timeout: 245 seconds)
2013-07-24 14:11:14	-->	nexx (~nexx@dslb-188-108-124-185.pools.arcor-ip.net) has joined #haskell
2013-07-24 14:12:00	merijn	int-e: Care to check something for me?
2013-07-24 14:12:00	-->	mawuli (~mawuli@41.66.226.139) has joined #haskell
2013-07-24 14:12:34	int-e	merijn: maybe
2013-07-24 14:12:36	merijn	int-e: I'd be interested in maxBound of Int/CInt  on your system
2013-07-24 14:12:49	<--	PRISMBITCH (~PRISMBITC@178-85-121-235.dynamic.upc.nl) has quit (Ping timeout: 268 seconds)
2013-07-24 14:13:19	-->	Icewing (~Icewing@unaffiliated/icewing) has joined #haskell
2013-07-24 14:13:23	int-e	(maxBound,maxBound) :: (Int,CInt) => (9223372036854775807,2147483647)
2013-07-24 14:13:41	merijn	ok, so that's the same
2013-07-24 14:13:47	-->	normanrichards (~normanric@70.114.215.220) has joined #haskell
2013-07-24 14:13:56	<--	cseder (~cseder@cA049BF51.dhcp.as2116.net) has quit (Quit: Leaving)
2013-07-24 14:13:57	-->	ntus1017 (~ntus1017@123.21.116.182) has joined #haskell
2013-07-24 14:14:01	merijn	Basically, the only reason why everyone's runtime system isn't crashing all the time is the fact that linux is really lax
2013-07-24 14:14:30	HugoDaniel	ei merijn how is zmtp3 going ?
2013-07-24 14:14:33	merijn	There is a huge coercion flaw in the RTS and it's just sheer coincidence that linux treats any negative value as an infinite timeout
2013-07-24 14:14:45	merijn	Bug filing time!
2013-07-24 14:15:06	int-e	[pid  8041] poll([{fd=7, events=POLLIN}, {fd=9, events=POLLIN}], 2, -1511828488 <unfinished ...>
2013-07-24 14:15:12	merijn	int-e: Yup, same here
2013-07-24 14:15:13	int-e	merijn: yeah looks like it
2013-07-24 14:15:30	merijn	int-e: But OSX is much stricter than linux and only accepts -1 for infinite timeouts
2013-07-24 14:15:44	 *	elliott wishes we were exposed a way to do infinite timeouts
2013-07-24 14:15:46	int-e	(the other reason is that threadDelay maxBound calls should be pretty rare)
2013-07-24 14:15:47	<--	paullik (~paullik@unaffiliated/paullik) has quit (Read error: Operation timed out)
2013-07-24 14:16:22	-->	Todor (~todor@ip-89-102-235-238.net.upcbroadband.cz) has joined #haskell
2013-07-24 14:16:28	merijn	int-e: Really? I see them quite frequently as example of "block indefinitely until X happens"
2013-07-24 14:16:54	supki	why not use MVar then?
2013-07-24 14:17:08	Todor	hi everybody
2013-07-24 14:17:36	int-e	merijn: But X should involve communication, so yes, I would expect an MVar to be involved.
2013-07-24 14:17:58	-->	tbn (~user@90-227-170-59-no123.tbcn.telia.com) has joined #haskell
2013-07-24 14:18:12	int-e	ymmv
2013-07-24 14:18:12	-->	donri (~dag@unaffiliated/dagodenhall) has joined #haskell
2013-07-24 14:18:15	--	tbn is now known as Guest24115
2013-07-24 14:18:42	merijn	int-e: or just an async exception
2013-07-24 14:18:47	-->	DoomBoom (~DoomBoom@86.89.90.229) has joined #haskell
2013-07-24 14:19:11	<--	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has quit (Remote host closed the connection)
2013-07-24 14:19:23	-->	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has joined #haskell
2013-07-24 14:19:40	--	Guest24115 is now known as tbn`
2013-07-24 14:19:46	-->	nomeata (nobody@nomeata.de) has joined #haskell
2013-07-24 14:19:48	--	tbn` is now known as tbn
2013-07-24 14:19:57	-->	shreesh (~shreesh@209.104.235.1) has joined #haskell
2013-07-24 14:20:08	<--	petapetapeta (~petapetap@6164198-cl69.boa.fiberby.dk) has quit (Ping timeout: 245 seconds)
2013-07-24 14:21:05	<--	jmcarthur_mobile (~jmcarthur@md12d36d0.tmodns.net) has quit (Read error: Connection reset by peer)
2013-07-24 14:21:27	-->	Mortomes (~Moretomes@unaffiliated/mortomes) has joined #haskell
2013-07-24 14:21:34	-->	jmcarthur_mobile (~jmcarthur@md12d36d0.tmodns.net) has joined #haskell
2013-07-24 14:21:43	-->	vijaykiran (~user@213.208.206.28) has joined #haskell
2013-07-24 14:21:54	-->	MyrAchle (~MyrAchle@server56310.uk2net.com) has joined #haskell
2013-07-24 14:22:04	<--	bobthenameless_ (~bobthenam@c-71-227-128-93.hsd1.wa.comcast.net) has quit (Ping timeout: 268 seconds)
2013-07-24 14:22:05	Todor	I'm new to haskell and I'd like to solve this problem:
2013-07-24 14:22:05	Todor	I have a list [(A, 1), (A, 2), (A,3), (B,1), (B,3)] and i'd like to change it into [("A", (1,2,3)), ("B",(1,3))]. Can somebody direct me how to solve it?
2013-07-24 14:22:43	<--	jmcarthur_mobile (~jmcarthur@md12d36d0.tmodns.net) has quit (Read error: Connection reset by peer)
2013-07-24 14:22:55	Pranz	Todor, map (show . second)
2013-07-24 14:23:07	Pranz	Todor, first* instead of second
2013-07-24 14:23:15	mauke	Todor: are all common keys adjacent?
2013-07-24 14:23:17	Pranz	first and second processes a function on only one part of the tuple
2013-07-24 14:23:27	<--	copumpkin (~copumpkin@unaffiliated/copumpkin) has quit (Ping timeout: 256 seconds)
2013-07-24 14:23:34	-->	jmcarthur_mobile (~jmcarthur@md12d36d0.tmodns.net) has joined #haskell
2013-07-24 14:23:41	Pranz	and show turns a data structure into a string
2013-07-24 14:23:52	<--	dmwit (~dmwit@pool-71-175-246-41.phlapa.east.verizon.net) has quit (Ping timeout: 256 seconds)
2013-07-24 14:23:59	-->	copumpkin (~copumpkin@unaffiliated/copumpkin) has joined #haskell
2013-07-24 14:24:06	Todor	eh. slowly please :).
2013-07-24 14:24:25	Todor	the first list has strings too. it was my typo
2013-07-24 14:24:28	nilg```	is there some nothing "instruction" in Haskell? Something that has the IO monad type but does nothing?
2013-07-24 14:24:32	Pranz	Hmm, I didn't read your problem correctly
2013-07-24 14:24:35	Pranz	ah
2013-07-24 14:24:36	-->	Taneb (~nathan@host-92-30-160-144.as13285.net) has joined #haskell
2013-07-24 14:24:41	-->	elediaz (~elediaz@92.59.136.176) has joined #haskell
2013-07-24 14:24:47	Pranz	then
2013-07-24 14:24:52	mauke	Todor: so are they adjacent?
2013-07-24 14:24:53	Todor	they are sorted by first element
2013-07-24 14:24:57	mauke	ok
2013-07-24 14:25:15	Pranz	Todor, do the (1,2,3) have to be a n-tuple?
2013-07-24 14:25:23	Todor	i'd like them to be
2013-07-24 14:25:24	Pranz	or can it be [1,2,3] instead?
2013-07-24 14:25:27	Pranz	ah
2013-07-24 14:25:28	mauke	Todor: they can't be
2013-07-24 14:25:30	-->	yacks (~py@103.6.158.102) has joined #haskell
2013-07-24 14:25:33	mauke	that would be a type error
2013-07-24 14:25:37	Todor	ah, i don't mind a list
2013-07-24 14:25:40	Pranz	Todor, lists are homogenous
2013-07-24 14:25:43	Todor	aha. :)
2013-07-24 14:25:44	mauke	> groupBy (comparing fst) [("A", 1), ("A", 2), ("A", 3), ("B", 1), ("B", 3)]
2013-07-24 14:25:45	lambdabot	  Couldn't match type `GHC.Types.Ordering' with `GHC.Types.Bool'
2013-07-24 14:25:45	lambdabot	 Expected ty...
2013-07-24 14:25:46	<--	mawuli (~mawuli@41.66.226.139) has quit (Ping timeout: 268 seconds)
2013-07-24 14:25:54	<--	ndonaldson (~nic@61.69.24.113) has quit (Quit: Leaving)
2013-07-24 14:25:55	-->	paullik (~paullik@unaffiliated/paullik) has joined #haskell
2013-07-24 14:25:58	mauke	> groupBy ((==) `on` fst) [("A", 1), ("A", 2), ("A", 3), ("B", 1), ("B", 3)]
2013-07-24 14:25:59	lambdabot	  [[("A",1),("A",2),("A",3)],[("B",1),("B",3)]]
2013-07-24 14:26:13	<--	niklasb (~codeslay0@p5B312E5A.dip0.t-ipconnect.de) has quit (Ping timeout: 248 seconds)
2013-07-24 14:26:22	<--	yogert (~Adium@ool-457128b5.dyn.optonline.net) has quit (Quit: Leaving.)
2013-07-24 14:26:51	-->	iol (~eric@114.254.42.202) has joined #haskell
2013-07-24 14:27:03	mauke	> (map (fst . head &&& map snd) . groupBy ((==) `on` fst)) [("A", 1), ("A", 2), ("A", 3), ("B", 1), ("B", 3)]
2013-07-24 14:27:04	lambdabot	  [("A",[1,2,3]),("B",[1,3])]
2013-07-24 14:27:23	<--	MyrAchle (~MyrAchle@server56310.uk2net.com) has quit
2013-07-24 14:27:41	-->	vlaeter (~vlaeter@62.82.132.62) has joined #haskell
2013-07-24 14:27:42	Todor	hmm... i'd say it's looks easy, when you know the language :) thank you guys!
2013-07-24 14:28:17	Pranz	It's possible to do a more readable variant
2013-07-24 14:28:24	<--	vishesh (~vishesh@122.177.46.129) has quit (Quit: WeeChat 0.4.1)
2013-07-24 14:28:30	Todor	is it?
2013-07-24 14:28:38	mauke	do you have a constructive proof?
2013-07-24 14:28:42	<--	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has quit (Quit: Leaving.)
2013-07-24 14:28:51	nilg```	got the answer to the nothing IO: return()
2013-07-24 14:29:18	<--	Azdle (~patrick@c-174-53-163-211.hsd1.mn.comcast.net) has quit (Read error: Operation timed out)
2013-07-24 14:29:24	Pranz	mauke, you can always make something more readable, I'm not complaining on your solution
2013-07-24 14:29:39	-->	schoppenhauer (~quassel@unaffiliated/schoppenhauer) has joined #haskell
2013-07-24 14:29:52	Pranz	mauke, just saying that to expect a oneliner of such a solution to be easy to read isn't something you can expect
2013-07-24 14:30:00	Pranz	it was directed to Todor
2013-07-24 14:30:02	-->	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has joined #haskell
2013-07-24 14:30:11	mauke	no, I'm interested in other solutions to the problem
2013-07-24 14:30:56	<--	hajimehoshi (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has quit (Remote host closed the connection)
2013-07-24 14:31:14	-->	novascorpio (~matt@cpe-98-14-205-174.nyc.res.rr.com) has joined #haskell
2013-07-24 14:31:31	Todor	may I ask another question? What I have to include to get `on`?
2013-07-24 14:31:49	mauke	@hoogle on
2013-07-24 14:31:49	lambdabot	Data.Function on :: (b -> b -> c) -> (a -> b) -> a -> a -> c
2013-07-24 14:31:49	lambdabot	Control.Exception.Base onException :: IO a -> IO b -> IO a
2013-07-24 14:31:49	lambdabot	Control.Exception onException :: IO a -> IO b -> IO a
2013-07-24 14:31:52	-->	germanmushroom (~remco@s5596529d.adsl.online.nl) has joined #haskell
2013-07-24 14:31:58	-->	erochester (~erocheste@d-137-155-210.bootp.Virginia.EDU) has joined #haskell
2013-07-24 14:32:10	Todor	wow :) you have nice bots here :)
2013-07-24 14:32:33	Todor	thank you.
2013-07-24 14:32:49	int-e	@botsnack
2013-07-24 14:32:49	lambdabot	:)
2013-07-24 14:32:49	klugez	Todor: Hoogle is also a website you can use: http://www.haskell.org/hoogle/
2013-07-24 14:33:00	Todor	@botsnack
2013-07-24 14:33:00	lambdabot	:)
2013-07-24 14:33:01	-->	Moataz-E (~Moataz-E@92.99.104.175) has joined #haskell
2013-07-24 14:33:20	Lethalman	if I want to do if x > 10 then foo else if x == 10 then bar else baz
2013-07-24 14:33:32	Lethalman	is there anything I can use instead of if/then/else ?
2013-07-24 14:33:38	alexander__b	Lethalman: ... case?
2013-07-24 14:33:39	<--	jmcarthur_mobile (~jmcarthur@md12d36d0.tmodns.net) has quit (Ping timeout: 256 seconds)
2013-07-24 14:33:40	<--	Wuzzy (~Wuzzy@p549FABE4.dip0.t-ipconnect.de) has quit (Quit: Wuzzy)
2013-07-24 14:33:44	alexander__b	pattern matching?
2013-07-24 14:33:47	Lethalman	alexander__b, but then I need guards
2013-07-24 14:33:49	alexander__b	yes?
2013-07-24 14:33:56	mauke	case compare x 10 of GT -> foo; EQ -> bar; LT -> baz
2013-07-24 14:34:04	-->	peterhil (~peterhil@158.127.31.162) has joined #haskell
2013-07-24 14:34:07	Lethalman	mauke, that's nicer thanks
2013-07-24 14:34:37	<--	jkoppel (~jkoppel@c-98-234-184-221.hsd1.ca.comcast.net) has quit (Quit: jkoppel)
2013-07-24 14:34:38	<--	kushal (kdas@fedora/kushal) has quit (Quit: Leaving)
2013-07-24 14:34:41	k00mi	there is also MultiWayIf
2013-07-24 14:34:42	Lethalman	but is there something like case x of f x -> .. ; g x -> .....;
2013-07-24 14:34:43	Lethalman	?
2013-07-24 14:34:46	alexander__b	be generous with the '\n's.
2013-07-24 14:34:47	<--	bogdanp (~bogdan@79.119.105.172) has quit (Ping timeout: 256 seconds)
2013-07-24 14:34:50	vlaeter	Hi!  I think this is the right room for this, as cabal is tumbleweed. Anyway; I came quite far getting Phooey to work on my Mac, well actually, I came as far as having a working wx version (by mostly manually cabal unpack and then finding on internet what things to change to get it working) But now i'm stuck at Reactive with this; http://pastebin.com/42zSdvat . If I would be able to actually understand what this is saying, I might be able to fix it, but I 
2013-07-24 14:34:50	vlaeter	no clue what this error means… Can someone help?
2013-07-24 14:34:50	Lethalman	that is, without using guards
2013-07-24 14:34:56	mauke	The paste 42zSdvat has been copied to http://lpaste.net/91176
2013-07-24 14:35:29	Lethalman	aaah yes
2013-07-24 14:35:34	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-24 14:35:37	Lethalman	k00mi, awesome that's what I was looking for :-)
2013-07-24 14:35:47	-->	xplat_ (~james@67.205.253.80) has joined #haskell
2013-07-24 14:35:51	-->	bogdanp (~bogdan@79.119.109.243) has joined #haskell
2013-07-24 14:35:56	-->	safinaskar (~user@178.204.95.68) has joined #haskell
2013-07-24 14:36:04	-->	jmcarthur_mobile (~jmcarthur@md12d36d0.tmodns.net) has joined #haskell
2013-07-24 14:36:28	-->	jozefk (jozefk@unaffiliated/jozefk) has joined #haskell
2013-07-24 14:36:33	supki	vlaeter: that looks like you're trying to install something really ancient
2013-07-24 14:37:09	Lethalman	argh MultiWayIf not supported by emacs :-(
2013-07-24 14:37:10	<--	Beetny (~Beetny@ppp118-208-42-134.lns20.bne1.internode.on.net) has quit (Ping timeout: 246 seconds)
2013-07-24 14:37:17	-->	fosky (~fosky@ppp118-209-48-173.lns20.mel4.internode.on.net) has joined #haskell
2013-07-24 14:37:24	-->	mawuli (~mawuli@41-66-229-233-dedicated.4u.com.gh) has joined #haskell
2013-07-24 14:37:33	--	jackhill_ is now known as jackhill
2013-07-24 14:37:44	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-24 14:37:51	vlaeter	supki: I installed the latest Haskell platform and then I use cabal to install things. Not sure how it 'becomes' really ancient like that?
2013-07-24 14:38:24	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-24 14:39:05	mauke	merijn: do you have a bug id?
2013-07-24 14:39:24	vlaeter	supki: i didn't checkout anything myself, I used only cabal. It was pulling teeth every step of the way anyway, but at least most is working now. I just kept running into stuff which was very recently fixed and i had to manually update things to get it to work, but they all are the versions coming from the newly installed haskell/cabal on a fresh mac book
2013-07-24 14:40:15	-->	MyrAchle (~MyrAchle@server56310.uk2net.com) has joined #haskell
2013-07-24 14:40:49	<--	Ornedan_ (aitakang@melkki.cs.helsinki.fi) has quit (Ping timeout: 245 seconds)
2013-07-24 14:40:50	merijn	mauke: for my issue? No, I'm rebuilding ghc to see if my patch works before creating a ticket
2013-07-24 14:40:52	vlaeter	supki: this seems to be the latest http://hackage.haskell.org/package/reactive right? it's trying to install that version when it gives those errors
2013-07-24 14:40:54	Pranz	what is the haskell paste website?
2013-07-24 14:40:58	-->	mbuf (user@nat/redhat/x-biyuutuontkuxogp) has joined #haskell
2013-07-24 14:41:01	merijn	mauke: Because I think I solved it already
2013-07-24 14:41:02	int-e	@where paste
2013-07-24 14:41:03	lambdabot	http://lpaste.net/new/haskell
2013-07-24 14:41:05	int-e	hmm
2013-07-24 14:41:09	int-e	@where hpaste
2013-07-24 14:41:10	lambdabot	http://lpaste.net/new/haskell
2013-07-24 14:41:18	merijn	mauke: Patching base means rebuilding a lot of library junk, though, so it takes awhile
2013-07-24 14:41:20	-->	niklasb (~codeslay0@p5B312E5A.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 14:41:28	mauke	merijn: oh, nice
2013-07-24 14:41:38	hpaste	Pranz pasted “Group keys and values” at http://lpaste.net/91177
2013-07-24 14:41:39	<--	rce_ (henryhei@melkki.cs.helsinki.fi) has quit (Ping timeout: 245 seconds)
2013-07-24 14:41:45	-->	rce (henryhei@melkki.cs.helsinki.fi) has joined #haskell
2013-07-24 14:41:52	Pranz	mauke, Todor, there is a solution
2013-07-24 14:41:53	-->	Ornedan (aitakang@melkki.cs.helsinki.fi) has joined #haskell
2013-07-24 14:41:59	<--	acidi (elmhaapa@melkki.cs.helsinki.fi) has quit (Ping timeout: 260 seconds)
2013-07-24 14:42:03	supki	vlaeter: yes, it's from 2010. You probably can install this you really really want but it's not going to be pleasant
2013-07-24 14:42:06	-->	acidi (elmhaapa@melkki.cs.helsinki.fi) has joined #haskell
2013-07-24 14:42:21	-->	sebastian___ (~quassel@port-212-202-152-190.static.qsc.de) has joined #haskell
2013-07-24 14:42:22	mauke	Pranz: that could be improved by a list comprehension
2013-07-24 14:42:33	supki	vlaeter: the main problem is dependency on (obsolete) category-extras, I would guess
2013-07-24 14:42:39	Pranz	mauke, improved as faster?
2013-07-24 14:42:49	mauke	valuesFor k = [ y | (x, y) <- lst, x == k ]
2013-07-24 14:42:52	mauke	more readable
2013-07-24 14:43:04	<--	xcthulhu (~xcthulhu@wireless-165-124-129-106.nuwlan.northwestern.edu) has quit (Quit: xcthulhu)
2013-07-24 14:43:05	merijn	mauke: If I keep up this rate of increase in patch size, my next GHC patch will be an entire module
2013-07-24 14:43:12	Pranz	mauke, ah, indeed
2013-07-24 14:43:22	supki	vlaeter: which in turn depends on invariant which wants ancient version of contravariant package
2013-07-24 14:43:25	merijn	(last patch was 2 characters, this one is about 10 lines)
2013-07-24 14:43:44	vlaeter	supki: ok, so basically, just not use Phooey? Any other high level gui lib which does work? Peferably on wxwidgets as I worked a lot with the C++ version of wxwindows/wxwidgets
2013-07-24 14:44:21	nilg```	Why that program is badly types?
2013-07-24 14:44:24	nilg```	parseLines l = do
2013-07-24 14:44:24	nilg```	  line <- getLine
2013-07-24 14:44:24	nilg```	  parseLines l
2013-07-24 14:44:24	nilg```	 
2013-07-24 14:44:30	vlaeter	supki: (I know the list online, but it doesn't really say which one actually work or not)
2013-07-24 14:44:39	nilg```	(sorry I can't reach hpaste)
2013-07-24 14:44:41	Todor	mauke: thanks :) it's easier to read :)
2013-07-24 14:44:44	mauke	nilg```: it isn't
2013-07-24 14:44:48	mauke	nilg```: and you want lpaste
2013-07-24 14:44:53	int-e	@type M.toList . M.fromListWith (++) . map (second (:[]))
2013-07-24 14:44:54	lambdabot	Ord d => [(d, a)] -> [(d, [a])]
2013-07-24 14:44:59	<--	jozefk (jozefk@unaffiliated/jozefk) has left #haskell
2013-07-24 14:45:06	mauke	Todor: the whole algorithm is less efficient, though
2013-07-24 14:45:31	Todor	mauke: why?
2013-07-24 14:46:00	int-e	Pranz: that might do what you want, if the keys can be compared and the precise order of the result lists doesn't matter.
2013-07-24 14:46:10	int-e	(M is Data.Map)
2013-07-24 14:46:13	mauke	because nub is O(n^2) and the other thing is, too
2013-07-24 14:46:27	mauke	groupBy only considers adjacent elements
2013-07-24 14:46:44	<--	fosky (~fosky@ppp118-209-48-173.lns20.mel4.internode.on.net) has quit (Ping timeout: 268 seconds)
2013-07-24 14:46:50	Todor	mauke: ok
2013-07-24 14:46:57	-->	jophish (500492a3@gateway/web/freenode/ip.80.4.146.163) has joined #haskell
2013-07-24 14:47:06	<--	bogdanp (~bogdan@79.119.109.243) has quit (Ping timeout: 256 seconds)
2013-07-24 14:47:10	supki	vlaeter: sorry, I know nothing about guis :(
2013-07-24 14:47:15	int-e	@type groupBy ((==) `on` fst) . sortBy (compare `on` fst)
2013-07-24 14:47:16	lambdabot	Ord b1 => [(b1, b)] -> [[(b1, b)]]
2013-07-24 14:47:31	vlaeter	supki: ok, no problem :) thanks for the help; i'll just use wx for now, that's easy enough anyway
2013-07-24 14:47:33	merijn	The bug is actually worse on linux, as it subtly breaks the semantics there
2013-07-24 14:47:42	merijn	(as opposed to just crashing)
2013-07-24 14:47:55	int-e	@type map (fst . head &&& map snd) . groupBy ((==) `on` fst) . sortBy (compare `on` fst) -- getting ugly
2013-07-24 14:47:56	lambdabot	Ord b1 => [(b1, b)] -> [(b1, [b])]
2013-07-24 14:48:13	merijn	If for some weird reason there are no IO events it can cause the runtime toactually miss a wakeup
2013-07-24 14:48:19	<--	ntus1017 (~ntus1017@123.21.116.182) has quit (Remote host closed the connection)
2013-07-24 14:48:31	-->	bogdanp (~bogdan@94.52.234.107) has joined #haskell
2013-07-24 14:48:52	merijn	Probably extremely unlikely, but extremely unlike races in the runtime are all the more painful to debug
2013-07-24 14:49:31	<--	jmcarthur_mobile (~jmcarthur@md12d36d0.tmodns.net) has quit (Ping timeout: 256 seconds)
2013-07-24 14:49:41	<--	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has quit (Ping timeout: 248 seconds)
2013-07-24 14:49:51	<--	voxpopuli (~fanservic@c-24-3-22-132.hsd1.pa.comcast.net) has quit (Read error: Operation timed out)
2013-07-24 14:50:15	<--	pamojarpan_ (~quassel@154.203.60.178.unassigned.mundo-r.com) has quit (Ping timeout: 246 seconds)
2013-07-24 14:50:22	jophish	yo yo yo
2013-07-24 14:50:29	<--	safinaskar (~user@178.204.95.68) has quit (Read error: Connection reset by peer)
2013-07-24 14:50:31	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2013-07-24 14:50:31	mauke	int-e: hey, that's almost my solution again
2013-07-24 14:50:38	-->	jmcarthur_mobile (~jmcarthur@2607:fb90:150a:f540:b922:e1b0:8853:8b63) has joined #haskell
2013-07-24 14:50:44	<--	normanrichards (~normanric@70.114.215.220) has quit (Quit: normanrichards)
2013-07-24 14:50:56	jophish	I'm using regex-applicative, but I'm fairly new to haskell and am not sure if what I'm doing is idiomatic or efficient
2013-07-24 14:51:28	jophish	I've tried to implement an 'optional' combinator for regex-applicative, but I'm not sure I ahve it quite right
2013-07-24 14:51:30	jophish	http://pastebin.com/KuecpxbH
2013-07-24 14:51:33	-->	zerokarmaleft (zkl@morpheus.net) has joined #haskell
2013-07-24 14:51:36	mauke	The paste KuecpxbH has been copied to http://lpaste.net/91178
2013-07-24 14:51:46	merijn	I think using regexes already disqualifies it from being idiomatic :) *hides from the flamewar he just started*
2013-07-24 14:51:57	<--	sebastian___ (~quassel@port-212-202-152-190.static.qsc.de) has quit (Remote host closed the connection)
2013-07-24 14:52:08	int-e	mauke: I'd probably use the Data.Map one though. Just need some profiling, and I don't know whether I should use fromListWith (++) or fromListWith (flip (++))
2013-07-24 14:52:19	jophish	also, I have a suspicion that 'read <$> ( (++) <$>' can be simplified
2013-07-24 14:52:38	-->	finishingmove (~finishing@dynamic-78-8-248-111.ssp.dialog.net.pl) has joined #haskell
2013-07-24 14:53:11	jophish	also, is MonadPlus a sensible thing to be using here?
2013-07-24 14:53:38	<--	jozefg (~dannygrat@c-24-63-142-232.hsd1.ma.comcast.net) has quit (Quit: jozefg)
2013-07-24 14:53:54	<--	Ue (~Ue@unaffiliated/ue) has quit (Ping timeout: 256 seconds)
2013-07-24 14:54:16	<--	finishingmove (~finishing@dynamic-78-8-248-111.ssp.dialog.net.pl) has quit (Client Quit)
2013-07-24 14:55:43	-->	Pullphinger (~Pullphing@12.40.23.68) has joined #haskell
2013-07-24 14:56:09	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-24 14:57:35	-->	konundra (~michael@ec3097.wuo.earlham.edu) has joined #haskell
2013-07-24 14:58:22	<--	eduardo__ (~wakalabis@177.32.67.203) has quit (Quit: eduardo__)
2013-07-24 14:58:45	merijn	whooo!
2013-07-24 14:58:47	jophish	Is there a function to concatenate a String and a Maybe String?
2013-07-24 14:58:51	-->	Kiryx (~Kiryx@85-202-48-130.internetia.net.pl) has joined #haskell
2013-07-24 14:58:57	jophish	or should I do this myself?
2013-07-24 14:58:58	merijn	I succesfully fix a GHC bug! Do I get a cookie? :)
2013-07-24 14:59:02	merijn	s/fix/fixed
2013-07-24 14:59:12	<--	Finnfinn_ (~Julian@ip-178-201-72-31.unitymediagroup.de) has quit (Quit: Leaving)
2013-07-24 14:59:40	 *	Yaniel gives merijn a cookie "there you go :)"
2013-07-24 15:00:07	<--	ksf (~ksf@d013167.adsl.hansenet.de) has quit (Quit: Leaving)
2013-07-24 15:00:43	k00mi	jophish: do you mean returning the original string if it is Nothing?
2013-07-24 15:00:56	jophish	k00mi: exactly
2013-07-24 15:01:41	jophish	I suppose this could be made more general, adding a MonadPlus with mzero if it's Nothing
2013-07-24 15:02:24	-->	paintcan (~user@66.199.39.230) has joined #haskell
2013-07-24 15:02:25	jophish	I'm coming from a C++ background, and have no idea what level of generalisation is appropriate in Haskell
2013-07-24 15:02:52	k00mi	jophish: string ++ fromMaybe "" theMaybe, or string ++ concat (maybeToList theMaybe)
2013-07-24 15:04:04	jophish	k00mi: exactly what I have already :D glad to see I got that right]
2013-07-24 15:04:20	jophish	Thanks
2013-07-24 15:04:22	k00mi	heh, ok
2013-07-24 15:04:30	taylorgb	I usually generalise until things stop becoming simpler
2013-07-24 15:04:48	-->	jchild (~textual@rrcs-50-75-181-175.nys.biz.rr.com) has joined #haskell
2013-07-24 15:04:51	-->	Finnfinn (~Julian@ip-178-201-72-31.unitymediagroup.de) has joined #haskell
2013-07-24 15:04:51	Cale	jophish: It's easy to go crazy about abstraction, because Haskell is good at it, but try to make sure you have at least two instances of any new typeclass :)
2013-07-24 15:05:14	-->	xcthulhu (~xcthulhu@c-98-220-235-232.hsd1.il.comcast.net) has joined #haskell
2013-07-24 15:06:23	-->	scooty-puff (~andy@75-146-46-49-Minnesota.hfc.comcastbusiness.net) has joined #haskell
2013-07-24 15:07:02	jophish	Sounds like a plan. Thanks
2013-07-24 15:09:00	<--	peterhil (~peterhil@158.127.31.162) has quit (Quit: Must not waste too much time here...)
2013-07-24 15:09:17	eikke	is there, using conduits, a way to eg take a Source of ByteString's, then write these to a file (easy) and count the number of bytes yielded by the source (easy), but both at the same time (not easy)?
2013-07-24 15:09:19	-->	peterhil (~peterhil@158.127.31.162) has joined #haskell
2013-07-24 15:10:57	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #haskell
2013-07-24 15:11:36	-->	anRch (~markmilli@ip-64-134-102-10.public.wayport.net) has joined #haskell
2013-07-24 15:12:18	-->	jadatkins86 (~jadatkins@cpc25-aztw25-2-0-cust944.aztw.cable.virginmedia.com) has joined #haskell
2013-07-24 15:12:29	-->	applicative (~m@pool-71-182-234-215.pitbpa.fios.verizon.net) has joined #haskell
2013-07-24 15:13:05	-->	descender (~heh@120.140.162.57) has joined #haskell
2013-07-24 15:13:16	<--	paullik (~paullik@unaffiliated/paullik) has quit (Ping timeout: 276 seconds)
2013-07-24 15:13:17	<--	jadatkins86 (~jadatkins@cpc25-aztw25-2-0-cust944.aztw.cable.virginmedia.com) has quit (Client Quit)
2013-07-24 15:13:38	-->	jadatkins (~jadatkins@cpc25-aztw25-2-0-cust944.aztw.cable.virginmedia.com) has joined #haskell
2013-07-24 15:14:56	<--	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has quit (Remote host closed the connection)
2013-07-24 15:15:23	-->	xcv (~xcv@vpn-18-101-24-94.mit.edu) has joined #haskell
2013-07-24 15:16:10	-->	bytbox (~s@pool-71-163-114-49.washdc.fios.verizon.net) has joined #haskell
2013-07-24 15:16:38	-->	lambdanaut (~lambdanau@rrcs-98-101-176-171.midsouth.biz.rr.com) has joined #haskell
2013-07-24 15:16:52	merijn	Cale: Well, it depends on what you do. I frequently have typeclasses with only one instance for type level hackery. OTOH, I don't think I've ever implemented a typeclass for non typelevel hackery? :>
2013-07-24 15:17:33	<--	shrekster (~small@c-24-18-241-158.hsd1.wa.comcast.net) has quit (Quit: Leaving.)
2013-07-24 15:17:33	<--	Taneb (~nathan@host-92-30-160-144.as13285.net) has quit (Ping timeout: 264 seconds)
2013-07-24 15:17:49	-->	Eduard_Munteanu (~Eduard_Mu@188.25.245.48) has joined #haskell
2013-07-24 15:18:14	mauke	have you ever used a class with 0 parameters?
2013-07-24 15:18:15	b2coutts	this isn't really a haskell question, but I think it fits well with this channel: the typical way to manage a symbol table is some sort of tree, right? Does it make sense to do an initial pass-through of the code to find which base functions are actually used, and load only those ones into the initial symbol table to speed up operations on the tree?
2013-07-24 15:18:28	<--	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has quit (Ping timeout: 246 seconds)
2013-07-24 15:18:32	Saizan	eikke: lazy or strict?
2013-07-24 15:18:42	<--	descender (~heh@120.140.162.57) has quit (Ping timeout: 264 seconds)
2013-07-24 15:19:01	-->	MnO2 (~MnO2@1.34.43.236) has joined #haskell
2013-07-24 15:19:06	b2coutts	I'm writing an interpreter, and figuring out how to optimize it is probably the most interesting CS thing I've ever done
2013-07-24 15:19:15	-->	snearch (~snearch@brln-4db90b94.pool.mediaWays.net) has joined #haskell
2013-07-24 15:19:25	eikke	Saizan: in what?
2013-07-24 15:19:25	-->	normanrichards (~normanric@rrcs-24-173-33-110.sw.biz.rr.com) has joined #haskell
2013-07-24 15:19:33	-->	xcv_ (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has joined #haskell
2013-07-24 15:19:54	-->	mgile (~mgile@74-92-220-177-Colorado.hfc.comcastbusiness.net) has joined #haskell
2013-07-24 15:20:46	Saizan	eikke: which ByteString type are you using there?
2013-07-24 15:20:48	-->	amathew (~Adium@cpe-74-68-136-238.nyc.res.rr.com) has joined #haskell
2013-07-24 15:21:06	eikke	Saizan: don't think that matters a lot, but say strict
2013-07-24 15:21:32	eikke	basically I need to do 2 things on my stream (a fold and an iter) within one iteration
2013-07-24 15:22:03	Gothmog_	b2coutts: Most probably not, at least if your tree operations have at most logarithmic complexity.
2013-07-24 15:22:12	-->	hajimehoshi (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has joined #haskell
2013-07-24 15:22:25	Saizan	eikke: make the iter return the lengths and then fold that?
2013-07-24 15:22:28	Eduard_Munteanu	b2coutts: if you make a global Map, it should memoize it
2013-07-24 15:23:01	b2coutts	Gothmog_: they do, but even so you would probably get some sort of speedup; though I suppose the initial symbol table probably wouldn't be large enough for this to make much difference
2013-07-24 15:23:07	<--	xcv (~xcv@vpn-18-101-24-94.mit.edu) has quit (Ping timeout: 268 seconds)
2013-07-24 15:23:15	-->	yogert (~Adium@38.117.157.211) has joined #haskell
2013-07-24 15:23:24	Eduard_Munteanu	b2coutts: do you need to update it?
2013-07-24 15:23:58	b2coutts	Eduard_Munteanu: sort of; I don't use mutation, I just pass a new symbol table with another entry added
2013-07-24 15:24:12	Eduard_Munteanu	Ah, so you do need to.
2013-07-24 15:24:16	-->	matheus23 (~quassel@p4FDF378E.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 15:24:25	b2coutts	yeah, for let bindings and such
2013-07-24 15:24:48	Gothmog_	b2coutts: But you also have to pay for the speedup in advance. So I'd dismiss the additional complexity.
2013-07-24 15:25:02	-->	kushal (~kdas@fedora/kushal) has joined #haskell
2013-07-24 15:25:20	b2coutts	Gothmog_: yeah, but I can see it perhaps being valuable when compile-time is negligible compared to run time
2013-07-24 15:25:26	-->	PRISMBITCH (~PRISMBITC@178-85-121-235.dynamic.upc.nl) has joined #haskell
2013-07-24 15:25:51	b2coutts	if you have a short program that looks up a function millions of times, doing an initial pass-through of the code to cut down the size of the symbol table could make it faster
2013-07-24 15:26:07	eikke	Saizan: that doesnt feel very composable
2013-07-24 15:26:28	-->	ravenvz (~vizier@ip-95-220-104-103.bb.netbynet.ru) has joined #haskell
2013-07-24 15:26:54	Gothmog_	Yeah, that's right. However, I still would classify it as a low-priority optimization.
2013-07-24 15:27:01	eikke	in the real app its not about counting bytes, but calculating a hash of the data passed through the pipeline
2013-07-24 15:27:05	<--	MnO2 (~MnO2@1.34.43.236) has quit (Quit: MnO2)
2013-07-24 15:27:46	merijn	eikke: Is there no &&& like (or arrow instance!) for them?
2013-07-24 15:28:08	taylorgb	b2coutts: What kind of language is it? I mean it sounds like it's a pre-compiled language, but you said it was an interpretter?
2013-07-24 15:28:40	eikke	merijn: interesting thought
2013-07-24 15:29:09	-->	roboguy_ (~roboguy_@98.156.67.41) has joined #haskell
2013-07-24 15:29:23	b2coutts	taylorgb: it's actually an interpreter, but the first pass-through just parses the program into a list of tokens, and a list of referenced names could easily be generated from the token list before evaluating it
2013-07-24 15:29:23	-->	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has joined #haskell
2013-07-24 15:29:52	merijn	eikke: That'd be my first attempt, as then it's trivial
2013-07-24 15:29:56	-->	pmade (~pmade@c-67-172-151-101.hsd1.co.comcast.net) has joined #haskell
2013-07-24 15:30:20	eikke	there's no Arrow instance for ConduitM on first sight :)
2013-07-24 15:30:29	eikke	will look further in an hour, got to run now
2013-07-24 15:31:03	-->	kstuart (~Thunderbi@host81-129-118-94.range81-129.btcentralplus.com) has joined #haskell
2013-07-24 15:31:19	<--	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has quit (Quit: DrTeggy)
2013-07-24 15:31:28	taylorgb	I was just thinking that you could lose some flexibility if you make such eliminations. For example, if you want to add more code later to the running program that no references those previously unreferenced things
2013-07-24 15:31:44	taylorgb	er now references
2013-07-24 15:31:49	<--	hashcat (~chatzilla@1-172-246-58.dynamic.hinet.net) has quit (Ping timeout: 248 seconds)
2013-07-24 15:32:08	-->	CaptainLex (~kvirc@97-116-25-43.mpls.qwest.net) has joined #haskell
2013-07-24 15:32:08	-->	Taneb (~nathan@host-92-30-148-233.as13285.net) has joined #haskell
2013-07-24 15:32:12	 *	hackagebot web-routes-boomerang 0.27.1 - Library for maintaining correctness and composability of URLs within an application.  http://hackage.haskell.org/package/web-routes-boomerang-0.27.1 (JeremyShaw)
2013-07-24 15:32:26	taylorgb	Like if you wanted to implement a repl for your language
2013-07-24 15:33:03	<--	sclv (~sclv@c-76-116-128-106.hsd1.de.comcast.net) has quit (Quit: sclv)
2013-07-24 15:33:34	-->	Michael__ (~michael@c-68-50-118-161.hsd1.md.comcast.net) has joined #haskell
2013-07-24 15:33:36	<--	roboguy_ (~roboguy_@98.156.67.41) has quit (Ping timeout: 268 seconds)
2013-07-24 15:33:51	-->	MrFahrenheit (~RageOfTho@77.221.25.95) has joined #haskell
2013-07-24 15:34:07	-->	paullik (~paullik@unaffiliated/paullik) has joined #haskell
2013-07-24 15:34:30	b2coutts	taylorgb: yeah, I suppose it wouldn't extend very well to repls
2013-07-24 15:34:50	b2coutts	right now my interpreter operates under the assumption that it's just given a string representing a program, and it has to create a value from it
2013-07-24 15:35:13	taylorgb	fair enough
2013-07-24 15:35:46	b2coutts	a repl would probably be a good idea though; it would work fairly well with the language
2013-07-24 15:36:04	b2coutts	at some point I'll need to throw out all the code I've written and rewrite from scratch; I'll probably try to include one when I do that
2013-07-24 15:37:52	<--	elediaz (~elediaz@92.59.136.176) has quit (Quit: leaving)
2013-07-24 15:38:09	merijn	Right, any OSX users that like compiling GHC and wanna verify a bug is fixed? :)
2013-07-24 15:38:23	-->	j-wang (~j-wang@cpe-74-73-181-99.nyc.res.rr.com) has joined #haskell
2013-07-24 15:39:29	-->	Jonno_FTW (~come@9ch.in) has joined #haskell
2013-07-24 15:42:11	-->	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has joined #haskell
2013-07-24 15:42:48	<--	zzing (~textual@198-91-210-150.cpe.distributel.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2013-07-24 15:42:51	<--	applicative (~m@pool-71-182-234-215.pitbpa.fios.verizon.net) has quit (Ping timeout: 268 seconds)
2013-07-24 15:43:10	<--	jjohnsson (~jjohnsson@host-95-195-132-108.mobileonline.telia.com) has quit (Quit: jjohnsson)
2013-07-24 15:43:12	<--	niklasb (~codeslay0@p5B312E5A.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2013-07-24 15:43:40	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2013-07-24 15:44:16	-->	rishabhjain (~anonymous@14.139.122.114) has joined #haskell
2013-07-24 15:44:34	-->	codesoup (~codesoup@69-165-150-76.dsl.teksavvy.com) has joined #haskell
2013-07-24 15:46:32	<--	kolmodin (circuser-X@nat/google/x-dmuegfmbkbdvkigo) has quit (Remote host closed the connection)
2013-07-24 15:46:38	-->	studybo__ (~studybot_@s207.213.146.210.fls.vectant.ne.jp) has joined #haskell
2013-07-24 15:46:44	-->	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has joined #haskell
2013-07-24 15:47:22	-->	manung (~manung@199.253.243.1) has joined #haskell
2013-07-24 15:47:47	<--	wormphlegm (~wormphleg@24.130.9.50) has quit (Ping timeout: 268 seconds)
2013-07-24 15:47:55	-->	wormphlegm (~wormphleg@24.130.9.50) has joined #haskell
2013-07-24 15:47:58	-->	CaptainK (~CaptainK@181.179.68.167) has joined #haskell
2013-07-24 15:48:38	-->	xilo (~xilo@107-209-248-232.lightspeed.austtx.sbcglobal.net) has joined #haskell
2013-07-24 15:48:45	<--	djcoin (~djcoin@ip-114.net-89-2-70.rev.numericable.fr) has quit (Quit: WeeChat 0.4.0)
2013-07-24 15:48:55	<--	RayNbow`TU (~kirika@131.180.203.117) has quit (Quit: leaving)
2013-07-24 15:49:03	<--	Sixmsj (~Sixmsj@c-71-198-110-26.hsd1.ca.comcast.net) has quit (Quit: Sixmsj)
2013-07-24 15:49:07	-->	djcoin (~djcoin@ip-114.net-89-2-70.rev.numericable.fr) has joined #haskell
2013-07-24 15:50:06	-->	oleo (~oleo@xdsl-78-35-135-178.netcologne.de) has joined #haskell
2013-07-24 15:52:38	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-07-24 15:52:45	<--	wormphlegm (~wormphleg@24.130.9.50) has quit (Read error: Operation timed out)
2013-07-24 15:53:07	--	tippenei1 is now known as tippenein
2013-07-24 15:53:10	-->	seliopou (~textual@c-ge1-4-3352.osr0-terez.net.telekom.hu) has joined #haskell
2013-07-24 15:53:11	-->	tiffany (~kawaii@fl-76-5-40-101.dhcp.embarqhsd.net) has joined #haskell
2013-07-24 15:54:02	<--	Blazeix (~Blazeix@75.114.201.146) has quit (Quit: woop)
2013-07-24 15:54:25	<--	normanrichards (~normanric@rrcs-24-173-33-110.sw.biz.rr.com) has quit (Quit: normanrichards)
2013-07-24 15:55:27	<--	j-wang (~j-wang@cpe-74-73-181-99.nyc.res.rr.com) has quit (Quit: j-wang)
2013-07-24 15:56:00	<--	jbracker (~quassel@m-116.informatik.uni-kiel.de) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2013-07-24 15:57:29	-->	`fogus (~fogus@freedom.d-a-s.com) has joined #haskell
2013-07-24 15:58:12	-->	niklasb (~codeslay0@p5b312e5a.dip0.t-ipconnect.de) has joined #haskell
2013-07-24 15:59:38	<--	gadjo (~gggg@109.102.72.188) has quit (Ping timeout: 256 seconds)
2013-07-24 16:00:13	-->	Sculptor (~Sculptor@82.208.238.173) has joined #haskell
2013-07-24 16:00:28	--	studybo__ is now known as talzeus
2013-07-24 16:01:42	--	sirspazz1lot is now known as sirspazzolot
2013-07-24 16:02:16	-->	Apocalisp (~textual@mobile-166-147-096-086.mycingular.net) has joined #haskell
2013-07-24 16:02:41	-->	danharaj (~Adium@rrcs-24-39-113-178.nyc.biz.rr.com) has joined #haskell
2013-07-24 16:03:06	<--	Quadrescence (~quad@unaffiliated/quadrescence) has quit (Quit: This computer has gone to sleep)
2013-07-24 16:03:16	dropdrive	Am I right in thinking that by writing my own Data.Array.Repa.Shape type, I can statically label array "dimensions" and prevent myself from, say, calling (+^) on a "Fruit x Animal" array with a "Country x Month" array?
2013-07-24 16:05:25	zvrba	what happened with comonad.com ?
2013-07-24 16:05:44	-->	abc22134 (abc@85.65.115.112) has joined #haskell
2013-07-24 16:06:52	merijn	zvrba: I asked edwardk what happened a week ago or so, but I didn't get any response
2013-07-24 16:06:58	zvrba	hm >:
2013-07-24 16:07:01	<--	danharaj (~Adium@rrcs-24-39-113-178.nyc.biz.rr.com) has quit (Ping timeout: 248 seconds)
2013-07-24 16:07:29	zvrba	he wrote a post "Abstracting with Applicatives".. I was hoping to get a better idea of what applicatives are useful for
2013-07-24 16:07:38	<--	phienone (~ph@nappo.lnet.fi) has quit (Ping timeout: 245 seconds)
2013-07-24 16:07:40	zvrba	(LYAH gives just toy examples, and the original paper didn't help)
2013-07-24 16:07:40	-->	wormphlegm (~wormphleg@24.130.9.50) has joined #haskell
2013-07-24 16:07:49	zvrba	but it's inaccessible :/
2013-07-24 16:08:10	Philippa	zvrba: applicatives describe embedded languages that have a notion of (n-ary) function application, but not necessarily higher-order functions
2013-07-24 16:08:15	<--	seliopou (~textual@c-ge1-4-3352.osr0-terez.net.telekom.hu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2013-07-24 16:08:24	Philippa	compare and contrast with monads, which are applicatives that /do/ have their own notion of higher-order function
2013-07-24 16:08:53	-->	danharaj (~Adium@rrcs-24-39-113-178.nyc.biz.rr.com) has joined #haskell
2013-07-24 16:09:17	merijn	zvrba: Applicatives are mostly useful for things that are almost but not quite monads
2013-07-24 16:09:47	supki	zvrba: there is a mirror at http://comonad.newartisans.com/reader/index.html
2013-07-24 16:10:01	-->	Velpoman (~Velpoman@nat/yahoo/x-ubefafstcghzpkix) has joined #haskell
2013-07-24 16:10:10	Philippa	It turns out there are things that can be applicatives but not monads (for example, you can write the zipN functions once and for all). You also get the usual engineering trade-offs: a language that's less powerful in some regards (no HOFs) may offer other capabilities that wouldn't be achievable otherwise (eg statically examining the structure of a program/computation)
2013-07-24 16:10:45	<--	vijaykiran (~user@213.208.206.28) has quit (Ping timeout: 246 seconds)
2013-07-24 16:10:50	merijn	Philippa: The difference between monads and applicatives is that if you write "f <*> x" you can inspect both f and x inside the implementation of <*>
2013-07-24 16:10:53	merijn	eh
2013-07-24 16:11:00	merijn	s/Philippa/zvrba
2013-07-24 16:11:18	<--	anRch (~markmilli@ip-64-134-102-10.public.wayport.net) has quit (Quit: anRch)
2013-07-24 16:11:34	-->	tazjin (~tazjin@2a01:2b0:3041:3018:85f0:b2d8:2f38:59a6) has joined #haskell
2013-07-24 16:12:10	zvrba	supki: thanks. found it in google cache too
2013-07-24 16:12:22	<--	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has quit (Ping timeout: 246 seconds)
2013-07-24 16:12:49	-->	petapetapeta (~petapetap@130.225.165.43) has joined #haskell
2013-07-24 16:12:53	<--	nexx (~nexx@dslb-188-108-124-185.pools.arcor-ip.net) has quit (Ping timeout: 248 seconds)
2013-07-24 16:13:21	zvrba	merijn: how can I inspect functions? if whatever is before <$> takes n arguments, I have to have n-1 <*>s
2013-07-24 16:13:33	zvrba	otherwise it gets partially applied
2013-07-24 16:14:27	Philippa	zvrba: right, and you can tell /that/ too
2013-07-24 16:14:33	zvrba	(+) <$> (Just 3) :: Num a => Maybe (a -> a)
2013-07-24 16:15:17	Philippa	yeah. A typeclass instance'll spot that you've got an -> as the outermost constructor inside the Maybe, for example
2013-07-24 16:15:43	merijn	zvrba: I mean that "(Just f) <*> (Just x)" here <*> can take a look at both the constructor on the left and right
2013-07-24 16:16:00	merijn	zvrba: "(Just x) >>= f" <- no clue what f returns as a constructor
2013-07-24 16:16:01	-->	bashyal (~bashyal@ec2-54-245-100-167.us-west-2.compute.amazonaws.com) has joined #haskell
2013-07-24 16:16:11	zvrba	merijn: oh, ok.
2013-07-24 16:16:33	abc22134	@pl \a -> a + b
2013-07-24 16:16:33	lambdabot	(b +)
2013-07-24 16:16:42	zvrba	merijn: but each <*> sees only its immediate neighbors, and f in f<$> sees the whole expression?
2013-07-24 16:17:01	abc22134	@pl \a b -> a + p*b
2013-07-24 16:17:04	lambdabot	flip ((.) . (+)) (p *)
2013-07-24 16:17:04	lambdabot	optimization suspended, use @pl-resume to continue.
2013-07-24 16:18:19	abc22134	@pl-resume
2013-07-24 16:18:26	lambdabot	flip ((.) . (+)) (p *)
2013-07-24 16:18:26	lambdabot	optimization suspended, use @pl-resume to continue.
2013-07-24 16:18:30	abc22134	@pl-resume
2013-07-24 16:18:42	lambdabot	flip ((.) . (+)) (p *)
2013-07-24 16:18:42	lambdabot	optimization suspended, use @pl-resume to continue.
2013-07-24 16:18:45	abc22134	@pl-resume
2013-07-24 16:18:52	dropdrive	Philippa: "right, and you can tell /that/ too" -- how?
2013-07-24 16:18:53	merijn	zvrba: Sure
2013-07-24 16:19:00	lambdabot	Plugin `pl' failed with: <<timeout>>
2013-07-24 16:19:08	merijn	zvrba: Eh, wait, no
2013-07-24 16:19:18	merijn	zvrba: All of them only see their direct neighbors
2013-07-24 16:19:28	zvrba	... ?
2013-07-24 16:19:37	merijn	You have to compute "f <$> x" before computing "(f <$> x) <*> y"
2013-07-24 16:19:42	-->	phienone (~ph@nappo.lnet.fi) has joined #haskell
2013-07-24 16:19:46	-->	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has joined #haskell
2013-07-24 16:19:52	zvrba	but the paper starts with defining shortcut syntax like [| f x1 x2 ... x_n |] for an n-ary function
2013-07-24 16:19:59	<--	jmcarthur_mobile (~jmcarthur@2607:fb90:150a:f540:b922:e1b0:8853:8b63) has quit (Ping timeout: 264 seconds)
2013-07-24 16:19:59	merijn	Which comes before "((f <$> x) <*> y) <*> z", etc
2013-07-24 16:20:02	zvrba	ah
2013-07-24 16:20:10	-->	normanrichards (~normanric@rrcs-108-178-120-144.sw.biz.rr.com) has joined #haskell
2013-07-24 16:20:14	Nimatek	Can someone who knows how to build stuff on Windblows please help me with this: http://pastebin.com/LZb0icdg
2013-07-24 16:20:17	mauke	The paste LZb0icdg has been copied to http://lpaste.net/91179
2013-07-24 16:20:20	-->	lingxiao (~lingxiao@hnt20826.wireless-pennnet.upenn.edu) has joined #haskell
2013-07-24 16:20:29	zvrba	ah, so <$> "lifts" f, and each <*> "threads" it through arguments.
2013-07-24 16:20:31	-->	Urchin[emacs] (~user@unaffiliated/urchin) has joined #haskell
2013-07-24 16:20:32	merijn	zvrba: The brackets are just "automatically insert any number of <*> around all arguments" notation
2013-07-24 16:20:36	merijn	zvrba: Yes
2013-07-24 16:20:44	-->	jmcarthur_mobile (~jmcarthur@2607:fb90:150a:f540:b922:e1b0:8853:8b63) has joined #haskell
2013-07-24 16:20:45	merijn	zvrba: Remember, <$> is just fmap
2013-07-24 16:20:47	Philippa	dropdrive: standard typeclass (ab)use
2013-07-24 16:20:50	zvrba	yes
2013-07-24 16:21:02	zvrba	Philippa: a concrete example?
2013-07-24 16:21:03	-->	DolphR (~dolph@0149000198.0.fullrate.dk) has joined #haskell
2013-07-24 16:21:07	-->	resnik_ (~sethroot@108.71.82.84) has joined #haskell
2013-07-24 16:21:09	<--	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has quit (Ping timeout: 264 seconds)
2013-07-24 16:21:10	<--	stepkut (~user@c-24-12-184-84.hsd1.il.comcast.net) has quit (Ping timeout: 256 seconds)
2013-07-24 16:21:14	Philippa	though if all you have is <$> and <*>, an f (a -> b) is not necessarily very useful
2013-07-24 16:22:15	-->	eduardo__ (~wakalabis@177.32.67.203) has joined #haskell
2013-07-24 16:22:28	Philippa	zvrba: ask someone who writes more code in a day than I do in a year, there're plenty around here. But that function arrow being /inside/ the f is what matters: it's no longer a value-of-function-type so you can dispatch on f (... -> ...), effectively. You just write a typeclass instance fitting that pattern
2013-07-24 16:22:59	Philippa	many applicatives plain don't have any use for that type though: they don't do higher-order functions, so while you've got your hands on a 'function' it's just a black box you can't do anything with
2013-07-24 16:23:02	zvrba	!
2013-07-24 16:23:24	merijn	zvrba: Let's look at a silly example
2013-07-24 16:23:28	 *	CaptainK discovers η-reduction, wonders if you can do that for multiple parameters?
2013-07-24 16:23:46	quchen	zvrba: For a practical example of Applicatives, have a look at the RWH chapter on using Parsec. http://book.realworldhaskell.org/read/using-parsec.html#id652399
2013-07-24 16:23:50	zvrba	Philippa: that was a golden nugget! f (.. -> ..) can be dispatched on since it's not a function type! :)
2013-07-24 16:24:01	merijn	zvrba: Well, "silly" it's used in lens, but still. "newtype Const a b = Const { runConst :: a }"
2013-07-24 16:24:16	-->	rishabhjain_ (~anonymous@14.139.122.114) has joined #haskell
2013-07-24 16:24:17	zvrba	ok..
2013-07-24 16:24:27	-->	senorflor (~senorflor@74.201.7.111) has joined #haskell
2013-07-24 16:24:30	zvrba	quchen: ok, will study it later today.
2013-07-24 16:24:33	Philippa	zvrba: right. It's an f-ed up function, not a function per se :-)
2013-07-24 16:24:34	<--	rishabhjain (~anonymous@14.139.122.114) has quit (Read error: Connection reset by peer)
2013-07-24 16:24:34	--	rishabhjain_ is now known as rishabhjain
2013-07-24 16:24:45	merijn	zvrba: Clearly "instance Functor (Const a) where "fmap f (Const x)  = Const x"
2013-07-24 16:24:46	<--	bogdanp (~bogdan@94.52.234.107) has quit (Ping timeout: 276 seconds)
2013-07-24 16:25:26	-->	bogdanp (~bogdan@79.119.104.191) has joined #haskell
2013-07-24 16:25:29	Philippa	dropdrive: did I (perhaps implicitly) answer your question adequately?
2013-07-24 16:25:41	merijn	But "Const a" is not an applicative, because after you do "fmap (+) (Const c') :: Num a => Const Char (a -> a)" you can never get the applied (+) out
2013-07-24 16:26:05	merijn	zvrba: The ability to get functions "back out" after an fmap is what makes Applicative different from Functor
2013-07-24 16:26:41	-->	kobain (~kobian@unaffiliated/kobain) has joined #haskell
2013-07-24 16:27:00	elliott	merijn: huh?
2013-07-24 16:27:05	<--	Kiryx (~Kiryx@85-202-48-130.internetia.net.pl) has quit (Read error: Connection reset by peer)
2013-07-24 16:27:07	elliott	(Const a) is an Applicative when a is a Monoid.
2013-07-24 16:27:11	-->	hashcat (~chatzilla@27.246.59.126) has joined #haskell
2013-07-24 16:27:12	-->	pamojarpan_ (~quassel@5.159.179.216) has joined #haskell
2013-07-24 16:27:13	 *	hackagebot cpsa 2.3.0 - Symbolic cryptographic protocol analyzer  http://hackage.haskell.org/package/cpsa-2.3.0 (JohnRamsdell)
2013-07-24 16:27:21	elliott	you don't need to get any values out :)
2013-07-24 16:27:27	zvrba	merijn: ok.
2013-07-24 16:27:32	merijn	elliott: hmm, bugger :p
2013-07-24 16:27:37	elliott	(indeed, lens uses this)
2013-07-24 16:27:42	<--	sjl (~sjl@li136-50.members.linode.com) has left #haskell ("WeeChat 0.4.1")
2013-07-24 16:28:02	<--	kobain (~kobian@unaffiliated/kobain) has quit (Client Quit)
2013-07-24 16:28:13	-->	scottschecter (~scottsche@c-76-115-234-122.hsd1.wa.comcast.net) has joined #haskell
2013-07-24 16:28:17	-->	kobain (~kobian@unaffiliated/kobain) has joined #haskell
2013-07-24 16:28:27	supki	(actually lens uses Accessor which is isomorphic to Const)
2013-07-24 16:28:28	--	anildigital_away is now known as anildigital
2013-07-24 16:28:39	<--	snearch (~snearch@brln-4db90b94.pool.mediaWays.net) has quit (Quit: Verlassend)
2013-07-24 16:28:44	-->	kevinqcs (~turing@222.95.250.141) has joined #haskell
2013-07-24 16:28:47	<--	kevinqcs (~turing@222.95.250.141) has quit (Max SendQ exceeded)
2013-07-24 16:29:33	<--	abc22134 (abc@85.65.115.112) has left #haskell
2013-07-24 16:29:38	-->	roboguy_ (~roboguy_@98.156.67.41) has joined #haskell
2013-07-24 16:29:43	dropdrive	Philippa: Not really, but I'm also kind of a beginner.  Thanks anyway though!
2013-07-24 16:29:57	-->	cfricke (~cfricke@96.45.197.22) has joined #haskell
2013-07-24 16:29:58	-->	akurei (~akurei@joel.neurop.ruhr-uni-bochum.de) has joined #haskell
2013-07-24 16:30:02	-->	kevinqcs (~turing@222.95.250.141) has joined #haskell
2013-07-24 16:30:11	<--	jmcarthur_mobile (~jmcarthur@2607:fb90:150a:f540:b922:e1b0:8853:8b63) has quit (Ping timeout: 264 seconds)
2013-07-24 16:30:17	-->	applicative (~m@pool-71-182-234-215.pitbpa.fios.verizon.net) has joined #haskell
2013-07-24 16:30:31	<--	refold (~gman@h-54-251.a258.priv.bahnhof.se) has quit (Quit: leaving)
2013-07-24 16:30:46	Philippa	dropdrive: basically, it's down to whether there're any ->s inside the Applicative's constructor
2013-07-24 16:31:41	applicative	merijn: what is the bug in ghc you were talking about
2013-07-24 16:31:53	<--	federkasten (~federkast@ac227084.ppp.asahi-net.or.jp) has quit (Remote host closed the connection)
2013-07-24 16:32:19	<--	lingxiao (~lingxiao@hnt20826.wireless-pennnet.upenn.edu) has quit (Remote host closed the connection)
2013-07-24 16:32:53	merijn	applicative: http://ghc.haskell.org/trac/ghc/ticket/8089
2013-07-24 16:33:09	<--	ajhager_ (~ajhager@h107.76.53.24.cable.rdfr.jetbroadband.com) has quit (Ping timeout: 248 seconds)
2013-07-24 16:33:34	-->	_d3f (~gnu@94.242.252.66) has joined #haskell
2013-07-24 16:33:34	<--	rishabhjain (~anonymous@14.139.122.114) has quit (Quit: rishabhjain)
2013-07-24 16:33:45	-->	etehtsea (~kes@93.185.184.116) has joined #haskell
2013-07-24 16:33:47	<--	roboguy_ (~roboguy_@98.156.67.41) has quit (Ping timeout: 240 seconds)
2013-07-24 16:34:30	--	anildigital is now known as anildigital_away
2013-07-24 16:34:38	-->	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has joined #haskell
2013-07-24 16:34:46	<--	brisbin (~patrick@c-65-96-61-65.hsd1.ct.comcast.net) has quit (Read error: Connection reset by peer)
2013-07-24 16:34:46	<--	bogdanp (~bogdan@79.119.104.191) has quit (Ping timeout: 256 seconds)
2013-07-24 16:35:01	-->	phyrex1an (~phyrex1an@cm-84.211.97.217.getinternet.no) has joined #haskell
2013-07-24 16:35:33	<--	DolphR (~dolph@0149000198.0.fullrate.dk) has quit (Ping timeout: 264 seconds)
2013-07-24 16:35:46	-->	brisbin (~patrick@65.96.61.65) has joined #haskell
2013-07-24 16:36:23	-->	fxr (~user@78.187.102.63) has joined #haskell
2013-07-24 16:37:02	-->	bogdanp (~bogdan@94.52.234.107) has joined #haskell
2013-07-24 16:37:46	-->	ajhager_ (~ajhager@h107.76.53.24.cable.rdfr.jetbroadband.com) has joined #haskell
2013-07-24 16:38:14	applicative	merijn, really disgusting bug
2013-07-24 17:48:49	--	irc: disconnected from server
2013-07-25 09:59:48	-->	benoit_ (~benoit@130.185.130.212) has joined #haskell
2013-07-25 09:59:48	--	Topic for #haskell is "http://www.haskell.org | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | Administrative issues: #haskell-ops | Hackage down? http://hdiff.luite.com"
2013-07-25 09:59:48	--	Topic set by mauke (~mauke@p3m/member/mauke) on Wed, 17 Jul 2013 13:52:32
2013-07-25 09:59:49	--	Nicks #haskell: [@ChanServ @Igloo [[zzzz]] [edwtjo] \q __main__ _br_ _flow_ `0660 `^_^v `bps `fogus a11235 ab9rf acfoltzer acidi Adeon adimit_away adinapoli Adios_ adlan adnap aess AfC aford aformeny agumonkey agundry ahf ahihi akahn akiress akraut albel727 alcz_ aleator_ alexander__b alexs alpounet Amadiro amathew amosr anachron anders^^_ andrewsw anildigital_away aninhumer anon1231 AntiSpamMeta anyfoo apaku Apocalisp apples` araujo arbn arcatan args[0] aristid Ark1 arkeet arkx_ arnsholt asante asjo aszlig Athas augur averell_ away_sondr3 Axman6 b2coutts b52 b_jonas banjiewen barrucadu bartavelle Baughn bb010g bbee bben bbloom bcoppens bd_ bduc Beetny Belgarion0 benoit_ benprew bentrevor bergmark betawaffle bezik bgamari bholst_ Bigcheese BigEndian bigs bind birkenfeld biscarch bitonic bitraten blakesmith BlastHardcheese Blkt BMeph bobry bobthenameless_ bogdanp bogner_ Boney boothead Boreeas bqp brainproxy brainwash Brando753 brandonw1 brendan brett BrianHV brianloveswords briden brisbin brixen Bryan792 bscarlet bstrie buetow burp_ Bwild bxc ByronJohnson bytbox bz c_14 c_wraith CADD cajla Cale caligula__ canar canissimia canta capisce_ carter_away catwiesel ccasin ccxCZ cdidd cdk ceii centrinia Cerise charlesofarrell_ chatsiri_ cheezey chickenflu chirpsalot ChongLi Chousuke chrisbuchholz chrisdone chrisdotcode__ chrra ciaranm CindyLinz cjay clampz ClaudiusMaximus Clint clog cmsd2 cods colah_ compnaion_cbue confound_ copton corkexaminer CosmicRay Counter-Strike cow-orker cronject cross cruxeternus Cryovat csakatok_ cschneid cynick dabradley dan_johnsin danharaj danr danvet dario^CIP Darkflux DarkFox Dashkal dav davd davean davorak_ davorb-cellphone dcoutts deavid Deewiant def-lkb_ deggis demolithion dEPy descender DexterLB dextrey DigitalKiwi dilinger_ dimday divarvel dixie_ djahandarie djcoin dju dlundy dmarker dmp1ce dmwit dobblego dogmaT dolio DolphR doshitan dpwright dqd Draconx Draggor drbean DrCode drdo dreixel_ drewr drmegahertz dropdrive DrSyzygy dsantiago dsfox1 dsirenko dsp_ DT`` Dtgr duairc dumbhat dustinswan DustyDingo dwierenga Dybber dyreshark eacameron EarlGray^^ earthy ecube edkk Edoxile edunham edwardk ehamberg ehd ejls eL_Bart0 electrogeek elgot Eliel Elision_ elliott ELLIOTTCABLE em Endy Enigmagic ent Entroacceptor epsylon epta ericmj Eridius ernst ethercrow etrepum Excureo eyck_ Ezku f8l fabjan fall_ farn favonia fayden federkasten felipe_ fergusnoble fihi09``` fikusz finnrobi FireFly floatingman flori flowsnake flux folone fosky franksh FreeFull frontend1oader froztbyte frx fry fryguybob ft Fubar^ Fuco Fuuzetsu FUZxxl fxrh gautamc gbarboza gbeshers gbluma gdeest gds geal geekosaur gemelen genisage gentleben geoffh gereedy germanmushroom ggherdov ggreg ghorn Ghoul_ Gilly_ gnuvince Gothmog_ go|dfish gpampara Gracenotes greymalkin gridaphobe gseitz_ gspr guerrilla Guest1103 Guest60325 Guest66280 Guest76380 guymann h_chiro_ haasn hackagebot Hafydd HalfWayM1n hallettj hamid hamilyon hamishmack hape01 Hardolaf harovali1 heath Heffalump helgikrs hiptobecubic hiratara hiredman hiroakip hive-mind hiyakashi honza horlicks hpaste hpc hpd hsyl20 hvr hwiersma ibid idnar idntfy ido idoru inarru inr insejn int-e integral Internet13 iol ion ipuustin iri`away Irtopiste isenmann ISF ismlages isomorphic isomorphismes iteratee_ iulian ivan\ ivan` ixian Jaak jackhill jaimef jamwt jang1 janinge janne- JaRoel|4d jaspervd1 jayne jbauman_ jcp jdhutah jdoliner Jeanne-Kamikaze Jello_Raptor Jesin jevankovich jix jjohnsson jkoppel jkpl jlaire jlamothe jlewis jliikka jlouis jmcarthur jmcarthur_mobile jml joachifm joar jodaro joehillen joelteon joeyh johanbev JohnBat26 johnw joneshf-laptop joneshf-work Jonno_FTW Jonte joogi jophish jorick joshc JPohlman1 jrib jroesch jrslepak jssanders JuanDaugherty juhp julmae junsuijin JustAPerson justinls jyyou jzelinskie k0ral_ Kabaka kaictl kakos kallisti KaneTW kaol kav kaw kazimir42 kcj Ke kerrick Khady Khisanth killy9999 kini Kinnison Kiryx KitB kloeri kludge` klugez kmels__ Kneiva_ knightshade knyppeldynan knz koala_man koninkje_away kooga kosmikus kqr Krakarn kranius kryft kryptiskt ksf kshannon kstuart ktosiek Kuba Kuraitou kushal kxra lahwran lambdabot Laney latro`a lattenwald LeaChim leifw lenstr Lethalman levi Licenser lightquake linduxed liori Liskni_si lispy liszt liyang_ ljhms_ lokydor lopex lpsmith lpvb luite lukexi lulf luminous lunarjar lusory M-ou-se m3ga machisuj- machisuji macron magicman Maior majoh mak` maksbotan malorie_ mami_ mandarg` mantovani maoe mapreduce marienz marr Martty MasseR matt444_ mattp__ matzo mauke mawuli Maxdamantus maxter Mayzie mceier McManiaC mechairo` MedDev melter mendez_ MercurialAlchemi meretrix MetaCosm mgaare mgregson_ mgsloan miclorb mietek mike2 mike4_ mikecaruso mikee mikeplus64 milessabin milli mimi_vx mirsal misv mixi mjrosenb MK_FG mkrull mlinksva mmaruseacph2 mmathis MoALTz Modius Moggle_ mokus mollerstrand monochrom mononofu Morgawr mornfall morolin mortberg Mortomes_ MouseTheLuckyDog mr- mrd_ mrler mrpantoufle MrRacoon mrshoe MrWoohoo mstksg munro mux mviljamaa mxf myme1 n-dolio n00dle Nahra_ nanothief Natch natte NeatBasis_ necroyeti neektza1 neena nelk neurocyte newsham Nickeeh nicoo Nik05 nik_89 niko nikolah nilg Nimatek ninegrid ninwa ninzine nitrodex nlogax noam noddy2OOO noplamodo notdan novascor1io nschoe ntus1017 nu11ptr nullcone_ nwf nxorg8 obcode ocharles Odd_Bloke ofan ogew2 oldmanstan OlegYch opqdonut OrangeDuck ormaaj Ornedan orospakr ortmage osa1 OscarZ osfameron osnr othiym23 otterdam otto_s ousado Paks palmje pantech Pantsu ParahSailin ParaSa1lin parcs path[l] paullik pcapriotti pdxleif Peaker peddie pegleg peltchu Pengoo perlite petanqk petantik petapetapeta petekaz`` petercoulton petermw pettter_ pfoetchen pharaun phienone Philippa Philonous_ Phlogistique PHO_ phryk pi8029 pikhq pingveno pjstadig Plex- plhk plucas pnielsen popx poucet pqmodn_ pr predator217 preflex profmakx prophile Proteumus ptek Ptival pumpkin purefn puzza007 pygospa pyrtsa pyykkis Quadrescence quicksilver qwandor qz raid Ralith Rarrikins ravenvz RayNbow`TU Raynes Raynos Razz rce redjohn ReinH Reisen relrod Rembane resnik_ rfw rgrinberg rhodesd RichyB Riussi_ rmunroe robbert robinbb rpenguin rs0 Rutger`_ ryanakca s00pcan s4msung s_quark Saeppel Sagi saiam Saizan sajith saml satshaba1 saurik sbahra[] schlumpi_ schoppenhauer sclv sclv_ scottschecter scshunt sdx23 seantallen SegFaultAX selfihu sellout seneca setmeaway sevvie sg Sgeo sgso shachaf shanse shennyg shepheb shergill Shin-LaC shiona SHODAN shutdown_-h_now si14 sipa SirChurchill sirspazzolot sjl ski ski_ skypers sleepybu1 SLi slobo sm smarter smlgs so Soft sohum solancile solarus solirc Sonderblade sopvop sordina1 SoupEvil sp3ctum_ spektroskop Spockz Squid_Tamer ssbr Starfire_ startling stass statusfa1led stelleg stepcut steshaw stiell stomp studybot_ stuntaneous suiside sunfun Sunhay sunnavy_ SuperNoeMan supersym supki Svedrin Swizec swook` tahu talzeus talzeus_ tamiko Tarential taruti tavelram_ taylorgb td123_ tdammers Tehnix Tekerson_ Tene tensorpudding tero- Tesseraction tessier tg Th0mas_ thalassarche theDon theorbtwo TheSpectre thetallguy thetallguy1 thirsteh ThomasLocke thorkilnaur__ thorsten1 thorsten` thoughtpolice threedaymonk threesome thunderrd tiffany Tinned_Tuna tippenein tmiw TML tomaw tomboy65 tomejaguar tomh- tomprince torkjak tpsinnem Tribal tridactyla tromp_ troydm tswett ttm tudalex tulcod tunixman tvaalen Twey tych0 tylergillies_ udoprog Ulrar unperceptually68 upgrayeddd Urchin uu1101 valdyn Valodim ve vehk Vendethiel vhz_ vili vivekrai vmeson vnz vobi volitek Vorpal vpm Vq vvein vvv wagle Walther warpy Watcher7 waterlaz wavewave wchun weie wereHamster WhereIsMySpoon_ wilfredh willb1 Will| Wizcrack Wizek wollw wormphlegm wting wto_ wunki xaimus xenophon xexonixxexillion xilo xinming xl1 XMunkki_ xnyhps Xorlev xorox90_ xplat xrl xrq xymox yacks yam yan_ Yaniel yano Yawgmoth_ Ycros yeltzooo yiannis_1 yogert yogurt_truck YoungFrog zaiste zaphar_ps zeiris_ zenzike_ zero7 zerokarmaleft Zesler ziman zoktar zomg zorzar zrot zvrba zw01 zxq9 zz_nh2 zzing]
2013-07-25 09:59:49	--	Channel #haskell: 1007 nicks (2 ops, 0 halfops, 0 voices, 1005 normals)
2013-07-25 09:59:49	--	URL for #haskell: http://www.haskell.org/
2013-07-25 09:59:55	--	Mode #haskell [+CLcnpt]
2013-07-25 09:59:55	--	Channel created on Sun, 26 Nov 2006 07:42:48
2013-07-25 10:00:15	-->	t7 (~chatzilla@chaucer.kent.ac.uk) has joined #haskell
2013-07-25 10:01:21	<--	tiffany (~kawaii@fl-76-5-40-101.dhcp.embarqhsd.net) has quit (Read error: Connection reset by peer)
2013-07-25 10:01:28	<--	tomaw (tom@freenode/staff/tomaw) has quit (Quit: Quitting)
2013-07-25 10:01:47	-->	tiffany (~kawaii@fl-76-5-40-101.dhcp.embarqhsd.net) has joined #haskell
2013-07-25 10:02:03	-->	tomaw (tom@freenode/staff/tomaw) has joined #haskell
2013-07-25 10:02:05	-->	eikke (~nicolas@78-20-0-121.access.telenet.be) has joined #haskell
2013-07-25 10:05:48	-->	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has joined #haskell
2013-07-25 10:07:02	<--	selfihu (~selfihu@0120800120.0.fullrate.dk) has quit (Quit: Leaving)
2013-07-25 10:07:53	-->	duikboot (~ad@s3eea3de7.adsl.online.nl) has joined #haskell
2013-07-25 10:08:41	<--	Apocalisp (~textual@ip-64-134-174-210.public.wayport.net) has quit (Quit: Computer has gone to sleep.)
2013-07-25 10:08:42	-->	skchrko (~sk@130.255.129.64) has joined #haskell
2013-07-25 10:08:56	-->	ezrios (~ezrios@CPE00044b067c36-CM0012c9a07dec.cpe.net.cable.rogers.com) has joined #haskell
2013-07-25 10:09:30	-->	no7hing (~anonymous@62.217.45.66) has joined #haskell
2013-07-25 10:09:34	ezrios	Does Network.Browser still work? The example given in the docs seems broken
2013-07-25 10:09:49	-->	arossouw (~arossouw@196.36.203.18) has joined #haskell
2013-07-25 10:10:07	-->	nominolo (~nominolo@cust.static.81-63-183-2.swisscomdata.ch) has joined #haskell
2013-07-25 10:10:11	johnw	I don't know; but have you seen Network.HTTP.Conduit.Browser?
2013-07-25 10:10:13	-->	asQuirreL (~asQuirreL@31.221.60.107) has joined #haskell
2013-07-25 10:10:13	-->	jobstijl (~job@5070A080.static.ziggozakelijk.nl) has joined #haskell
2013-07-25 10:10:40	<--	tiffany (~kawaii@fl-76-5-40-101.dhcp.embarqhsd.net) has quit (Remote host closed the connection)
2013-07-25 10:11:09	ezrios	johnw: no; does it support HTTP Basic Auth?
2013-07-25 10:11:25	johnw	it sure ought to; http-conduit does, and it's based on that
2013-07-25 10:11:25	arossouw	http://lpaste.net/91201, on line 2 dont get why xs doesn't return the entire list, but only the items thats left in the list
2013-07-25 10:11:45	ezrios	johnw: I will check it out then, thanks
2013-07-25 10:11:45	-->	dysinger (~tim@cpe-24-94-76-59.hawaii.res.rr.com) has joined #haskell
2013-07-25 10:12:03	-->	diabel232 (~diabel232@d51532C90.access.telenet.be) has joined #haskell
2013-07-25 10:12:55	ezrios	j/join ##linux
2013-07-25 10:13:04	ezrios	._.
2013-07-25 10:13:25	<--	mawuli (~mawuli@41-66-229-233-dedicated.4u.com.gh) has quit (Read error: Operation timed out)
2013-07-25 10:13:29	ezrios	shutdown warnings really mess with weechat's curses interface
2013-07-25 10:13:47	-->	elediaz (~elediaz@92.59.147.112) has joined #haskell
2013-07-25 10:14:14	<--	corkexaminer (~chrisdorn@88.98.47.131) has quit (Quit: corkexaminer)
2013-07-25 10:15:40	arossouw	guess i need to learn basics first, i'll check out yet another haskell tutorial
2013-07-25 10:15:43	<--	lukexi (~lukexi@cpe-72-229-189-117.nyc.res.rr.com) has quit (Quit: lukexi)
2013-07-25 10:15:47	ezrios	arossouw: look up pattern matching
2013-07-25 10:15:53	<--	mandarg` (~user@67.202.108.110) has quit (Read error: Connection reset by peer)
2013-07-25 10:15:54	arossouw	ok
2013-07-25 10:16:09	-->	lukexi (~lukexi@cpe-72-229-189-117.nyc.res.rr.com) has joined #haskell
2013-07-25 10:16:20	arossouw	haskell makes you think overtime :-), challenging
2013-07-25 10:16:20	<--	dysinger (~tim@cpe-24-94-76-59.hawaii.res.rr.com) has quit (Ping timeout: 256 seconds)
2013-07-25 10:16:33	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-25 10:17:17	-->	Eduard_Munteanu (~Eduard_Mu@188.25.245.76) has joined #haskell
2013-07-25 10:18:41	ezrios	@hoogle get
2013-07-25 10:18:41	lambdabot	Prelude getChar :: IO Char
2013-07-25 10:18:41	lambdabot	System.IO getChar :: IO Char
2013-07-25 10:18:41	lambdabot	Prelude getContents :: IO String
2013-07-25 10:18:42	-->	dialelo (~dialelo@161.85-85-216.dynamic.clientes.euskaltel.es) has joined #haskell
2013-07-25 10:19:48	<--	mike4_ (~mike4_@gateway/tor-sasl/mike4/x-38362156) has quit (Remote host closed the connection)
2013-07-25 10:21:21	-->	quchen (~quchen@wthp151d.physik.uni-wuerzburg.de) has joined #haskell
2013-07-25 10:22:20	Kinnison	ezrios: Or perhaps Control.Monad.State's get :: MonadState s m => m s
2013-07-25 10:22:28	Kinnison	ezrios: depending on what you really wanted :-)
2013-07-25 10:22:45	ezrios	Kinnison: that probably makes more sense, thanks
2013-07-25 10:22:49	-->	QinGW (~user@124.207.8.210) has joined #haskell
2013-07-25 10:23:02	-->	Taneb (~nathan@host-92-30-148-233.as13285.net) has joined #haskell
2013-07-25 10:23:14	-->	Mon_Ouie (~Mon_Ouie@subtle/user/MonOuie) has joined #haskell
2013-07-25 10:23:59	ezrios	oh god I have never worked with the State monad ;_;
2013-07-25 10:24:33	-->	MyrAchle (~MyrAchle@server56310.uk2net.com) has joined #haskell
2013-07-25 10:24:41	sopvop	which style you think is better, monadicFoo = do \n  code, or monadicFoo =\n  do code ?
2013-07-25 10:24:44	<--	dreixel_ (~dreixel@host86-185-181-190.range86-185.btcentralplus.com) has quit (Ping timeout: 264 seconds)
2013-07-25 10:25:21	-->	Alice3 (~Alice@cpc18-grim14-2-0-cust478.12-3.cable.virginmedia.com) has joined #haskell
2013-07-25 10:25:57	-->	mike4_ (~mike4_@gateway/tor-sasl/mike4/x-38362156) has joined #haskell
2013-07-25 10:26:16	<--	talzeus (~studybot_@101.110.31.120) has quit (Ping timeout: 240 seconds)
2013-07-25 10:26:51	<--	mandarg` (~user@67.202.108.110) has quit (Read error: Connection reset by peer)
2013-07-25 10:26:51	Lethalman	sopvop, the former, cause you avoid further indentation later
2013-07-25 10:27:05	Lethalman	you have less indentation if you put do on the monadicFoo = line
2013-07-25 10:27:27	-->	mawuli (~mawuli@41-210-22-129-adsl-dyn.4u.com.gh) has joined #haskell
2013-07-25 10:27:44	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-25 10:27:45	-->	ulfdoz (~mary@95.81-167-139.customer.lyse.net) has joined #haskell
2013-07-25 10:27:51	-->	greeny (301418@ircbox.informatik.uni-erlangen.de) has joined #haskell
2013-07-25 10:28:01	sopvop	me too, but some people say that is "hiding do"
2013-07-25 10:28:18	-->	jdnavarro (~danny@113.Red-81-44-89.dynamicIP.rima-tde.net) has joined #haskell
2013-07-25 10:28:21	<--	greeny (301418@ircbox.informatik.uni-erlangen.de) has left #haskell
2013-07-25 10:28:24	Lethalman	sopvop, I want to hide do :P
2013-07-25 10:28:26	 *	Kinnison prefers flarfle = do\n  code
2013-07-25 10:28:38	Lethalman	I don't care about "do"
2013-07-25 10:29:00	<--	agumonkey (~agu@179.217.72.86.rev.sfr.net) has quit (Ping timeout: 264 seconds)
2013-07-25 10:29:34	johnw	i like do\n also
2013-07-25 10:29:36	<--	Guest60325 (Biohazard@biohazard.tropicraft.net) has quit (Ping timeout: 245 seconds)
2013-07-25 10:29:39	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-25 10:29:44	ezrios	ya, do\n
2013-07-25 10:30:13	<--	jdnavarro (~danny@113.Red-81-44-89.dynamicIP.rima-tde.net) has quit (Client Quit)
2013-07-25 10:30:41	<--	thalassarche (~thalassar@unaffiliated/thalassarche) has quit (Ping timeout: 240 seconds)
2013-07-25 10:30:51	sopvop	So, I'm doing it right :)
2013-07-25 10:31:10	-->	jdnavarro (~danny@113.Red-81-44-89.dynamicIP.rima-tde.net) has joined #haskell
2013-07-25 10:31:11	<--	csakatok_ (~csakatoku@em119-72-192-170.pool.e-mobile.ne.jp) has quit (Remote host closed the connection)
2013-07-25 10:31:46	-->	bio (Biohazard@biohazard.tropicraft.net) has joined #haskell
2013-07-25 10:31:50	--	bio is now known as Guest68217
2013-07-25 10:32:17	<--	jdnavarro (~danny@113.Red-81-44-89.dynamicIP.rima-tde.net) has quit (Client Quit)
2013-07-25 10:32:22	-->	james-ubc (~james@66.183.102.136) has joined #haskell
2013-07-25 10:32:30	-->	talzeus (~studybot_@101.110.31.120) has joined #haskell
2013-07-25 10:32:31	-->	jdnavarro (~danny@113.Red-81-44-89.dynamicIP.rima-tde.net) has joined #haskell
2013-07-25 10:33:49	bitonic	nooo, do\n is baaaaad
2013-07-25 10:33:50	<--	jdnavarro (~danny@113.Red-81-44-89.dynamicIP.rima-tde.net) has quit (Client Quit)
2013-07-25 10:33:57	bitonic	you can’t clearly see do blocks that way
2013-07-25 10:34:04	-->	jdnavarro (~danny@113.Red-81-44-89.dynamicIP.rima-tde.net) has joined #haskell
2013-07-25 10:34:21	-->	peterhil (~peterhil@158.127.31.162) has joined #haskell
2013-07-25 10:34:28	<--	hwiersma (~hwiersma@205.250.5.108) has quit (Ping timeout: 256 seconds)
2013-07-25 10:35:17	MasseR	bitonic: I find the other way to hide do better
2013-07-25 10:35:19	Lethalman	"do" keyword clutters the code
2013-07-25 10:35:40	bitonic	MasseR: well, “hiding” keywords is confusing
2013-07-25 10:35:52	MasseR	bitonic: Exactly. Thats why I do do\n
2013-07-25 10:36:19	bitonic	MasseR: wait, you think that the on-line do hides the do more?
2013-07-25 10:36:19	MasseR	But then again, this is same as foo {} vs foo\n{}. You get used to either one
2013-07-25 10:36:23	bitonic	I think it’s the opposite
2013-07-25 10:36:25	 *	Kinnison has looked at his code and appears to use do\ncode at the "top level" and do code\n when adding blocks within functions
2013-07-25 10:36:41	Lethalman	foo $ do\n
2013-07-25 10:36:44	<--	elediaz (~elediaz@92.59.147.112) has quit (Ping timeout: 264 seconds)
2013-07-25 10:37:11	Lethalman	foo $ \x -> do
2013-07-25 10:37:26	Kinnison	Hah, having said that, I appear to be super inconsistent anyway -- yay for not having found a "style" yet
2013-07-25 10:37:59	-->	kingugo (~kingugo@196.46.245.58) has joined #haskell
2013-07-25 10:38:12	Lethalman	also I'm satisfied to have discovered MultiWayIf
2013-07-25 10:38:41	-->	perspectival (~perspecti@35.158.broadband4.iol.cz) has joined #haskell
2013-07-25 10:38:42	Lethalman	that syntax rocks
2013-07-25 10:38:50	<--	perspectival (~perspecti@35.158.broadband4.iol.cz) has quit (Client Quit)
2013-07-25 10:39:18	-->	perspectival (~perspecti@35.158.broadband4.iol.cz) has joined #haskell
2013-07-25 10:39:43	-->	yug (~kingugo@196.46.245.53) has joined #haskell
2013-07-25 10:40:12	-->	HugoDaniel (~hugo@elab.fcsh.unl.pt) has joined #haskell
2013-07-25 10:40:16	<--	DolphR (~dolph@0149000198.0.fullrate.dk) has quit (Quit: Leaving.)
2013-07-25 10:40:20	HugoDaniel	hi
2013-07-25 10:40:23	-->	DolphR1 (~dolph@0149000198.0.fullrate.dk) has joined #haskell
2013-07-25 10:40:31	james-ubc	so I've heard haskell is getting pretty popular in the gnome processing crowd
2013-07-25 10:41:09	-->	csakatoku (~csakatoku@s1106215.xgsspn.imtp.tachikawa.spmode.ne.jp) has joined #haskell
2013-07-25 10:41:36	jzelinskie	how does one pronounce <$> ?
2013-07-25 10:41:52	jzelinskie	apply?
2013-07-25 10:41:52	Nimatek	fmap
2013-07-25 10:41:55	jzelinskie	fmap?
2013-07-25 10:42:03	opqdonut	:t (<$>)
2013-07-25 10:42:04	lambdabot	Functor f => (a -> b) -> f a -> f b
2013-07-25 10:42:05	opqdonut	:t fmap
2013-07-25 10:42:06	lambdabot	Functor f => (a -> b) -> f a -> f b
2013-07-25 10:42:08	jzelinskie	<*> is apply right
2013-07-25 10:42:14	opqdonut	@source (<$>)
2013-07-25 10:42:14	lambdabot	Unknown command, try @list
2013-07-25 10:42:20	opqdonut	@src (<$>)
2013-07-25 10:42:20	lambdabot	f <$> a = fmap f a
2013-07-25 10:42:23	opqdonut	there ya go
2013-07-25 10:42:35	sopvop	james-ubc: processed gnome... food?
2013-07-25 10:42:41	<--	kingugo (~kingugo@196.46.245.58) has quit (Ping timeout: 240 seconds)
2013-07-25 10:43:13	jzelinskie	so functors implement <$> as well?
2013-07-25 10:43:15	-->	elediaz (~elediaz@92.59.142.109) has joined #haskell
2013-07-25 10:43:15	dobblego	money bum
2013-07-25 10:43:24	jzelinskie	not just applicatives?
2013-07-25 10:43:41	dobblego	all applicatives implement functor
2013-07-25 10:43:45	jzelinskie	i know that
2013-07-25 10:43:56	johnw	<$> is just an operator name for fmap
2013-07-25 10:43:59	sopvop	<$> is just infix fmap
2013-07-25 10:44:01	johnw	so it's really a Functor thing
2013-07-25 10:44:05	jzelinskie	ok cool
2013-07-25 10:44:10	jzelinskie	i've only seen it used with applicatives
2013-07-25 10:44:21	johnw	just happens to live in Control.Applicative for consistency of use with <*>
2013-07-25 10:44:25	jzelinskie	ah
2013-07-25 10:44:28	jzelinskie	makes sense, thanks
2013-07-25 10:44:34	-->	pkkm (~pawel@acya126.neoplus.adsl.tpnet.pl) has joined #haskell
2013-07-25 10:44:58	quchen	I think it's moved to Data.Functor in the next release (but re-exported from Applicative).
2013-07-25 10:45:39	jzelinskie	i also recently discovered that Monads aren't required to be Functors. Historical baggage?
2013-07-25 10:45:47	HugoDaniel	james-ubc: why ?
2013-07-25 10:45:52	mauke	jzelinskie: yeah
2013-07-25 10:46:07	-->	mars-92 (~makis@Starbucks-AC-91.forthnet.gr) has joined #haskell
2013-07-25 10:46:19	jzelinskie	I assume if they changed it, legacy stuff would break because they don't have the instance defined?
2013-07-25 10:46:22	<--	csakatoku (~csakatoku@s1106215.xgsspn.imtp.tachikawa.spmode.ne.jp) has quit (Ping timeout: 240 seconds)
2013-07-25 10:46:34	-->	MindlessDrone (~MindlessD@141.70.114.6) has joined #haskell
2013-07-25 10:46:37	quchen	jzelinskie: We'll see in a couple of months. :-)
2013-07-25 10:46:51	johnw	jzelinskie: they are changing it.  Actually, all Monads are Applicatives, which are all Functors
2013-07-25 10:46:53	jzelinskie	glad to see they plan on fixing it
2013-07-25 10:47:08	quchen	We're trying to make the change gradually, generating warnings first, and then doing the actual change in a couple of versions.
2013-07-25 10:47:20	<--	ulfdoz (~mary@95.81-167-139.customer.lyse.net) has quit (Ping timeout: 256 seconds)
2013-07-25 10:47:51	jzelinskie	yeah, I'm 12 chapters into Learn You a Haskell, so I'm kinda confirming that knowledge johnw
2013-07-25 10:48:08	<--	kstuart (~Thunderbi@host81-129-118-94.range81-129.btcentralplus.com) has quit (Ping timeout: 248 seconds)
2013-07-25 10:48:50	ogew2	newbie question: you can pattern match a newtype like it is a 2-tuple ?
2013-07-25 10:49:08	quchen	ogew2: You can't have a newtype of something with multiple fields.
2013-07-25 10:49:18	james-ubc	HugoDaniel, easier than perl and faster than other langs without much work
2013-07-25 10:49:20	dobblego	ogew2: if the newtype takes a pair in its constructor argument sure
2013-07-25 10:49:33	james-ubc	this is like grad stuff though O.o
2013-07-25 10:50:14	ogew2	noted with thanks
2013-07-25 10:50:16	quchen	ogew2: newtype Foo a = Foo a a -- Error
2013-07-25 10:50:26	quchen	ogew2: newtype Bar a = Bar (a, a) -- matchable as usual
2013-07-25 10:50:43	ogew2	ahh.
2013-07-25 10:51:07	quchen	ogew2: For what it's worth, newtype is pretty much the same as a restricted version of data, up to some details.
2013-07-25 10:51:17	ogew2	(Bar x) = x --  that means x = (a, a) ?
2013-07-25 10:51:32	ogew2	can i (Bar (x, y)) ?
2013-07-25 10:51:39	quchen	Something along those lines, yes.
2013-07-25 10:51:40	dobblego	yes
2013-07-25 10:51:50	ogew2	cool thanks all
2013-07-25 10:51:56	<--	pkkm (~pawel@acya126.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2013-07-25 10:52:05	-->	pkkm (~pawel@acya126.neoplus.adsl.tpnet.pl) has joined #haskell
2013-07-25 10:52:17	quchen	ogew2:  "that means x = (a, a)" - that "=" should be a "::".
2013-07-25 10:52:29	quchen	You mixed types and values there.
2013-07-25 10:52:39	ogew2	nice tips
2013-07-25 10:52:42	-->	edsko (~edsko@95.83.253.91) has joined #haskell
2013-07-25 10:52:58	ogew2	thanks
2013-07-25 10:55:18	-->	Kuraitou_ (~kuraitou@unaffiliated/kuraitou) has joined #haskell
2013-07-25 10:55:20	-->	doomlord (~doomlod@host86-180-26-144.range86-180.btcentralplus.com) has joined #haskell
2013-07-25 10:55:43	-->	dreixel (~dreixel@host86-185-181-190.range86-185.btcentralplus.com) has joined #haskell
2013-07-25 10:56:17	-->	gadjo (~gggg@109.102.72.188) has joined #haskell
2013-07-25 10:56:56	<--	Wizcrack (~Wizcrack@c-67-181-247-60.hsd1.ca.comcast.net) has quit (Ping timeout: 256 seconds)
2013-07-25 10:57:51	-->	nexx (nexx@dslb-178-011-051-039.pools.arcor-ip.net) has joined #haskell
2013-07-25 10:58:13	<--	fosky (~fosky@ppp118-209-48-173.lns20.mel4.internode.on.net) has quit (Ping timeout: 276 seconds)
2013-07-25 10:58:19	<--	Kuraitou (~kuraitou@unaffiliated/kuraitou) has quit (Ping timeout: 246 seconds)
2013-07-25 10:58:31	<--	miclorb (~textual@ppp121-44-97-136.lns20.syd6.internode.on.net) has quit (Quit: miclorb)
2013-07-25 10:58:40	-->	kmels_ (~kmels@190.148.117.178) has joined #haskell
2013-07-25 10:59:12	-->	hexagoxel (~hexagoxel@kiel-4d066b75.pool.mediaWays.net) has joined #haskell
2013-07-25 10:59:43	<--	Peaker (~Peaker@87.69.111.138) has quit (Quit: Leaving)
2013-07-25 11:00:47	<--	osa1 (~omer@178-211-43-55.turkrdns.com) has quit (Quit: Konversation terminated!)
2013-07-25 11:01:02	<--	talzeus (~studybot_@101.110.31.120) has quit (Ping timeout: 240 seconds)
2013-07-25 11:01:04	<--	chatsiri_ (~chatsiri_@49.48.95.134) has quit (Ping timeout: 256 seconds)
2013-07-25 11:02:07	<--	kmels__ (~kmels@190.148.117.178) has quit (Ping timeout: 276 seconds)
2013-07-25 11:02:16	-->	talzeus (~studybot_@101.110.31.120) has joined #haskell
2013-07-25 11:04:00	<--	dimday (~amcvega@49.144.194.156) has quit (Ping timeout: 241 seconds)
2013-07-25 11:04:11	<--	supki (~matt@178.79.168.103) has quit (Ping timeout: 260 seconds)
2013-07-25 11:04:18	-->	donri (~dag@unaffiliated/dagodenhall) has joined #haskell
2013-07-25 11:05:37	<--	chrisbuchholz (~chrisbuch@li189-30.members.linode.com) has quit (Ping timeout: 248 seconds)
2013-07-25 11:05:38	-->	supki (~matt@li305-103.members.linode.com) has joined #haskell
2013-07-25 11:05:42	<--	edsko (~edsko@95.83.253.91) has quit (Quit: Leaving)
2013-07-25 11:06:28	-->	Reite (~Reite@cCF3F47C1.dhcp.as2116.net) has joined #haskell
2013-07-25 11:06:45	-->	raichoo (~raichoo@mue-88-130-2-036.dsl.tropolys.de) has joined #haskell
2013-07-25 11:07:59	<--	Guest68217 (Biohazard@biohazard.tropicraft.net) has quit (Ping timeout: 264 seconds)
2013-07-25 11:08:17	-->	chrisbuchholz (~chrisbuch@li189-30.members.linode.com) has joined #haskell
2013-07-25 11:09:41	MedDev	Is there a lot of overhead associated with using writeFile and show?
2013-07-25 11:10:05	m3ga	MedDev: in comparison to what?
2013-07-25 11:10:22	MedDev	lol good question
2013-07-25 11:10:48	-->	bio- (Biohazard@biohazard.tropicraft.net) has joined #haskell
2013-07-25 11:10:53	<--	Quadrescence (~quad@unaffiliated/quadrescence) has quit (Quit: This computer has gone to sleep)
2013-07-25 11:10:55	<--	joehillen (~joe@c-67-170-106-204.hsd1.wa.comcast.net) has quit (Quit: Konversation terminated!)
2013-07-25 11:11:01	-->	zRecursive (~czsq888@110.188.64.44) has joined #haskell
2013-07-25 11:11:28	MedDev	m3ga, just trying to figure out the best way to force evaluation to see how long it takes to process the entirety for a huge sequence
2013-07-25 11:13:08	MedDev	I ended up producing a >80mb text file.  I think the coercion into a string is part of the time taken.
2013-07-25 11:13:22	mauke	:t evaluate . length . show
2013-07-25 11:13:23	lambdabot	Show a => a -> IO Int
2013-07-25 11:14:18	m3ga	not really a coercion, but yes, the conversion of show can be significant. mauke's suggestion is spot on.
2013-07-25 11:14:54	<--	jjohnsson (~jjohnsson@host-95-195-140-188.mobileonline.telia.com) has quit (Quit: jjohnsson)
2013-07-25 11:15:02	quchen	Use the `force`, Luke!
2013-07-25 11:15:25	quchen	http://hackage.haskell.org/packages/archive/deepseq/latest/doc/html/Control-DeepSeq.html#v:force
2013-07-25 11:15:42	quchen	MedDev: ^
2013-07-25 11:16:00	mauke	@hoogle force
2013-07-25 11:16:00	lambdabot	Control.DeepSeq force :: NFData a => a -> a
2013-07-25 11:16:00	lambdabot	package force-layout
2013-07-25 11:16:00	lambdabot	Graphics.UI.GLUT.Initialization ForceDirectContext :: DirectRendering
2013-07-25 11:16:11	mauke	that doesn't even do anything
2013-07-25 11:16:34	quchen	..?
2013-07-25 11:16:47	mauke	you still have to force the outermost layer somehow
2013-07-25 11:16:52	quchen	That is correct.
2013-07-25 11:17:36	mauke	recordTime; evaluate (force x); recordTime; evaluate (length (show x)); recordTime
2013-07-25 11:17:55	<--	maoe (~maoe@218.201.120.153.tokyo.global.crust-r.net) has quit (Quit: Leaving.)
2013-07-25 11:18:25	MedDev	mauke, that seems to have worked!
2013-07-25 11:18:51	-->	merijn (~merijn@laptop-27-102.macs.hw.ac.uk) has joined #haskell
2013-07-25 11:18:56	-->	maoe (~maoe@218.201.120.153.tokyo.global.crust-r.net) has joined #haskell
2013-07-25 11:19:05	-->	rohit (~rohit@117.208.28.215) has joined #haskell
2013-07-25 11:20:36	quchen	recordTime >> (evaluate $!! show x) >> recordTime
2013-07-25 11:20:37	hvr	johnw: ping?
2013-07-25 11:21:01	-->	ulfdoz (~mary@95.81-167-139.customer.lyse.net) has joined #haskell
2013-07-25 11:21:21	quchen	Ah, he just wants to profile the `show`, nevermind, in that case: what Mauke said.
2013-07-25 11:21:46	MedDev	no i want to take show out of the picture
2013-07-25 11:21:47	<--	skchrko (~sk@130.255.129.64) has quit (Quit: Leaving)
2013-07-25 11:22:14	-->	dysinger (~tim@cpe-24-94-76-59.hawaii.res.rr.com) has joined #haskell
2013-07-25 11:22:38	quchen	So you have a thunk and you want to see how long it takes to reduce it to normal form?
2013-07-25 11:22:43	<--	jdnavarro (~danny@113.Red-81-44-89.dynamicIP.rima-tde.net) has quit (Read error: Connection reset by peer)
2013-07-25 11:22:59	-->	erochester (~erocheste@c-71-206-171-217.hsd1.va.comcast.net) has joined #haskell
2013-07-25 11:23:03	quchen	In any case, you'll want to use some function from DeepSeq.
2013-07-25 11:23:06	-->	jdnavarro (~danny@2.Red-88-1-184.dynamicIP.rima-tde.net) has joined #haskell
2013-07-25 11:23:12	MedDev	ok I'll look around
2013-07-25 11:23:14	MedDev	thanks :)
2013-07-25 11:23:33	<--	rohit (~rohit@117.208.28.215) has quit (Client Quit)
2013-07-25 11:23:49	<--	maoe (~maoe@218.201.120.153.tokyo.global.crust-r.net) has quit (Remote host closed the connection)
2013-07-25 11:23:56	quchen	Just remember that "force x" is a thunk like everything else. To force the x, you have to evaluate "force x" to at least WHNF.
2013-07-25 11:24:09	quchen	That's why we wrapped it in an additional `evaluate` above.
2013-07-25 11:24:32	-->	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has joined #haskell
2013-07-25 11:24:59	MedDev	I'll try to remember, but can't promise I will ;)
2013-07-25 11:26:06	-->	igstan (~igstan@5-12-111-157.residential.rdsnet.ro) has joined #haskell
2013-07-25 11:26:16	zRecursive	weird lazy :)
2013-07-25 11:26:20	-->	hashcat (~chatzilla@110-27-40-138.adsl.fetnet.net) has joined #haskell
2013-07-25 11:26:58	<--	dysinger (~tim@cpe-24-94-76-59.hawaii.res.rr.com) has quit (Ping timeout: 256 seconds)
2013-07-25 11:27:39	-->	maoe (~maoe@153.120.201.218) has joined #haskell
2013-07-25 11:27:58	quchen	zRecursive: Usually you're not really interested when exactly the force is evaluated. It's often used in a parallel scenario, and as long as it's in the parallel computation you're fine.
2013-07-25 11:28:12	<--	perspectival (~perspecti@35.158.broadband4.iol.cz) has quit (Quit: Leaving.)
2013-07-25 11:28:21	quchen	Of course it would be bad if all the parallel computation did nothing but tell the main thread to please evaluate some `force` sequentially :-)
2013-07-25 11:28:29	-->	perspectival (~perspecti@35.158.broadband4.iol.cz) has joined #haskell
2013-07-25 11:29:32	quchen	zRecursive: Forcing evaluation at some specific point so you can put timers around it is kind of the inverse of making a C++ program a little lazy sometimes. It's awkward.
2013-07-25 11:29:33	zRecursive	seems hard to control
2013-07-25 11:30:17	quchen	Control.Concurrent makes it surprisingly easy.
2013-07-25 11:30:39	zRecursive	@hoogle Control.Concurrent
2013-07-25 11:30:39	lambdabot	Control.Concurrent module Control.Concurrent
2013-07-25 11:30:39	lambdabot	package concurrent-barrier
2013-07-25 11:30:39	lambdabot	package concurrent-extra
2013-07-25 11:30:46	quchen	Eh, Control.Parallel
2013-07-25 11:30:47	quchen	pardon
2013-07-25 11:30:53	DexterLB	is there an arbitrary root function?
2013-07-25 11:30:58	quchen	sqrt?
2013-07-25 11:31:01	mauke	**
2013-07-25 11:31:11	quchen	Oh, arbitrary non-square.
2013-07-25 11:31:14	-->	miclorb (~textual@ppp121-44-97-136.lns20.syd6.internode.on.net) has joined #haskell
2013-07-25 11:31:16	DexterLB	^
2013-07-25 11:31:22	<--	kludge` (~comet@unaffiliated/espiral) has quit (Ping timeout: 276 seconds)
2013-07-25 11:31:28	mauke	definitely not ^
2013-07-25 11:31:33	DexterLB	lol
2013-07-25 11:32:12	mauke	> 27 ** (1/3)
2013-07-25 11:32:13	lambdabot	  3.0
2013-07-25 11:32:40	DexterLB	ah, that's awesome
2013-07-25 11:32:41	DexterLB	thanks
2013-07-25 11:32:52	Lethalman	:t 27**(1/3)
2013-07-25 11:32:52	zRecursive	> 27 ^^ (1/3)
2013-07-25 11:32:53	lambdabot	Floating a => a
2013-07-25 11:32:53	lambdabot	  Could not deduce (GHC.Num.Num b0) arising from the literal `1'
2013-07-25 11:32:53	lambdabot	 from the co...
2013-07-25 11:33:09	-->	jophish_ (~jophish@cpc2-oxfd18-2-0-cust473.4-3.cable.virginmedia.com) has joined #haskell
2013-07-25 11:33:20	Lethalman	:t 1/3
2013-07-25 11:33:20	mauke	^^ needs integral exponents
2013-07-25 11:33:21	lambdabot	Fractional a => a
2013-07-25 11:33:30	jophish_	Yo yo yo
2013-07-25 11:33:48	<--	Bryan792 (~bryan@66-214-64-25.dhcp.snlo.ca.charter.com) has quit (Ping timeout: 246 seconds)
2013-07-25 11:34:29	<--	gadjo (~gggg@109.102.72.188) has quit (Ping timeout: 248 seconds)
2013-07-25 11:35:25	-->	xpika (~jrg@120.152.214.193) has joined #haskell
2013-07-25 11:37:03	-->	chuzz (~chuzz@host56-93-dynamic.9-87-r.retail.telecomitalia.it) has joined #haskell
2013-07-25 11:37:07	<--	chuzz (~chuzz@host56-93-dynamic.9-87-r.retail.telecomitalia.it) has quit (Changing host)
2013-07-25 11:37:07	-->	chuzz (~chuzz@unaffiliated/chuzz) has joined #haskell
2013-07-25 11:37:19	-->	kludge` (~comet@unaffiliated/espiral) has joined #haskell
2013-07-25 11:37:21	<--	hexagoxel (~hexagoxel@kiel-4d066b75.pool.mediaWays.net) has quit (Ping timeout: 264 seconds)
2013-07-25 11:37:28	-->	goldkatze (~nobody@unaffiliated/goldkatze) has joined #haskell
2013-07-25 11:37:35	-->	Catbuntu (~lanadelre@unaffiliated/lanadelrey) has joined #haskell
2013-07-25 11:38:16	<--	zRecursive (~czsq888@110.188.64.44) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2013-07-25 11:38:22	-->	MnO2 (~MnO2@nat/yahoo/x-nsddreoibqprhlhz) has joined #haskell
2013-07-25 11:38:42	<--	Wizek (~Wizek@catv-80-98-252-30.catv.broadband.hu) has quit (Ping timeout: 246 seconds)
2013-07-25 11:38:55	-->	matttt_ (3b591736@gateway/web/freenode/ip.59.89.23.54) has joined #haskell
2013-07-25 11:39:33	matttt_	I just install mueval using `cabal install mueval`, now when I run `mueval -e '1 + 1'`, I get this error: "Could not find module `ShowQ'"
2013-07-25 11:39:42	<--	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has quit (Ping timeout: 264 seconds)
2013-07-25 11:39:52	matttt_	any ideas what could be the problem?
2013-07-25 11:41:31	<--	pkkm (~pawel@acya126.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 260 seconds)
2013-07-25 11:41:51	-->	pkkm (~pawel@acya126.neoplus.adsl.tpnet.pl) has joined #haskell
2013-07-25 11:42:53	<--	arossouw (~arossouw@196.36.203.18) has quit (Ping timeout: 268 seconds)
2013-07-25 11:43:01	<--	knightshade (~knightsha@p54BC501C.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2013-07-25 11:43:14	-->	niklasb (~codeslay0@p5B313132.dip0.t-ipconnect.de) has joined #haskell
2013-07-25 11:43:44	<--	jlaire (~jlaire@80-248-241-41.cust.suomicom.fi) has quit (Ping timeout: 245 seconds)
2013-07-25 11:43:48	<--	nschoe (~nschoe@204.79.138.88.rev.sfr.net) has quit (Quit: This computer has gone to sleep)
2013-07-25 11:44:13	<--	diabel232 (~diabel232@d51532C90.access.telenet.be) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2013-07-25 11:44:14	-->	jbracker_ (~quassel@m-116.informatik.uni-kiel.de) has joined #haskell
2013-07-25 11:44:25	-->	m0g (~mog@136.206.48.176) has joined #haskell
2013-07-25 11:44:32	quchen	Suppose I have a list of IO actions that each query a server, and I'd like to evaluate this concurrently. In order not to launch a heavy DDoS attack, I'd like to limit the number of concurrently executed actions to N. Is there a standard function to do this, or do I have to write my own little bookkeeper?
2013-07-25 11:44:40	--	jbracker_ is now known as jbracker
2013-07-25 11:44:59	t7	so i would like to create a buffer of random primes in a background thread and regenerate them as they are used, using channels or something. What are my options?
2013-07-25 11:45:04	mauke	quchen: maybe there's something in async?
2013-07-25 11:45:51	<--	lukexi (~lukexi@cpe-72-229-189-117.nyc.res.rr.com) has quit (Quit: lukexi)
2013-07-25 11:45:56	<--	MercurialAlchemi (~Mercurial@188.114.134.119) has quit (Read error: Operation timed out)
2013-07-25 11:45:57	t7	is there a lazy way todo an IO thing?
2013-07-25 11:46:13	-->	dmwit_ (~dmwit@pool-71-175-252-167.phlapa.east.verizon.net) has joined #haskell
2013-07-25 11:46:14	-->	jlaire (~jlaire@80-248-241-41.cust.suomicom.fi) has joined #haskell
2013-07-25 11:46:25	quchen	t7: Fork off a prime-generating thread with a bounded channel to the workers?
2013-07-25 11:47:00	t7	oh nice
2013-07-25 11:47:31	<--	matttt_ (3b591736@gateway/web/freenode/ip.59.89.23.54) has quit (Quit: Page closed)
2013-07-25 11:47:34	-->	MercurialAlchemi (~Mercurial@sopona.idm.fr) has joined #haskell
2013-07-25 11:47:43	quchen	TBQueue should be what you're looking for
2013-07-25 11:47:52	t7	oh i found boundedchan
2013-07-25 11:48:19	-->	arossouw (~arossouw@196.36.203.18) has joined #haskell
2013-07-25 11:48:38	donri	stupid question: can it affect compile times if dependencies were previously built -O2? i guess larger object files take longer to link statically? anything else?
2013-07-25 11:49:00	<--	dmwit (~dmwit@pool-98-111-150-29.phlapa.east.verizon.net) has quit (Ping timeout: 261 seconds)
2013-07-25 11:49:21	Saizan	more stuff will be available for inlining, i think
2013-07-25 11:49:36	donri	t7: there's unsafeInterleaveIO and it's called unsafe for a reason :)
2013-07-25 11:49:46	-->	diabel232 (~diabel232@d51532C90.access.telenet.be) has joined #haskell
2013-07-25 11:49:46	<--	diabel232 (~diabel232@d51532C90.access.telenet.be) has quit (Client Quit)
2013-07-25 11:49:49	-->	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has joined #haskell
2013-07-25 11:49:59	Saizan	but icbw
2013-07-25 11:50:08	-->	diabel232 (~diabel232@d51532C90.access.telenet.be) has joined #haskell
2013-07-25 11:50:25	donri	Saizan: sounds plausible for sure
2013-07-25 11:50:26	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Read error: Operation timed out)
2013-07-25 11:50:38	--	kcj is now known as kcj_
2013-07-25 11:50:51	Saizan	donri: you could compare the .hi files, ghc has a flag to decode them
2013-07-25 11:50:54	--	kcj_ is now known as kcj
2013-07-25 11:50:55	quchen	mauke: Can't find anything there. I'll just go with forking N workers and distributing the tasks from some other thread.
2013-07-25 11:51:26	donri	thing is i proposed for fedora that they build their haskell rpms with -O2 thinking it would only benefit users. maybe it will make for worse build times though even if you don't use -O2 yourself
2013-07-25 11:51:44	-->	zugz (~zugz@host86-158-174-156.range86-158.btcentralplus.com) has joined #haskell
2013-07-25 11:51:55	donri	juhp: ^
2013-07-25 11:52:02	<--	MedDev (~MDev@68-112-203-118.dhcp.eucl.wi.charter.com) has quit (Ping timeout: 240 seconds)
2013-07-25 11:52:12	quchen	donri: Isn't O2 pretty much the same as O1?
2013-07-25 11:52:29	donri	quchen: not IME or from what i've heard from others
2013-07-25 11:52:35	quchen	IME?
2013-07-25 11:52:38	donri	in my experience
2013-07-25 11:53:01	donri	i've seen cases where -O2 magically fixed memory explosions
2013-07-25 11:53:06	quchen	Oh.
2013-07-25 11:53:29	t7	quchen: how do i do an STM thing in the IO monad?
2013-07-25 11:53:31	zugz	'keys' is a sorted list of Text strings, and I want a memory-efficient data structure which will allow me to look up the *index* of an element of keys. "Map.fromAscList $ zip keys [0..]"  does the job, but is too expensive in terms of memory. Any suggestions?
2013-07-25 11:53:37	t7	or should i be doing the reverse?
2013-07-25 11:53:41	quchen	t7: atomically :: STM a -> IO a
2013-07-25 11:53:57	quchen	t7: No, STM actions are always embedded in IO actions at some point.
2013-07-25 11:53:59	donri	you can't do the reverse
2013-07-25 11:54:06	donri	it's much of the point of stm :)
2013-07-25 11:54:26	donri	or i should say, the STM monad
2013-07-25 11:54:31	quchen	t7: Have you read the STM chapter of RWH?
2013-07-25 11:54:42	quchen	And while we're at it, Simon Marlow's book is online (for the time being)
2013-07-25 11:54:56	quchen	http://chimera.labs.oreilly.com/books/1230000000929/index.html
2013-07-25 11:55:47	-->	jjohnsson (~jjohnsson@host-95-195-140-188.mobileonline.telia.com) has joined #haskell
2013-07-25 11:55:50	merijn	Right, I've now patched my patch for the second time >.>
2013-07-25 11:55:59	donri	zugz: Data.Set and lookupIndex maybe?
2013-07-25 11:56:06	quchen	merijn: Merge problems or did your fix not work?
2013-07-25 11:56:21	donri	zugz: assuming you don't have collisions
2013-07-25 11:56:27	<--	CADD (~CADD@12.227.104.109) has quit (Ping timeout: 268 seconds)
2013-07-25 11:56:38	merijn	quchen: First my fix just moved the error, then I noticed unnecessary code >.>
2013-07-25 11:56:41	<--	harovali1 (~harovali@186.52.74.204) has quit (Read error: Connection reset by peer)
2013-07-25 11:57:08	quchen	The second law at work! :-)
2013-07-25 11:57:12	zugz	donri: sounds perfect, but where is lookupIndex? Not in http://www.haskell.org/ghc/docs/latest/html/libraries/containers/Data-Set.html
2013-07-25 11:57:40	-->	CADD (~CADD@12.227.104.109) has joined #haskell
2013-07-25 11:57:42	zugz	donri: aha! Data.Set.Strict
2013-07-25 11:57:45	donri	zugz: apparently new http://hackage.haskell.org/packages/archive/containers/0.5.2.1/doc/html/Data-Set.html#g:8
2013-07-25 11:58:07	 *	hackagebot language-java 0.2.5 - Manipulating Java source: abstract syntax, lexer, parser, and pretty-printer  http://hackage.haskell.org/package/language-java-0.2.5 (JamesKoppel)
2013-07-25 11:58:15	donri	not sure where you're seeing that module
2013-07-25 11:58:19	donri	it's not in containers
2013-07-25 11:58:21	zugz	donri: oh ignore that, getting confused
2013-07-25 11:58:25	merijn	@tell applicative Are you sure you're using the recompiled/patched GHC? Also, which platform (i.e. architecture, GHC version, GHC bitsize, etc.) are you on?
2013-07-25 11:58:25	lambdabot	Consider it noted.
2013-07-25 11:58:28	-->	hajimeho_ (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has joined #haskell
2013-07-25 11:59:11	zugz	donri: and cool, I'll try the new library. Thanks!
2013-07-25 11:59:28	--	anildigital_away is now known as anildigital
2013-07-25 11:59:37	donri	zugz: it tends to get messy if you upgrade core libraries though
2013-07-25 11:59:56	-->	harovali (~harovali@r190-134-146-61.dialup.adsl.anteldata.net.uy) has joined #haskell
2013-07-25 12:00:36	t7	hpaste is down?
2013-07-25 12:00:39	quchen	^ This. In my experience, reinstalling everything is much faster than surgery in Base.
2013-07-25 12:00:42	<--	novascor1io (~matt@cpe-98-14-205-174.nyc.res.rr.com) has quit (Ping timeout: 240 seconds)
2013-07-25 12:00:44	t7	am i doing it right? http://paste.ubuntu.com/5910635/
2013-07-25 12:00:44	quchen	t7: it's LPaste now.
2013-07-25 12:00:45	quchen	@paste
2013-07-25 12:00:46	lambdabot	Haskell pastebin: http://hpaste.org/
2013-07-25 12:00:48	quchen	…
2013-07-25 12:00:50	quchen	@where paste
2013-07-25 12:00:51	lambdabot	http://lpaste.net/new/haskell
2013-07-25 12:00:52	quchen	Ah.
2013-07-25 12:01:10	quchen	@tell Cale Lambdabot's @paste still mentions hpaste instead of lpaste
2013-07-25 12:01:10	lambdabot	Consider it noted.
2013-07-25 12:01:21	-->	skchrko (~sk@109.110.93.94) has joined #haskell
2013-07-25 12:01:48	<--	arossouw (~arossouw@196.36.203.18) has quit (Ping timeout: 246 seconds)
2013-07-25 12:03:06	t7	@hoogle m a -> int -> [m a]
2013-07-25 12:03:06	lambdabot	Did you mean: m a -> Int -> [m a]
2013-07-25 12:03:07	lambdabot	Control.Applicative (<*) :: Applicative f => f a -> f b -> f a
2013-07-25 12:03:07	lambdabot	Control.Applicative (*>) :: Applicative f => f a -> f b -> f b
2013-07-25 12:03:10	t7	@hoogle m a -> int -> m [a]
2013-07-25 12:03:10	lambdabot	Did you mean: m a -> Int -> m [a]
2013-07-25 12:03:10	lambdabot	Text.ParserCombinators.ReadP endBy :: ReadP a -> ReadP sep -> ReadP [a]
2013-07-25 12:03:10	lambdabot	Text.ParserCombinators.ReadP endBy1 :: ReadP a -> ReadP sep -> ReadP [a]
2013-07-25 12:03:14	<--	hajimeho_ (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has quit (Ping timeout: 268 seconds)
2013-07-25 12:03:21	t7	> sequence
2013-07-25 12:03:22	lambdabot	  No instance for (Data.Typeable.Internal.Typeable1 m0)
2013-07-25 12:03:22	lambdabot	   arising from a use...
2013-07-25 12:03:32	t7	@hoogle sequence
2013-07-25 12:03:32	lambdabot	Prelude sequence :: Monad m => [m a] -> m [a]
2013-07-25 12:03:32	lambdabot	Control.Monad sequence :: Monad m => [m a] -> m [a]
2013-07-25 12:03:32	lambdabot	Prelude sequence_ :: Monad m => [m a] -> m ()
2013-07-25 12:03:34	-->	owst (~owst@tarsier.ecs.soton.ac.uk) has joined #haskell
2013-07-25 12:03:37	-->	arossouw (~arossouw@196.36.203.18) has joined #haskell
2013-07-25 12:03:46	t7	wrong way
2013-07-25 12:03:48	supki	quchen: I think elliott runs lambdabot currently
2013-07-25 12:04:42	quchen	@tell elliott Lambdabot's `@paste` still mentions hpaste instead of lpaste. (`@where paste` works correctly.)
2013-07-25 12:04:42	lambdabot	Consider it noted.
2013-07-25 12:04:46	-->	nimish (~nimish@dynamic-acs-24-101-115-15.zoominternet.net) has joined #haskell
2013-07-25 12:05:21	<--	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has quit (Read error: Connection reset by peer)
2013-07-25 12:05:28	-->	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has joined #haskell
2013-07-25 12:05:48	<--	talzeus (~studybot_@101.110.31.120) has quit (Ping timeout: 260 seconds)
2013-07-25 12:05:49	<--	ulfdoz (~mary@95.81-167-139.customer.lyse.net) has quit (Ping timeout: 276 seconds)
2013-07-25 12:06:39	<--	zz_nh2 (~nh2@2001:41d0:1:c648::1) has quit (Ping timeout: 245 seconds)
2013-07-25 12:08:21	-->	skyflash (~skyflash@96.53.63.54) has joined #haskell
2013-07-25 12:08:22	<--	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has quit (Read error: Connection reset by peer)
2013-07-25 12:08:28	-->	Argue (~Argue@112.209.127.125) has joined #haskell
2013-07-25 12:09:02	<--	nimish (~nimish@dynamic-acs-24-101-115-15.zoominternet.net) has quit (Ping timeout: 240 seconds)
2013-07-25 12:09:03	-->	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has joined #haskell
2013-07-25 12:09:18	-->	refold (~gman@h-54-251.a258.priv.bahnhof.se) has joined #haskell
2013-07-25 12:09:27	-->	dcoutts_ (~dcoutts@unaffiliated/dcoutts) has joined #haskell
2013-07-25 12:09:30	<--	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has quit (Client Quit)
2013-07-25 12:09:40	zugz	donri: "ghc -icontainers" will do me for now
2013-07-25 12:09:40	-->	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has joined #haskell
2013-07-25 12:09:40	<--	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has quit (Client Quit)
2013-07-25 12:09:49	-->	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has joined #haskell
2013-07-25 12:10:46	<--	miclorb (~textual@ppp121-44-97-136.lns20.syd6.internode.on.net) has quit (Quit: miclorb)
2013-07-25 12:11:05	<--	elediaz (~elediaz@92.59.142.109) has quit (Quit: Lost terminal)
2013-07-25 12:11:09	<--	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has quit (Client Quit)
2013-07-25 12:11:17	<--	MnO2 (~MnO2@nat/yahoo/x-nsddreoibqprhlhz) has quit (Quit: MnO2)
2013-07-25 12:11:24	-->	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has joined #haskell
2013-07-25 12:11:34	<--	gusto_ (~gusto@2001:470:1f0b:226:221:6aff:feb8:e0b2) has quit (Client Quit)
2013-07-25 12:11:39	-->	nilsi (~nilsi@124.79.136.212) has joined #haskell
2013-07-25 12:12:00	<--	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has quit (Quit: DrTeggy)
2013-07-25 12:12:35	-->	zz_nh2 (~nh2@2001:41d0:1:c648::1) has joined #haskell
2013-07-25 12:12:52	-->	PRISMBITCH (~PRISMBITC@178-85-121-235.dynamic.upc.nl) has joined #haskell
2013-07-25 12:12:58	<--	xpika (~jrg@120.152.214.193) has quit (Ping timeout: 276 seconds)
2013-07-25 12:14:45	-->	Icewing (~Icewing@unaffiliated/icewing) has joined #haskell
2013-07-25 12:15:41	-->	MedDev (~MDev@68-112-203-118.dhcp.eucl.wi.charter.com) has joined #haskell
2013-07-25 12:15:59	<--	ksf (~ksf@d099217.adsl.hansenet.de) has quit (Remote host closed the connection)
2013-07-25 12:16:15	-->	Kyzza (~df@198.199.108.230) has joined #haskell
2013-07-25 12:16:39	<--	Kyzza (~df@198.199.108.230) has quit (Client Quit)
2013-07-25 12:16:48	-->	Kyzza (~df@198.199.108.230) has joined #haskell
2013-07-25 12:17:01	<--	Kyzza (~df@198.199.108.230) has quit (Client Quit)
2013-07-25 12:17:28	-->	agumonkey (~agu@179.217.72.86.rev.sfr.net) has joined #haskell
2013-07-25 12:17:33	-->	Kyzza (~df@198.199.108.230) has joined #haskell
2013-07-25 12:17:37	-->	Croms (~dv@92.109.224.112) has joined #haskell
2013-07-25 12:17:44	-->	q66 (~quaker66@213.191.105.214) has joined #haskell
2013-07-25 12:18:50	-->	corkexaminer (~chrisdorn@88.98.47.131) has joined #haskell
2013-07-25 12:19:31	hpaste	jophish pasted “idiomatic haskell?” at http://lpaste.net/91202
2013-07-25 12:20:13	jophish_	I feel that this is quite complicated. I'm interested in writing like you pros, but don't really know how.
2013-07-25 12:20:30	jophish_	This is a lexer for kaleidoscope, http://llvm.org/docs/tutorial/OCamlLangImpl2.html
2013-07-25 12:20:50	-->	jozefg (~dannygrat@c-24-63-142-232.hsd1.ma.comcast.net) has joined #haskell
2013-07-25 12:20:51	dobblego	jophish: have you run hlint on it?
2013-07-25 12:20:54	jophish_	I'd really appreciate it if someone could take a quick look and suggest some points where this could be simplified
2013-07-25 12:20:54	-->	osa1 (~omer@178-211-43-55.turkrdns.com) has joined #haskell
2013-07-25 12:20:58	dobblego	m++[s] is glaring
2013-07-25 12:20:59	-->	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 12:21:28	jophish_	yeah, I could probably get away with just returning the length of the match there
2013-07-25 12:21:38	jophish_	and taking that many from the input string
2013-07-25 12:21:44	-->	hexagoxel (~hexagoxel@pc229236.wlan.uni-kiel.de) has joined #haskell
2013-07-25 12:22:07	jophish_	I'll take a look at hlint, I don't suppose that flags up algorithm problems though :)
2013-07-25 12:23:29	jophish_	getLongestPrefix was mostly stolen from regex-applicative, which just returned the remaining string, not too useful for advancing a source position
2013-07-25 12:23:34	<--	perspectival (~perspecti@35.158.broadband4.iol.cz) has quit (Quit: Leaving.)
2013-07-25 12:23:49	ClaudiusMaximus	jophish_: lpaste runs hlint, see the bottom of the page
2013-07-25 12:23:53	-->	perspectival (~perspecti@35.158.broadband4.iol.cz) has joined #haskell
2013-07-25 12:24:02	jophish_	oh, groovy
2013-07-25 12:25:11	-->	phischu (~pschuster@dhcp244.uni-koblenz.de) has joined #haskell
2013-07-25 12:25:41	<--	peterhil (~peterhil@158.127.31.162) has quit (Ping timeout: 248 seconds)
2013-07-25 12:26:37	<--	hexagoxel (~hexagoxel@pc229236.wlan.uni-kiel.de) has quit (Ping timeout: 276 seconds)
2013-07-25 12:26:40	-->	arborist (~arborist@g224211160.adsl.alicedsl.de) has joined #haskell
2013-07-25 12:27:22	-->	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has joined #haskell
2013-07-25 12:28:36	-->	kofno (~kofno@cpe-24-165-210-251.neo.res.rr.com) has joined #haskell
2013-07-25 12:30:07	-->	xl2 (~xl@124.205.93.160) has joined #haskell
2013-07-25 12:30:26	<--	xl1 (~xl@125.39.117.36) has quit (Ping timeout: 256 seconds)
2013-07-25 12:30:28	<--	skyflash (~skyflash@96.53.63.54) has quit (Remote host closed the connection)
2013-07-25 12:32:18	<--	diabel232 (~diabel232@d51532C90.access.telenet.be) has quit (Quit: Textual IRC Client: www.textualapp.com)
2013-07-25 12:33:19	<--	skypers (~skp@88-190-221-99.rev.dedibox.fr) has quit (Remote host closed the connection)
2013-07-25 12:33:38	<--	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-07-25 12:34:34	<--	yug (~kingugo@196.46.245.53) has quit (Ping timeout: 256 seconds)
2013-07-25 12:35:05	-->	lemao (~lemao@189.60.37.42) has joined #haskell
2013-07-25 12:35:37	-->	matheus23 (~quassel@p4FDF30A6.dip0.t-ipconnect.de) has joined #haskell
2013-07-25 12:36:04	<--	matheus23 (~quassel@p4FDF30A6.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2013-07-25 12:38:00	shiona	The number of mathematical ideas and/or useful haskell libraries is daunting. Is there a tried-and-true path from basic understanding of haskell onward?
2013-07-25 12:38:40	donri	@where rwh
2013-07-25 12:38:40	lambdabot	http://www.realworldhaskell.org/blog/ http://book.realworldhaskell.org/read/
2013-07-25 12:39:02	<--	kcj (~casey@unaffiliated/kcj) has quit (Ping timeout: 240 seconds)
2013-07-25 12:39:19	shiona	ok, I guess I never finished that
2013-07-25 12:39:26	shiona	so back I go
2013-07-25 12:39:30	<--	phischu (~pschuster@dhcp244.uni-koblenz.de) has quit (Ping timeout: 256 seconds)
2013-07-25 12:40:31	quchen	After RWH it's the usual find-and-learn-libraries phase.
2013-07-25 12:40:32	donri	it's not quite up to date with modern libraries, but still good
2013-07-25 12:41:31	-->	RoXtein (~roxtein@di18.di.fct.unl.pt) has joined #haskell
2013-07-25 12:41:42	<--	m0g (~mog@136.206.48.176) has quit (Quit: leaving)
2013-07-25 12:42:51	shiona	My problem is that although many people have taught me applicatives and monads, I still cant get a graps of them
2013-07-25 12:43:02	<--	chuzz (~chuzz@unaffiliated/chuzz) has quit (Ping timeout: 240 seconds)
2013-07-25 12:43:14	-->	morazow (~morazow@92.36.136.95.rev.vodafone.pt) has joined #haskell
2013-07-25 12:43:29	alexander__b	shiona: same. I hope intuition will kick in sometime soon.
2013-07-25 12:43:46	shiona	Then I go on and try to do something with ST and it works when it's under 50 lines, but after that the code somehow melts and I'm unable to save any of it
2013-07-25 12:43:58	alexander__b	shiona: though TBF a lot of haskell guys when trying to explain such things will just show you a million lines of code and say that it's obvious. :-P
2013-07-25 12:44:13	donri	ST probably isn't the best monad to start with
2013-07-25 12:45:23	shiona	what would you suggest?
2013-07-25 12:45:39	quchen	Maybe, Writer, State.
2013-07-25 12:45:41	quchen	In that order.
2013-07-25 12:45:45	-->	whaletechno (~whaletech@unaffiliated/whaletechno) has joined #haskell
2013-07-25 12:46:04	alexander__b	shiona: have you seen this: http://stackoverflow.com/questions/1012573/getting-started-with-haskell ? I keep getting referred to the top answer there, and it seems to be insightful. I am sort of following it. (though most people will tell you to skip the Euler phase.)
2013-07-25 12:46:52	<--	erochester (~erocheste@c-71-206-171-217.hsd1.va.comcast.net) has quit (Quit: Leaving.)
2013-07-25 12:47:08	-->	beckerb (~beckerb@2001:660:3013:3:7aac:c0ff:fea0:a7b4) has joined #haskell
2013-07-25 12:47:08	shiona	alexander__b: yes, I think I started going though the intermediate stuff about a year ago
2013-07-25 12:47:11	dobblego	I teach functional programming. I go List, Maybe, Reader, State, Writer, ReaderWriterState, Parser, in that order
2013-07-25 12:47:21	alexander__b	shiona: you are a lot further ahead than me then, heh.
2013-07-25 12:47:54	<--	bitonic (~user@2a02:1205:34dc:95e0:8e70:5aff:fe81:dd50) has quit (Ping timeout: 245 seconds)
2013-07-25 12:48:04	<--	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Remote host closed the connection)
2013-07-25 12:49:24	-->	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has joined #haskell
2013-07-25 12:50:06	shiona	ok, list and maybe are pretty much under my belt. Well, i know how to fmap over them, but using them in any more complex patterns will result in very imperative code
2013-07-25 12:51:23	<--	Krakarn (Krakarn@62.80.204.136) has quit
2013-07-25 12:51:30	-->	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has joined #haskell
2013-07-25 12:52:17	quchen	shiona: Suppose you have `database :: Map Int (Map Int String)`, which encodes a 2-dimensional table. Write a function that looks up the i-j-th index.
2013-07-25 12:52:35	<--	PRISMBITCH (~PRISMBITC@178-85-121-235.dynamic.upc.nl) has quit (Read error: Operation timed out)
2013-07-25 12:53:20	-->	Zenol (~zenol@ip-91.net-81-220-73.rev.numericable.fr) has joined #haskell
2013-07-25 12:53:26	quchen	(You can use Map.lookup in the solution of course.)
2013-07-25 12:53:28	donri	before you try to understand any of the type classes in haskell it's important that you understand the type class concept itself
2013-07-25 12:53:30	-->	JaRoel|4_ (~jaroel|4d@lukkien-test1.customer.bit.nl) has joined #haskell
2013-07-25 12:53:33	<--	s00pcan (~chris@108-208-64-149.lightspeed.livnmi.sbcglobal.net) has quit (Read error: Operation timed out)
2013-07-25 12:54:07	donri	for example it's easy to get baffled at how a monad computation could possibly work the way it does, missing the fact that >>= is a different operator for every type
2013-07-25 12:54:27	-->	alexsdutton (kebl2765@raven.linux.ox.ac.uk) has joined #haskell
2013-07-25 12:54:50	<--	pygospa (~Pygosceli@kiel-5f768749.pool.mediaWays.net) has quit (Disconnected by services)
2013-07-25 12:54:58	-->	TheRealPygo (~Pygosceli@kiel-4d06707f.pool.mediaWays.net) has joined #haskell
2013-07-25 12:54:59	t7	@hoogle (r -> a -> (b, r)) -> [a] -> r -> ([b], r)
2013-07-25 12:55:00	lambdabot	No results found
2013-07-25 12:55:00	-->	Krakarn (Krakarn@62.80.204.136) has joined #haskell
2013-07-25 12:55:01	donri	also, do notation is great and you should use it, but it's also important to understand how to work without it
2013-07-25 12:55:04	ogew2	quchen: lookup :: Int -> Int -> String ? Am I right or I need to constraint to database or something
2013-07-25 12:55:08	t7	@hoogle (r -> a -> (b, r)) -> [a] -> r
2013-07-25 12:55:08	donri	(and when it is redundant)
2013-07-25 12:55:08	lambdabot	No results found
2013-07-25 12:55:15	<--	amosr (~amos@28.30.233.220.static.exetel.com.au) has quit (Quit: amosr)
2013-07-25 12:55:15	<--	alexsdutton (kebl2765@raven.linux.ox.ac.uk) has left #haskell
2013-07-25 12:55:32	donri	@where do
2013-07-25 12:55:32	lambdabot	The rules of do notation: http://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-480003.14 (Note that "do { v <- m; ... }" is the same as "m >>= \v -> do { ... }" when v is a variable,
2013-07-25 12:55:32	lambdabot	rather than a more complex pattern.)
2013-07-25 12:55:35	quchen	lookup :: Ord k => k -> Map k a -> Maybe a
2013-07-25 12:55:39	donri	@where do-notation
2013-07-25 12:55:40	lambdabot	http://book.realworldhaskell.org/read/monads.html#monads.do
2013-07-25 12:55:42	donri	:(
2013-07-25 12:55:44	shiona	quchen: I started with "\i j -> lookup i . lookup j", but as the result is maybe, I think i need to fmap it.
2013-07-25 12:55:54	ogew2	sigh.
2013-07-25 12:55:57	donri	http://www.haskell.org/haskellwiki/Do_notation_considered_harmful
2013-07-25 12:56:13	quchen	shiona: The idea of composing two lookups is right, but as you mentioned the Maybe is in the way.
2013-07-25 12:56:18	shiona	that seems to return a Maybe Maybe Map though
2013-07-25 12:56:34	-->	chuzz (~chuzz@unaffiliated/chuzz) has joined #haskell
2013-07-25 12:56:50	quchen	\i j -> [lookup i] then [lookup j]   -- And if one of them fails, the whole thing should be Nothing, right?
2013-07-25 12:57:06	donri	:t join
2013-07-25 12:57:07	lambdabot	Monad m => m (m a) -> m a
2013-07-25 12:57:43	shiona	yea, in this case I would have most likely gone with the imperative if-then-else or case solutions, if donri hadn't given it out
2013-07-25 12:57:54	-->	[[zzz]] (~q@node-6om.pool-125-25.dynamic.totbb.net) has joined #haskell
2013-07-25 12:57:57	donri	uh sorry, you're doing this for learning
2013-07-25 12:58:02	donri	reflex :p
2013-07-25 12:58:09	quchen	I wouldn't use donri's suggestion here anyway.
2013-07-25 12:58:21	<--	JaRoel|4_ (~jaroel|4d@lukkien-test1.customer.bit.nl) has quit (Ping timeout: 264 seconds)
2013-07-25 12:58:53	-->	s00pcan (~chris@108-208-64-149.lightspeed.livnmi.sbcglobal.net) has joined #haskell
2013-07-25 12:59:08	quchen	What you want to do is take the result from `lookup i ...` and pipe it into a `lookup j ...`.
2013-07-25 12:59:10	-->	Pranz (~jesper-fr@c80-217-216-30.bredband.comhem.se) has joined #haskell
2013-07-25 12:59:31	quchen	Fmap is like throwing more stuff into a bucket. Piping is what >>= does. :-)
2013-07-25 12:59:33	shiona	well, with donris help my function of choice would be (\i j m -> join $ Data.Map.lookup i <$> Data.Map.lookup j m)
2013-07-25 12:59:45	shiona	agh
2013-07-25 12:59:56	shiona	yea, of course
2013-07-25 13:00:06	shiona	this is what I mean when I say I can't see these things
2013-07-25 13:00:09	quchen	Your solution works, but is not very readable. :-)
2013-07-25 13:00:14	donri	yes join might not be what you want anyway, didn't read the full problem
2013-07-25 13:00:33	quchen	We can refactor it to the real solution step-wise though, once you found that one :-)
2013-07-25 13:00:45	<--	MedDev (~MDev@68-112-203-118.dhcp.eucl.wi.charter.com) has quit (Ping timeout: 264 seconds)
2013-07-25 13:00:46	-->	jibi (~jibi@91.252.146.66) has joined #haskell
2013-07-25 13:00:56	ogew2	:t Data.Map.lookup
2013-07-25 13:00:57	lambdabot	Ord k => k -> M.Map k a -> Maybe a
2013-07-25 13:01:15	<--	no7hing (~anonymous@62.217.45.66) has quit (Quit: no7hing)
2013-07-25 13:01:18	<--	[[zzzz]] (~q@node-uej.pool-125-24.dynamic.totbb.net) has quit (Ping timeout: 264 seconds)
2013-07-25 13:01:24	quchen	So how would you write a single lookup for i? It'll be something like \i j m = lookup i m.
2013-07-25 13:01:43	quchen	Now pass the result of that lookup to another one.
2013-07-25 13:01:53	<--	ecube (~ecube@unaffiliated/ecube) has quit (Ping timeout: 248 seconds)
2013-07-25 13:02:00	shiona	do you mean (\i j m -> Data.Map.lookup i m >>= Data.Map.lookup j)
2013-07-25 13:02:04	-->	QInGW2 (~emacs@115.171.181.51) has joined #haskell
2013-07-25 13:02:15	quchen	Yep :-)
2013-07-25 13:02:48	ogew2	cool
2013-07-25 13:02:49	quchen	That can be written even nicer with >=>, defined as `a >=> b = \x -> a x >>= b`
2013-07-25 13:03:01	quchen	  \i j m -> Data.Map.lookup i m >>= Data.Map.lookup j
2013-07-25 13:03:04	--	arkx_ is now known as arkx
2013-07-25 13:03:12	quchen	= \i j -> \m -> Data.Map.lookup i m >>= Data.Map.lookup j
2013-07-25 13:03:13	donri	it's easier to grok if you use =<< as it's more like $ and <$>
2013-07-25 13:03:19	<--	startling (~user@2602:30a:2e1f:aa0:21b:63ff:fec8:d7b8) has quit (Ping timeout: 245 seconds)
2013-07-25 13:03:21	-->	ecube (~ecube@unaffiliated/ecube) has joined #haskell
2013-07-25 13:03:21	quchen	= \i j -> Data.Map.lookup i m >=> Data.Map.lookup j
2013-07-25 13:03:31	quchen	Eh, scratch the m
2013-07-25 13:03:34	shiona	yea
2013-07-25 13:03:34	quchen	= \i j -> Data.Map.lookup i >=> Data.Map.lookup j
2013-07-25 13:03:39	ogew2	(lookup i >=> lookup x )
2013-07-25 13:03:56	shiona	ok, well, that might go a little overboard for me for now :D
2013-07-25 13:04:16	quchen	shiona: It also helped me in the beginning to go the full imperative way, writing everything with do notation, and then learning to refactor that.
2013-07-25 13:04:17	donri	similarly i think it's <=< that's like (.) ?
2013-07-25 13:04:25	quchen	Yes.
2013-07-25 13:04:50	Lethalman	:t flip (.)
2013-07-25 13:04:50	lambdabot	(a -> b) -> (b -> c) -> a -> c
2013-07-25 13:04:56	Lethalman	:t flip (>=>)
2013-07-25 13:04:57	lambdabot	Monad m => (b -> m c) -> (a -> m b) -> a -> m c
2013-07-25 13:04:58	dobblego	(=<<) has the arguments around the correct way, which is especially important when teaching
2013-07-25 13:05:02	quchen	lookup2 i j m = do { iElement <- lookup i m; jElement <- lookup j iElement; return jElement }
2013-07-25 13:05:07	quchen	That's the full do-based version.
2013-07-25 13:05:08	Lethalman	is there a flip (.) somewhere? :-)
2013-07-25 13:05:18	quchen	Lethalman: Control.Category.(>>>)
2013-07-25 13:05:19	dobblego	Lethalman: (>>>)
2013-07-25 13:05:20	-->	jibi_ (~jibi@31.188.134.176) has joined #haskell
2013-07-25 13:05:24	<--	vobi (~vobi@2001:1a50:11:0:5f:8f:ac93:280) has quit (Ping timeout: 245 seconds)
2013-07-25 13:05:25	Lethalman	ah
2013-07-25 13:05:36	Lethalman	:t (>>>)
2013-07-25 13:05:37	lambdabot	Category cat => cat a b -> cat b c -> cat a c
2013-07-25 13:05:47	Lethalman	awesome
2013-07-25 13:05:53	ogew2	then what is the flip for >=> ?
2013-07-25 13:05:56	<--	paullik (~paullik@unaffiliated/paullik) has quit (Read error: Operation timed out)
2013-07-25 13:05:58	quchen	<=<
2013-07-25 13:06:05	dobblego	@type (<=<)
2013-07-25 13:06:05	lambdabot	Monad m => (b -> m c) -> (a -> m b) -> a -> m c
2013-07-25 13:06:07	ogew2	intuitive :)
2013-07-25 13:06:11	quchen	:t (>>>) `asAppliedTo` (undefined :: a -> b)
2013-07-25 13:06:12	lambdabot	(a -> b) -> (b -> c) -> a -> c
2013-07-25 13:06:14	quchen	Much better. :-)
2013-07-25 13:06:22	dobblego	which is the same type as (.) with m wrapping every return position
2013-07-25 13:06:31	ogew2	does Category need to be Monad?
2013-07-25 13:06:36	Taneb	No
2013-07-25 13:06:42	<--	mars-92 (~makis@Starbucks-AC-91.forthnet.gr) has quit (Ping timeout: 256 seconds)
2013-07-25 13:06:42	<--	ezrios (~ezrios@CPE00044b067c36-CM0012c9a07dec.cpe.net.cable.rogers.com) has quit (Ping timeout: 264 seconds)
2013-07-25 13:06:44	ogew2	applicatives? functor?
2013-07-25 13:06:45	quchen	No, category is its own typeclass, independent of everything.
2013-07-25 13:06:49	ogew2	thanks all
2013-07-25 13:07:02	donri	Arrow needs Category, though
2013-07-25 13:07:07	Taneb	Is there a Monad instance for Monoid e => (,) e?
2013-07-25 13:07:14	Lethalman	ogew2, http://www.haskell.org/haskellwiki/Typeclassopedia
2013-07-25 13:07:15	<--	jibi (~jibi@91.252.146.66) has quit (Ping timeout: 246 seconds)
2013-07-25 13:07:19	Lethalman	ogew2, see the diagram
2013-07-25 13:07:22	dobblego	Taneb: yes, Control.Monad.Instances iirc
2013-07-25 13:07:22	ogew2	thankx
2013-07-25 13:07:26	-->	vobi (~vobi@2001:1a50:11:0:5f:8f:ac93:280) has joined #haskell
2013-07-25 13:07:26	quchen	Taneb: Yes, I think so.
2013-07-25 13:07:34	dobblego	Taneb: or Control.Monad.Writer for the wrapper
2013-07-25 13:07:39	-->	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-25 13:07:41	donri	.Instances is deprecated in some recent ghc
2013-07-25 13:07:42	Taneb	dobblego, nothing in .Instances
2013-07-25 13:07:50	dobblego	ok
2013-07-25 13:08:01	-->	MedDev (~MDev@68-112-203-118.dhcp.eucl.wi.charter.com) has joined #haskell
2013-07-25 13:08:01	Taneb	Or in Control.Monad
2013-07-25 13:08:05	-->	k00mi (~koomi@dslb-188-098-249-123.pools.arcor-ip.net) has joined #haskell
2013-07-25 13:08:50	Taneb	It's pretty easy to write an instance
2013-07-25 13:09:23	Taneb	Maybe I should write to libraries@?
2013-07-25 13:09:23	<--	maxter (~maxter@gaffeless.chaperon.volia.net) has quit (Quit: Konversation terminated!)
2013-07-25 13:09:25	dobblego	there is one in semigroupoids — which I may have confused
2013-07-25 13:09:38	-->	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 13:09:43	-->	amosr (~amos@28.30.233.220.static.exetel.com.au) has joined #haskell
2013-07-25 13:09:53	dobblego	Semigroup m => Bind ((,) m)
2013-07-25 13:10:51	<--	perspectival (~perspecti@35.158.broadband4.iol.cz) has quit (Quit: Leaving.)
2013-07-25 13:10:57	ogew2	quchen, to complete ur tutorial, is the definition for `lookup2D :: Int -> Int -> Map a -> a`  ?
2013-07-25 13:11:13	quchen	ogew2: Careful, the result isn't just `a`.
2013-07-25 13:11:20	ogew2	Gotit
2013-07-25 13:11:30	dobblego	ogew2: what would happen if I passed two Int for which there is no value?
2013-07-25 13:11:32	quchen	And the Map needs a "Map a", the type of the keys must be in there.
2013-07-25 13:11:37	ogew2	lookup2D :: Int -> Int -> Map a -> Maybe a   ?
2013-07-25 13:11:38	Taneb	instance Monoid e => Monoid ((,) e where return = (,) mempty; (w, a) >>= f = let (w', b) = f a in (w `mappend` w', b); (w, _) >> (w', a) = (w `mappend` w', a)
2013-07-25 13:11:41	-->	elediaz (~elediaz@92.59.142.109) has joined #haskell
2013-07-25 13:12:00	dobblego	Int -> Int -> Map Int a -> Maybe a
2013-07-25 13:12:12	ogew2	sigh.
2013-07-25 13:12:13	<--	elediaz (~elediaz@92.59.142.109) has quit (Client Quit)
2013-07-25 13:12:14	ogew2	thanks
2013-07-25 13:12:18	quchen	:t \i j -> Data.Map.lookup i >=> Data.Map.lookup j
2013-07-25 13:12:19	lambdabot	(Ord k, Ord k1) => k -> k1 -> M.Map k (M.Map k1 c) -> Maybe c
2013-07-25 13:12:22	dobblego	Taneb: yes, the Writer monad might help you
2013-07-25 13:12:51	Taneb	dobblego, I know about the Writer monad, I'm just wondering why the instance isn't in base
2013-07-25 13:12:55	dobblego	ok
2013-07-25 13:12:56	<--	nilsi (~nilsi@124.79.136.212) has quit (Ping timeout: 256 seconds)
2013-07-25 13:13:13	merijn	Taneb: You mean (,) e? I think it's in Data.Tuple?
2013-07-25 13:13:16	quchen	I could have sworn there is such an instance somewhere.
2013-07-25 13:13:20	-->	hexagoxel (~hexagoxel@134.245.229.236) has joined #haskell
2013-07-25 13:13:23	quchen	merijn: I just checked, it's not
2013-07-25 13:13:29	merijn	Whoops, nope
2013-07-25 13:13:37	merijn	I remember a complaint about it on libraries@
2013-07-25 13:13:45	quchen	Wasn't that about Either?
2013-07-25 13:13:48	ogew2	can i hint :t   that i and j has to be int ?
2013-07-25 13:13:51	merijn	No, before then
2013-07-25 13:13:51	Taneb	It should probably be in .Instances for now
2013-07-25 13:14:07	quchen	:t \i j -> Data.Map.lookup (i :: Int) >=> Data.Map.lookup (j :: Int) -- ogew2
2013-07-25 13:14:08	lambdabot	Int -> Int -> M.Map Int (M.Map Int c) -> Maybe c
2013-07-25 13:14:29	ogew2	wow
2013-07-25 13:14:56	Lethalman	:t Data.Map.lookup `asAppliedTo` (1 :: Int)
2013-07-25 13:14:57	lambdabot	Int -> M.Map Int a -> Maybe a
2013-07-25 13:15:06	merijn	ogew2: You can add type annotations almost anywhere, as long as the annotations type check
2013-07-25 13:15:23	quchen	merijn: Except in Lambda parameters, for that you need an extension :-(
2013-07-25 13:15:29	quchen	:t \(x :: Int) -> x
2013-07-25 13:15:30	lambdabot	    Illegal type signature: `Int'
2013-07-25 13:15:30	lambdabot	      Perhaps you intended to use -XScopedTypeVariables
2013-07-25 13:15:30	lambdabot	    In a pattern type-signature
2013-07-25 13:15:31	ogew2	;) noted
2013-07-25 13:15:32	quchen	:-(
2013-07-25 13:15:33	merijn	I know
2013-07-25 13:15:43	merijn	But STV is a good thing anyway!
2013-07-25 13:15:47	<--	Odd_Bloke (~oddbloke@daniel-watkins.co.uk) has quit (Ping timeout: 264 seconds)
2013-07-25 13:16:09	quchen	I want -fglasgow-exts back, adding the same boilerplate to every file is annoying.
2013-07-25 13:16:10	-->	Odd_Bloke (~oddbloke@daniel-watkins.co.uk) has joined #haskell
2013-07-25 13:16:21	dobblego	aw
2013-07-25 13:16:22	quchen	MultiWayIf, BangPatterns, ScopedTypeVariables, LambdaCase …
2013-07-25 13:16:34	donri	quchen: default-extensions in .cabal?
2013-07-25 13:16:37	-->	peterhil (~peterhil@158.127.31.162) has joined #haskell
2013-07-25 13:16:50	-->	drewdavis (~devious@67.204.179.76) has joined #haskell
2013-07-25 13:16:53	donri	or default-languages i think is the preferred name, hm
2013-07-25 13:17:37	quchen	donri: That requires writing a Cabal file for everything
2013-07-25 13:17:49	merijn	quchen: glasgow-exts wouldn't have MultiWayIf and LambdaCase anyway, it predates those
2013-07-25 13:17:49	donri	yes, do that ;)
2013-07-25 13:17:52	-->	cognominal (~cognomina@87-231-78-66.rev.numericable.fr) has joined #haskell
2013-07-25 13:18:10	quchen	merijn: -fglasgow-extended-exts
2013-07-25 13:18:16	donri	there's .ghci if that's what you want it for
2013-07-25 13:18:16	merijn	I should enable all those extensions in my .ghci
2013-07-25 13:18:18	donri	:set -X...
2013-07-25 13:18:20	supki	quchen: what kind of code you write that requires STV for each file?
2013-07-25 13:18:23	merijn	Plus imports
2013-07-25 13:18:34	merijn	So I don't keep forgetting everything
2013-07-25 13:18:50	--	ogew2 is now known as ogew
2013-07-25 13:18:54	quchen	supki: It's one of the unobtrusive extensions I would mind being on by default.
2013-07-25 13:18:57	dobblego	while we are complaining, I want the Prelude hidden 4 eva
2013-07-25 13:19:05	supki	ah, sure
2013-07-25 13:19:06	quchen	s/would/wouldn't
2013-07-25 13:19:16	<--	chrisdotcode__ (~quassel@207.239.64.231) has quit (Read error: Operation timed out)
2013-07-25 13:19:43	-->	chrisdotcode_ (~quassel@207.239.64.231) has joined #haskell
2013-07-25 13:19:46	quchen	dobblego: The Prelude is pretty important
2013-07-25 13:20:01	dobblego	not in my scope without me saying so it isn't
2013-07-25 13:20:09	quchen	dobblego: But it's also full of unimportant stuff, and that part should probably be put into a KitchenSink module
2013-07-25 13:20:34	merijn	RankNTypes strictly supercedes Rank2Types, right?
2013-07-25 13:20:38	-->	amyers (~quassel@c-68-48-207-151.hsd1.md.comcast.net) has joined #haskell
2013-07-25 13:20:47	quchen	Aren't they synonyms?
2013-07-25 13:20:50	donri	yes, the latter is being deprecated even i think
2013-07-25 13:20:58	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2013-07-25 13:21:02	merijn	donri: I never get warnings for Rank2Types so I doubt it
2013-07-25 13:21:06	<--	xl2 (~xl@124.205.93.160) has quit (Ping timeout: 264 seconds)
2013-07-25 13:21:17	donri	merijn: at some point
2013-07-25 13:21:18	sopvop	will people hate me for using -XTupleSections ?
2013-07-25 13:21:24	donri	i read some vague plans
2013-07-25 13:21:26	hvr	sopvop: haters gonna hate
2013-07-25 13:21:35	dobblego	sopvop: if they did, let me know, so I can use them more
2013-07-25 13:21:52	sopvop	I don't think my package will compile on anything besides GHC anyway
2013-07-25 13:22:06	quchen	http://www.haskell.org/ghc/docs/latest/html/users_guide/other-type-extensions.html#universal-quantification
2013-07-25 13:22:12	quchen	Doesn't mention anything about deprecation
2013-07-25 13:22:13	<--	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-07-25 13:22:14	-->	xl1 (~xl@124.205.93.160) has joined #haskell
2013-07-25 13:22:16	quchen	(Or synonym-ness) :-(
2013-07-25 13:22:26	sopvop	quchen: I was in release notes
2013-07-25 13:22:30	sopvop	It
2013-07-25 13:22:33	donri	it was on the ghc mailing list or something
2013-07-25 13:22:47	quchen	sopvop: I like tuple secions.
2013-07-25 13:22:49	merijn	sopvop: TupleSections is great!
2013-07-25 13:23:03	quchen	supki: Add TupleSections to my list of always-on extensions.
2013-07-25 13:23:24	quchen	I should just write a macro for my editor to enable all that stuff automatically.
2013-07-25 13:23:37	Lethalman	TupleSections and MultiWayIf always on
2013-07-25 13:23:44	sopvop	I've got tired from typing `(,,,) foo bar <$> something <*> something` and thought about risky syntax extensions :)
2013-07-25 13:24:01	donri	http://ghc.haskell.org/trac/ghc/changeset/984676d51291ea900cec289599e647de38645405/
2013-07-25 13:24:08	hpaste	merijn pasted “new .ghci” at http://lpaste.net/91204
2013-07-25 13:24:16	merijn	Any important extensions I'm missing?
2013-07-25 13:24:33	sopvop	merijn: OverloadedStrings
2013-07-25 13:24:56	merijn	sopvop: ಠ_ಠ
2013-07-25 13:24:59	Lethalman	make sure you have ExtendedDefaultRules together with OverloadedStrings
2013-07-25 13:25:00	dobblego	NoImplicitPrelude
2013-07-25 13:25:03	merijn	imports too, btw
2013-07-25 13:25:17	donri	merijn: mine that i haven't touched in a while http://lpaste.net/91205
2013-07-25 13:25:18	merijn	dobblego: Why would I want NoImplicitPrelude in my .ghci?!
2013-07-25 13:25:23	sopvop	-XNoMonomorphismRestriction :)
2013-07-25 13:25:32	merijn	sopvop: oh, good point
2013-07-25 13:25:33	quchen	sopvop: Careful, when proposing that TupleSections are good, you probably shouldn't be using 4-tuples in your example ;-P
2013-07-25 13:25:37	dobblego	merijn: just noticed it is .ghci
2013-07-25 13:26:01	merijn	donri: Are the derive ones actually useful in ghci?
2013-07-25 13:26:13	donri	merijn: for me yes
2013-07-25 13:26:23	-->	paullik (~paullik@unaffiliated/paullik) has joined #haskell
2013-07-25 13:26:40	merijn	How come?
2013-07-25 13:27:03	donri	uh testing code that uses generics for example?
2013-07-25 13:27:19	-->	Franciman (~quassel@host42-22-dynamic.13-79-r.retail.telecomitalia.it) has joined #haskell
2013-07-25 13:27:26	-->	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has joined #haskell
2013-07-25 13:27:33	donri	and foldable/traversable for lens
2013-07-25 13:27:43	merijn	Wouldn't that just works when you load them?
2013-07-25 13:27:59	sopvop	what was -XPolymorphicComponents doing?
2013-07-25 13:28:00	donri	merijn: you can write data declarations in ghci since i think 7.4
2013-07-25 13:29:02	-->	Ue (~Ue@unaffiliated/ue) has joined #haskell
2013-07-25 13:29:37	<--	Jeanne-Kamikaze (~Jeanne-Ka@143.73.223.87.dynamic.jazztel.es) has quit (Quit: Leaving)
2013-07-25 13:29:41	-->	flebron (~flebron@190.18.146.246) has joined #haskell
2013-07-25 13:30:04	-->	maexono (~quassel@dslb-188-108-008-146.pools.arcor-ip.net) has joined #haskell
2013-07-25 13:30:54	merijn	<- mind blown
2013-07-25 13:31:00	donri	\o/
2013-07-25 13:31:22	<--	jjohnsson (~jjohnsson@host-95-195-140-188.mobileonline.telia.com) has quit (Ping timeout: 291 seconds)
2013-07-25 13:31:28	quchen	data declarations?
2013-07-25 13:31:37	-->	no7hing (~anonymous@62.217.45.66) has joined #haskell
2013-07-25 13:31:40	quchen	Oh, in GHCi
2013-07-25 13:32:43	-->	DoomBoom (~DoomBoom@86.89.90.229) has joined #haskell
2013-07-25 13:32:45	<--	mrler (~mrler@166.70.212.35) has quit (Remote host closed the connection)
2013-07-25 13:33:26	--	TheRealPygo is now known as pygospa
2013-07-25 13:33:52	<--	knyppeldynan (~kristina@de.klarna.com) has quit (Quit: leaving)
2013-07-25 13:34:18	<--	iol (~eric@218.241.207.78) has quit (Ping timeout: 264 seconds)
2013-07-25 13:34:26	-->	knyppeldynan (~kristina@c213-89-19-165.bredband.comhem.se) has joined #haskell
2013-07-25 13:34:36	chrisdone	does anyone know if it's possible to kill all running threads in ghci?
2013-07-25 13:35:06	Taneb	Write, I'm sending a message to the libraries mailing list regarding the tuple monad instance
2013-07-25 13:35:08	-->	BitPuffin (~quassel@109.58.167.72.bredband.tre.se) has joined #haskell
2013-07-25 13:35:31	<--	nexx (nexx@dslb-178-011-051-039.pools.arcor-ip.net) has quit (Ping timeout: 276 seconds)
2013-07-25 13:35:58	Taneb	*right
2013-07-25 13:36:40	-->	wolfnn (~wolfnn@AMontsouris-651-1-19-74.w82-123.abo.wanadoo.fr) has joined #haskell
2013-07-25 13:36:45	<--	kushal (kdas@fedora/kushal) has quit (Quit: Leaving)
2013-07-25 13:37:09	<--	s00pcan (~chris@108-208-64-149.lightspeed.livnmi.sbcglobal.net) has quit (Read error: Operation timed out)
2013-07-25 13:37:26	bitonic	chrisdone: well the usual way to kill threads is to throw exceptions at them
2013-07-25 13:37:41	chrisdone	bitonic: suppose i didn't fork the thread so i don't have the threadid
2013-07-25 13:37:45	bitonic	which is what “killThread” does
2013-07-25 13:37:49	bitonic	right, then I’m not sure
2013-07-25 13:37:57	-->	shesek (~shesek@IGLD-84-229-213-228.inter.net.il) has joined #haskell
2013-07-25 13:38:03	<--	flebron (~flebron@190.18.146.246) has quit
2013-07-25 13:38:08	bitonic	chrisdone: so how do you plan to find “which” thread to kill?
2013-07-25 13:38:09	<--	maexono (~quassel@dslb-188-108-008-146.pools.arcor-ip.net) has quit (Remote host closed the connection)
2013-07-25 13:38:25	bitonic	or do you just want to kill them all :P
2013-07-25 13:38:32	quchen	And killing GHCi is not an option?
2013-07-25 13:38:37	chrisdone	bitonic: yes, i want to kill them all without mercy
2013-07-25 13:38:37	-->	ndonaldson (~nic@61.69.24.113) has joined #haskell
2013-07-25 13:38:39	chrisdone	quchen: no
2013-07-25 13:38:54	bitonic	chrisdone: OK, let’s see, this sounds like a useful thing to know
2013-07-25 13:39:00	<--	descender (~heh@175.143.38.221) has quit (Ping timeout: 256 seconds)
2013-07-25 13:39:23	chrisdone	note: running :load does not kill running threads in ghci
2013-07-25 13:40:48	<--	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has quit (Quit: Leaving.)
2013-07-25 13:41:21	<--	MindlessDrone (~MindlessD@141.70.114.6) has quit (Quit: MindlessDrone)
2013-07-25 13:41:31	merijn	I don't think you can kill threads unless you keep track of their ThreadId
2013-07-25 13:41:50	merijn	Which is why is usually want to wrap forkIO with some form of thread manager
2013-07-25 13:42:02	-->	xBsd (~xBsd@91.218.144.129) has joined #haskell
2013-07-25 13:42:09	<--	dcoutts_ (~dcoutts@unaffiliated/dcoutts) has quit (Read error: Operation timed out)
2013-07-25 13:42:41	<--	xBsd (~xBsd@91.218.144.129) has quit (Client Quit)
2013-07-25 13:42:53	bitonic	merijn: well the hope is to find some GHC facility to get the ThreadIds of children
2013-07-25 13:43:03	<--	knyppeldynan (~kristina@c213-89-19-165.bredband.comhem.se) has quit (Quit: leaving)
2013-07-25 13:43:08	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-25 13:43:14	merijn	I don't think there is
2013-07-25 13:43:17	merijn	At least not exposed
2013-07-25 13:43:25	-->	thalassarche (~thalassar@unaffiliated/thalassarche) has joined #haskell
2013-07-25 13:43:26	bitonic	mhm, that’s a shame
2013-07-25 13:43:31	<--	asQuirreL (~asQuirreL@31.221.60.107) has quit (Quit: Computer has gone to sleep.)
2013-07-25 13:43:33	bitonic	I’d like something like “ps” for GHC
2013-07-25 13:43:44	Rarrikins	chrisdone: It appears the milestone for adding that is _|_
2013-07-25 13:43:48	Rarrikins	chrisdone: http://ghc.haskell.org/trac/ghc/ticket/1399
2013-07-25 13:44:27	ClaudiusMaximus	threadscope might hook into the relevant parts of ghc rts?
2013-07-25 13:44:36	<--	CADD (~CADD@12.227.104.109) has quit (Quit: Lost terminal)
2013-07-25 13:45:11	-->	knyppeldynan (~kristina@c213-89-19-165.bredband.comhem.se) has joined #haskell
2013-07-25 13:45:36	<--	bobthenameless_ (~bobthenam@c-71-227-128-93.hsd1.wa.comcast.net) has quit (Ping timeout: 268 seconds)
2013-07-25 13:46:42	chrisdone	Rarrikins: hm, sucks
2013-07-25 13:46:53	<--	ccxCZ (~ccxCZ@156.200.broadband11.iol.cz) has quit (Ping timeout: 240 seconds)
2013-07-25 13:46:54	<--	DoomBoom (~DoomBoom@86.89.90.229) has quit (Quit: Leaving)
2013-07-25 13:47:07	-->	jvrmaia (~jvrmaia@179.99.212.51) has joined #haskell
2013-07-25 13:48:11	-->	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has joined #haskell
2013-07-25 13:48:11	-->	agr (~agr@186.211.65.27) has joined #haskell
2013-07-25 13:48:43	quchen	What happens when I reduce NumCapabilities at runtime? Are the OS threads killed, or do they have time to finish up (and die out as no sparks are given to them)?
2013-07-25 13:48:46	-->	s00pcan (~chris@108-208-64-149.lightspeed.livnmi.sbcglobal.net) has joined #haskell
2013-07-25 13:49:17	<--	duikboot (~ad@s3eea3de7.adsl.online.nl) has quit (Quit: Leaving)
2013-07-25 13:49:42	-->	xcthulhu (~xcthulhu@ip-64-134-163-56.public.wayport.net) has joined #haskell
2013-07-25 13:50:18	merijn	quchen: I would say they get graciously shutdown and all threads/sparks distributed to the others
2013-07-25 13:50:32	merijn	But that claim isn't verified or backed up by facts :p
2013-07-25 13:51:21	quchen	 > Sending all process the SLEDGEHAMMER signal.
2013-07-25 13:51:45	<--	thunderrd (~thunderrd@61.7.189.194) has quit (Ping timeout: 241 seconds)
2013-07-25 13:52:05	chrisdone	i tried setNumCapabilities 2 in ghci and it didn't even stop me launching three threads
2013-07-25 13:52:09	merijn	The monad and applicative implementations of ContT are confusing as fuck >.>
2013-07-25 13:52:12	-->	hamid_ (~nithp@unaffiliated/hamid) has joined #haskell
2013-07-25 13:52:28	merijn	chrisdone: capabilities determines the number of OS threads, it has nothing to do with haskell threads
2013-07-25 13:52:35	chrisdone	yeah every time i read or implement ContT i have to re-learn it
2013-07-25 13:52:50	quchen	I don't even need the T for Cont to confuse me
2013-07-25 13:52:59	merijn	chrisdone: Actually, it capabilities doesn't even relate to OS threads
2013-07-25 13:53:06	quchen	Oh?
2013-07-25 13:53:49	quchen	Then what is a capability?
2013-07-25 13:53:49	merijn	Capabilities refer to the number of cores to use
2013-07-25 13:53:49	chrisdone	http://www.haskell.org/ghc/docs/7.6.2/html/libraries/base/GHC-Conc-Sync.html#v:setNumCapabilities
2013-07-25 13:53:51	merijn	Which means you shouldn't have more computational threads than cores to use, obviously
2013-07-25 13:54:02	chrisdone	cores or processors or whatever gives true paralellism
2013-07-25 13:54:05	merijn	But using extra OS threads for blocking sys/foregin calls make sense
2013-07-25 13:54:08	-->	vijaykiran (~user@D57DBD32.static.ziggozakelijk.nl) has joined #haskell
2013-07-25 13:54:09	<--	dobblego (~nobody@220-245-107-64.static.tpgi.com.au) has quit (Ping timeout: 264 seconds)
2013-07-25 13:54:32	chrisdone	ClaudiusMaximus: checking out threadscope's source now, seems interesting
2013-07-25 13:54:34	quchen	So a capability is an OS thread as long as there are less than cores on the machine?
2013-07-25 13:54:47	-->	ccxCZ (~ccxCZ@156.200.broadband11.iol.cz) has joined #haskell
2013-07-25 13:54:48	merijn	quchen: No
2013-07-25 13:54:51	quchen	And each of those OS threads is sent to a different CPU
2013-07-25 13:54:53	merijn	quchen: Capabilities aren't a thing
2013-07-25 13:54:56	<--	ndonaldson (~nic@61.69.24.113) has quit (Quit: Leaving)
2013-07-25 13:55:21	<--	hamid (~nithp@unaffiliated/hamid) has quit (Ping timeout: 264 seconds)
2013-07-25 13:55:25	merijn	quchen: They are a suggestion to the runtime "be adviced, there is no more than X concurrent computation units, so more than X computtional threads is useless"
2013-07-25 13:55:34	merijn	I don't think the RTS bothers to pin threads
2013-07-25 13:55:38	-->	yogert1 (~Adium@ool-457128b5.dyn.optonline.net) has joined #haskell
2013-07-25 13:55:55	quchen	Ah, so the -N flag merely suggests GHC that it could use multiple cores
2013-07-25 13:55:56	chrisdone	http://hackage.haskell.org/packages/archive/ghc-events/0.3.0.1/doc/html/GHC-RTS-Events.html
2013-07-25 13:56:01	merijn	quchen: Yes
2013-07-25 13:56:02	chrisdone	ClaudiusMaximus: veeeery interesting
2013-07-25 13:56:34	-->	gadjo (~gggg@109.102.72.188) has joined #haskell
2013-07-25 13:56:37	quchen	merijn: And then GHC opens a couple of OS threads to satisfy its needs, with the upper boundary given by numCapabilities?
2013-07-25 13:56:53	chrisdone	ah, it's just parsing
2013-07-25 13:57:04	merijn	quchen: Not even upperbound, as I set, the RTS might want X parallel threads for computation + Y more to do blocking foreign calls
2013-07-25 13:57:24	merijn	Because blocking syscalls don't take up computational resources
2013-07-25 13:57:29	chrisdone	ClaudiusMaximus: yeah, threadscope just parses a file that ghc outputs
2013-07-25 13:58:02	merijn	s/as I set/as I sad/ <- lolwut
2013-07-25 13:58:06	merijn	dammit
2013-07-25 13:58:08	merijn	*said
2013-07-25 13:58:12	merijn	Screw typing!
2013-07-25 13:58:17	chrisdone	get out of here!
2013-07-25 13:58:27	ClaudiusMaximus	chrisdone: ah, but could you fork a thread in ghci that parses its own eventlog ?
2013-07-25 13:58:27	-->	tazjin (~tazjin@2a01:2b0:3041:3018:6406:debd:ba52:edbe) has joined #haskell
2013-07-25 13:58:47	chrisdone	ClaudiusMaximus: i've never ran threadscope, does it output logging live?
2013-07-25 13:58:52	quchen	No
2013-07-25 13:59:05	chrisdone	then it's not useful
2013-07-25 13:59:08	quchen	At least not last time I used it
2013-07-25 13:59:11	-->	hajimeho_ (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has joined #haskell
2013-07-25 13:59:18	quchen	Yes it was. At least last time I used it.
2013-07-25 13:59:42	ClaudiusMaximus	the eventlog is output live afaik
2013-07-25 14:00:00	chrisdone	i'll try it in ghci
2013-07-25 14:00:15	ClaudiusMaximus	maybe ghci isn't linked with eventlog support, but who knows..
2013-07-25 14:00:27	<--	jmcarthur_mobile (~jmcarthur@pool-108-27-55-243.nycmny.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2013-07-25 14:00:42	<--	jibi_ (~jibi@31.188.134.176) has quit (Quit: .)
2013-07-25 14:00:48	chrisdone	nope: Prelude> :set -eventlog
2013-07-25 14:00:48	chrisdone	Some flags have not been recognized: -eventlog
2013-07-25 14:01:25	<--	mandarg` (~user@67.202.108.110) has quit (Read error: Connection reset by peer)
2013-07-25 14:01:32	chrisdone	ah wait
2013-07-25 14:01:38	chrisdone	running ghci -eventlog didn't fail. let's see…
2013-07-25 14:02:15	<--	eikke (~nicolas@78-20-0-121.access.telenet.be) has quit (Ping timeout: 268 seconds)
2013-07-25 14:02:19	<--	c_14 (~c_14@unaffiliated/c-14/x-8913907) has quit (Quit: ZNC - http://znc.in)
2013-07-25 14:02:20	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-25 14:02:23	<--	pegleg (a8bbfc83@gateway/web/freenode/ip.168.187.252.131) has quit (Ping timeout: 250 seconds)
2013-07-25 14:02:36	-->	jmcarthur_mobile (~jmcarthur@2607:fb90:a1e:4be4:6035:a7b6:6ae0:a445) has joined #haskell
2013-07-25 14:02:47	-->	dgpratt (~dpratt71@207.182.200.34) has joined #haskell
2013-07-25 14:02:49	-->	c_14 (~c_14@unaffiliated/c-14/x-8913907) has joined #haskell
2013-07-25 14:02:54	ClaudiusMaximus	chrisdone: $ ghci +RTS -l
2013-07-25 14:02:54	ClaudiusMaximus	ghc: the flag -l requires the program to be built with -eventlog or -debug
2013-07-25 14:03:07	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-25 14:03:24	ClaudiusMaximus	gotta go...
2013-07-25 14:03:26	<--	hajimeho_ (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has quit (Ping timeout: 240 seconds)
2013-07-25 14:03:29	-->	PRISMBITCH (~PRISMBITC@178-85-121-235.dynamic.upc.nl) has joined #haskell
2013-07-25 14:03:31	<--	xl1 (~xl@124.205.93.160) has quit (Quit: Leaving.)
2013-07-25 14:03:48	-->	normanrichards (~normanric@70.114.215.220) has joined #haskell
2013-07-25 14:04:01	<--	Sgeo (~quassel@ool-ad034ea6.dyn.optonline.net) has quit (Read error: Connection reset by peer)
2013-07-25 14:04:21	chrisdone	ClaudiusMaximus: right, i may have to rebuild ghci. pff…
2013-07-25 14:05:07	-->	dschoepe (~dschoepe@unaffiliated/dschoepe) has joined #haskell
2013-07-25 14:05:22	-->	thunderrd (~thunderrd@119.42.113.204) has joined #haskell
2013-07-25 14:05:39	-->	PJBoy (~PJBoy@cpc4-aztw24-2-0-cust253.aztw.cable.virginmedia.com) has joined #haskell
2013-07-25 14:05:40	-->	DanielDiaz (~dhelta@217.Red-83-50-108.dynamicIP.rima-tde.net) has joined #haskell
2013-07-25 14:06:32	-->	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 14:06:47	-->	dobblego (~nobody@stargate.it.nicta.com.au) has joined #haskell
2013-07-25 14:06:53	<--	t7 (~chatzilla@chaucer.kent.ac.uk) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 22.0/20130618035212])
2013-07-25 14:07:01	<--	jbracker (~quassel@m-116.informatik.uni-kiel.de) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2013-07-25 14:07:02	-->	jonkri (~jonkri@94.234.184.87) has joined #haskell
2013-07-25 14:07:08	<--	jonkri (~jonkri@94.234.184.87) has quit (Changing host)
2013-07-25 14:07:08	-->	jonkri (~jonkri@pontarius/jon) has joined #haskell
2013-07-25 14:07:46	<--	hamid_ (~nithp@unaffiliated/hamid) has quit (Quit: Lost terminal)
2013-07-25 14:08:22	-->	kushal (~kdas@fedora/kushal) has joined #haskell
2013-07-25 14:08:27	-->	CaptainK (~CaptainK@181.179.35.116) has joined #haskell
2013-07-25 14:09:09	-->	iswilson (~ian@192-0-175-9.cpe.teksavvy.com) has joined #haskell
2013-07-25 14:09:13	jonkri	In what order are functions evaluated? For example, in "1:2:3:[]", "Haskell" seems to know to apply 3:[] first, before for example 1:2. Why is this? I would have expected 1:2 to evaluate first, like left to right.
2013-07-25 14:09:53	chrisdone	Prelude Unsafe.Coerce Control.Concurrent Data.Word> unsafeCoerce (1 :: Word32) :: ThreadId
2013-07-25 14:09:54	chrisdone	ThreadId Segmentation fault (core dumped)
2013-07-25 14:09:54	chrisdone	darn =p
2013-07-25 14:10:06	dcoutts	jonkri: you're confusing two things: evaluation order and the parenthesis / operator precedence
2013-07-25 14:10:23	dcoutts	jonkri: in 1:2:3:[] there is nothing to evaluate, it's already in normal form
2013-07-25 14:10:40	dcoutts	jonkri: what you're really wondering about here is how the parens work here
2013-07-25 14:10:53	quchen	chrisdone: And they told me there were no core dumps in Haskell!
2013-07-25 14:11:16	quchen	chrisdone: ThreadID is very reluctant, I tried getting it as an Int once and got very mad.
2013-07-25 14:11:18	dcoutts	jonkri: ie should the : operator behave like ((1:2):3):[] or like 1:(2:(3:[]))
2013-07-25 14:11:20	<--	james-ubc (~james@66.183.102.136) has quit (Ping timeout: 260 seconds)
2013-07-25 14:11:30	<--	matt444_ (~matthew@74-130-86-22.dhcp.insightbb.com) has quit (Quit: leaving)
2013-07-25 14:11:33	dcoutts	jonkri: or similar question about 1 + 2 + 3
2013-07-25 14:12:01	chrisdone	quchen: last time i needed a thread id as a string i used show and parsed it
2013-07-25 14:12:01	<--	amathew (~Adium@cpe-74-68-136-238.nyc.res.rr.com) has quit (Quit: Leaving.)
2013-07-25 14:12:04	dcoutts	jonkri: all these operators have an associativity (left, right or none) and a precedence
2013-07-25 14:12:28	dcoutts	jonkri: you can find out in ghci by asking: :info :
2013-07-25 14:12:29	quchen	chrisdone: That would be the hate-hack solution. (Did the same.)
2013-07-25 14:12:35	jonkri	dcoutts: Aha. I know about precedence.
2013-07-25 14:12:36	-->	joaopizani (~joaopizan@175pc204.sshunet.nl) has joined #haskell
2013-07-25 14:12:47	dcoutts	jonkri: right, so in this case it's infixr 5 :
2013-07-25 14:13:02	dcoutts	jonkri: infix"r" for right-associative
2013-07-25 14:13:06	jonkri	Ah, I never noticed the 'r' in infixr.
2013-07-25 14:13:11	dcoutts	and precedence level 5
2013-07-25 14:13:17	ski_	there's also `infixl' and `infix'
2013-07-25 14:13:18	dcoutts	infixl 6 +
2013-07-25 14:13:28	<--	drewdavis (~devious@67.204.179.76) has quit (Quit: Konversation terminated!)
2013-07-25 14:13:35	dcoutts	that says + is left associative and precedence 6
2013-07-25 14:13:47	jonkri	I see.
2013-07-25 14:13:49	dcoutts	jonkri: so that means that 1 + 2 + 3  is really (1+2) + 3
2013-07-25 14:13:58	<--	iswilson (~ian@192-0-175-9.cpe.teksavvy.com) has quit (Ping timeout: 268 seconds)
2013-07-25 14:14:00	-->	asQuirreL (~asQuirreL@31.221.60.107) has joined #haskell
2013-07-25 14:14:04	dcoutts	while 1 : 2 : 3 : [] is  1:(2:(3:[]))
2013-07-25 14:14:06	<--	pumpkin (~copumpkin@unaffiliated/copumpkin) has quit (Ping timeout: 246 seconds)
2013-07-25 14:14:26	quchen	chrisdone: Would "toInt :: ThreadID -> Int" be a worthy proposal?
2013-07-25 14:14:34	-->	iol (~eric@123.114.34.139) has joined #haskell
2013-07-25 14:14:37	dcoutts	jonkri: and note again that this is just parsing, not evaluation
2013-07-25 14:14:38	-->	copumpkin (~copumpkin@unaffiliated/copumpkin) has joined #haskell
2013-07-25 14:15:04	-->	scooty-puff (~andy@71-220-82-253.mpls.qwest.net) has joined #haskell
2013-07-25 14:15:10	<--	osa1 (~omer@178-211-43-55.turkrdns.com) has quit (Quit: Konversation terminated!)
2013-07-25 14:15:20	-->	iswilson (~ian@192-0-175-9.cpe.teksavvy.com) has joined #haskell
2013-07-25 14:15:22	-->	osa1 (~omer@178-211-43-55.turkrdns.com) has joined #haskell
2013-07-25 14:15:30	jonkri	How would you define evaluation
2013-07-25 14:15:37	jonkri	Nevermind, I was about to erase that. :-P
2013-07-25 14:15:50	--	anildigital is now known as anildigital_away
2013-07-25 14:15:51	dcoutts	jonkri: there's several good tutorials with explanations
2013-07-25 14:15:52	chrisdone	quchen: it exists here http://www.haskell.org/ghc/docs/7.6.2/html/libraries/base/src/GHC-Conc-Sync.html#ThreadId
2013-07-25 14:16:06	chrisdone	quchen: foreign import ccall unsafe "rts_getThreadId" getThreadId :: ThreadId# -> CInt
2013-07-25 14:16:06	chrisdone	quchen: id2TSO :: ThreadId -> ThreadId#;  id2TSO (ThreadId t) = t
2013-07-25 14:16:13	chrisdone	quchen: it's intentionally not exposed, i expect
2013-07-25 14:16:45	quchen	I think ThreadID -> Int would be a useful function. On the other hand, it's a good idea to not have the reverse direction.
2013-07-25 14:17:18	<--	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-07-25 14:17:31	-->	t7 (~chatzilla@chaucer.kent.ac.uk) has joined #haskell
2013-07-25 14:17:47	merijn	quchen: WHy do you need ThreadID -> Int?
2013-07-25 14:17:49	chrisdone	yeah. you can basically make ThreadId -> Int with show, so i suppose it can't hurt for it to be exposed
2013-07-25 14:18:03	chrisdone	merijn: i've needed it in the past when i want to refer to a particular ongoing job
2013-07-25 14:18:03	mauke	safeCoerce = read . show
2013-07-25 14:18:34	merijn	mauke: oh, you should submit that to acme-php
2013-07-25 14:18:41	merijn	Maybe rename it "cast"
2013-07-25 14:18:56	chrisdone	merijn: i could generate a UID for it myself, but it's rather pointless when the thread id's sitting there
2013-07-25 14:19:00	quchen	Specialize it to a -> Int and call the function (int)
2013-07-25 14:19:09	merijn	chrisdone: Except that ThreadIds can be reused
2013-07-25 14:19:17	quchen	merijn: I don't *need* it, it was just somewhat useful in the past and I had to hack it in. I don't remember the use case though. Let me think …
2013-07-25 14:19:34	chrisdone	merijn: you mean once the thread has ended and a new thread has started?
2013-07-25 14:19:34	merijn	chrisdone: So you can have multiple jobs with the same id
2013-07-25 14:19:38	<--	bduc (~bduc@stats.deckard.nl) has quit (Quit: leaving)
2013-07-25 14:19:41	merijn	chrisdone: Yes
2013-07-25 14:19:45	<--	danharaj (~Adium@ool-457a8edb.dyn.optonline.net) has quit (Quit: Leaving.)
2013-07-25 14:19:52	-->	elediaz (~elediaz@92.59.149.116) has joined #haskell
2013-07-25 14:20:02	chrisdone	merijn: yeah, so once the thread ends, the job ends and the id is free to be re-used. i don't see the problem
2013-07-25 14:20:06	<--	gadjo (~gggg@109.102.72.188) has quit (Ping timeout: 240 seconds)
2013-07-25 14:20:14	-->	bduc (~bduc@bduc.org) has joined #haskell
2013-07-25 14:20:19	chrisdone	(in fact, the re-usability is partly what's nice about it)
2013-07-25 14:20:30	merijn	chrisdone: Sure, it might be safein yur case, but if someone is logging job ids, for example
2013-07-25 14:20:34	chrisdone	you don't want some ever-increasing number
2013-07-25 14:20:36	merijn	Best to just not encourage it
2013-07-25 14:21:07	merijn	Because unlikely things can turn into bugs at the most unexpected of times!
2013-07-25 14:21:09	chrisdone	if they're logging job ids then they'll log "this job finished"
2013-07-25 14:21:09	<--	wolfnn (~wolfnn@AMontsouris-651-1-19-74.w82-123.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2013-07-25 14:21:16	-->	maxter (~maxter@gaffeless.chaperon.volia.net) has joined #haskell
2013-07-25 14:21:25	quchen	merijn: Ah, here's an example. I wrote this decentralized P2P chat, and each message was broadcast to adjacent clients from individual threads. At some point I would have liked the receiver to know exactly which of the threads of the sender the thing came from.
2013-07-25 14:21:26	chrisdone	just like process ids in unix
2013-07-25 14:22:01	quchen	merijn: If your follow-up question now is why the receiver needs to know about that I would have to think again.
2013-07-25 14:22:04	-->	applicative (~m@pool-71-182-234-215.pitbpa.fios.verizon.net) has joined #haskell
2013-07-25 14:22:43	merijn	:p
2013-07-25 14:22:44	chrisdone	well the use-case isn't anything new, you have the same thing with process IDs
2013-07-25 14:23:19	quchen	merijn: Another example: every thread generates its own seed for a RNG, and puts its own ThreadID in the pool.
2013-07-25 14:23:25	merijn	You could used string ids and used the show instance of ThreaId :p
2013-07-25 14:23:43	quchen	merijn: Hence mauke's safeCoerce proposal. :-)
2013-07-25 14:24:03	chrisdone	merijn: that's what we both did
2013-07-25 14:24:06	quchen	You have to add `drop (length "threadid: ")` though because the Show instance.
2013-07-25 14:24:07	merijn	You don't even need that, just "show" would be sufficient as Identifier
2013-07-25 14:24:10	<--	Taneb (~nathan@host-92-30-148-233.as13285.net) has quit (Quit: Leaving)
2013-07-25 14:24:21	merijn	hell, even using the ThreadId directly as identier would work...
2013-07-25 14:24:33	quchen	merijn: But maybe I want to square the ThreadID.
2013-07-25 14:24:37	merijn	I don't see the advantage of it being an int
2013-07-25 14:24:42	-->	kstuart (~Thunderbi@host81-129-118-94.range81-129.btcentralplus.com) has joined #haskell
2013-07-25 14:24:51	merijn	quchen: Even better that you can't, then!
2013-07-25 14:25:02	-->	mdhopkins (~mdhopkins@c-98-213-132-103.hsd1.il.comcast.net) has joined #haskell
2013-07-25 14:25:03	merijn	Subtle bugs are the worst kind of bugs!
2013-07-25 14:25:17	-->	Yuu-chan (~yuu@2.mfisoft.ru) has joined #haskell
2013-07-25 14:25:19	quchen	I'm not sure squaring a threaad ID counts as subtle :P
2013-07-25 14:25:38	-->	bamboo_ (~bamboo@189.111.22.10) has joined #haskell
2013-07-25 14:25:45	merijn	No, but in general "ThreadId -> Int" would open up room for a lot of subtle ones
2013-07-25 14:25:50	-->	yesthisisuser (~chatzilla@196.45.145.212) has joined #haskell
2013-07-25 14:25:56	<--	iswilson (~ian@192-0-175-9.cpe.teksavvy.com) has left #haskell ("Leaving")
2013-07-25 14:26:13	quchen	I remember thinking that as well, but for some reason really wanting it as an Int.
2013-07-25 14:26:14	merijn	Type conversions are evil!
2013-07-25 14:26:20	chrisdone	i didn't do any manipulation of the id itself, just used it as a unique identifier. mostly i wanted an int for printing
2013-07-25 14:26:30	chrisdone	it's nicer to read "Job 3 ended" rather than "Job ThreadId 3 ended"
2013-07-25 14:26:49	Yuu-chan	I need to draw some lines in the window. Could someone recommend a simple graphic library?
2013-07-25 14:26:58	merijn	"dropWhile (/=' ') . show"
2013-07-25 14:26:58	chrisdone	SDL?
2013-07-25 14:27:09	quchen	merijn: Oh, chrisdone just gave us the killer reason: Show is for serialization, and not for prettyprinting.
2013-07-25 14:27:14	chrisdone	merijn: yeah thanks for that hard program, we didn't figure that out
2013-07-25 14:27:18	merijn	:p
2013-07-25 14:27:20	quchen	We need a prettyprinting ThreadID function.
2013-07-25 14:27:24	--	bamboo_ is now known as bamboo
2013-07-25 14:27:31	merijn	quchen: See, that I'd accept
2013-07-25 14:27:35	quchen	'd
2013-07-25 14:27:48	applicative	Yuu-chan: I'm not sure what you mean by window, but gloss is pretty straightforward
2013-07-25 14:27:51	quchen	So - no, I don't accept that, but I would if you sent me cupcakes? :D
2013-07-25 14:28:09	Yuu-chan	chrisdone: I've thought of that and of OpenGL, and I'm curious if there are more high-level functional approaches, some combinator library, maybe
2013-07-25 14:28:13	-->	perspectival (perspectiv@nat/redhat/x-asjzzmgulegknuuc) has joined #haskell
2013-07-25 14:28:15	merijn	hah, I just went back to check
2013-07-25 14:28:18	quchen	merijn: In retrospect, that may have been the reason I wanted it multiple times. But I can't say that anymore, confirmation bias etc.
2013-07-25 14:28:20	-->	erochester (~erocheste@d-137-155-210.bootp.Virginia.EDU) has joined #haskell
2013-07-25 14:28:28	DanielDiaz	Yuu-chan: gloss is a nice one. http://hackage.haskell.org/package/gloss
2013-07-25 14:28:32	chrisdone	Yuu-chan: ah, there are, i'm not familiar with them, others here know
2013-07-25 14:28:44	yesthisisuser	what about gtk2hs? http://projects.haskell.org/gtk2hs
2013-07-25 14:28:50	merijn	The conversion bug from yesterday goes all the way back to the original implementation of the new io manager in 2010, in other words, it never worked correctly :O
2013-07-25 14:28:53	jonkri	dcoutts: Thanks a lot for your help. :-)
2013-07-25 14:29:02	<--	perspectival (perspectiv@nat/redhat/x-asjzzmgulegknuuc) has quit (Client Quit)
2013-07-25 14:29:11	dcoutts	jonkri: np
2013-07-25 14:29:15	quchen	merijn: OOOohh, so that's where your disregard for type conversions comes from.
2013-07-25 14:29:18	-->	perspectival (perspectiv@nat/redhat/x-edmvqnrxkamsutci) has joined #haskell
2013-07-25 14:29:21	quchen	Now everything makes sense :D
2013-07-25 14:29:29	applicative	Yuu-chan: http://gloss.ouroborus.net/ has still image examples
2013-07-25 14:29:45	Yuu-chan	Gloss looks interesting, thank you all!
2013-07-25 14:30:04	yesthisisuser	Yuu-chan: here are some drawing examples for gtk2hs and Cairo: http://code.haskell.org/gtk2hs/cairo/demo/
2013-07-25 14:30:36	-->	LK4D4 (~LK4D4@2002:c35d:cf2c:2::2102) has joined #haskell
2013-07-25 14:30:39	-->	Zariel (~zariel@li37-84.members.linode.com) has joined #haskell
2013-07-25 14:30:51	applicative	if you do 'cabal unpack gloss-examples' you can study a series of increasingly complicated uses
2013-07-25 14:31:38	Yuu-chan	yesthisisuser: does Cairo works well for Windows?
2013-07-25 14:31:40	<--	mdhopkins (~mdhopkins@c-98-213-132-103.hsd1.il.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-07-25 14:32:11	yesthisisuser	Yuu-chan: I have never used it on windows but i think it should.
2013-07-25 14:32:16	-->	flebron (~flebron@gw.dc.uba.ar) has joined #haskell
2013-07-25 14:32:16	--	anildigital_away is now known as anildigital
2013-07-25 14:32:30	DanielDiaz	Yuu-chan: Cairo worked perfectly for me in Windows, and I have used it lot of times. You may need some dll's though.
2013-07-25 14:33:11	Yuu-chan	Ok, thanks, I'll consider cairo too.
2013-07-25 14:33:57	DanielDiaz	Yuu-chan: the nice thing about cairo is that you can export nice images to files.
2013-07-25 14:34:38	yesthisisuser	i don't know how solid the Haskell bindings are but GTK+ is usually fine on any supported platform
2013-07-25 14:34:59	DanielDiaz	Yuu-chan: However, gloss is capable of doing animations in a very easy way.
2013-07-25 14:35:19	SLi	Not that I want to troll, but why is it that nearly always when I want to cabal install something bigger (in this case leksah), something fails to build? First gio and pango, which had to be fixed with a magical incantation of cabal install --reinstall gtk2hs-buildtools, and now ltk, which fails with "Not in scope: `catch'".
2013-07-25 14:35:39	<--	jkoppel (~jkoppel@c-98-234-184-221.hsd1.ca.comcast.net) has quit (Quit: jkoppel)
2013-07-25 14:35:48	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-25 14:35:59	quchen	Prelude.catch was removed in the last release of GHC (after being deprecated for some time). How old is the package you tried to install?
2013-07-25 14:36:10	applicative	ouch thats a version problem
2013-07-25 14:36:16	applicative	oh as quchen says
2013-07-25 14:36:17	quchen	(Assuming that's where the issue came from)
2013-07-25 14:36:23	merijn	quchen: Sounds right
2013-07-25 14:36:34	-->	Quadrescence (~quad@unaffiliated/quadrescence) has joined #haskell
2013-07-25 14:36:38	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2013-07-25 14:36:56	merijn	I feel I should be able to use ContT to solve my problem of mixing StateT and bracket, but I can't figure out how :(
2013-07-25 14:36:58	SLi	Um, I don't know. I just said cabal update && cabal install leksah. So I assume it would try to install the newest ltk? (0.8.0.6 is the version)
2013-07-25 14:37:19	SLi	Hm, definitely not the newest.
2013-07-25 14:37:29	-->	jkoppel (~jkoppel@c-98-234-184-221.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 14:37:31	SLi	I don't know why it's trying to install that.
2013-07-25 14:37:32	<--	Beetny (~Beetny@ppp118-208-72-111.lns20.bne4.internode.on.net) has quit (Ping timeout: 256 seconds)
2013-07-25 14:37:36	merijn	Last version from leksah seems to be from 2012
2013-07-25 14:37:53	SLi	0.8.0.6 is from 2010.
2013-07-25 14:37:57	quchen	2012 was 7.4-platrorm-territory, which still had Prelude.catch
2013-07-25 14:38:13	-->	kingugo (~kingugo@196.46.245.58) has joined #haskell
2013-07-25 14:38:13	applicative	how old is your ghc SLi, this is an old hackage v newer hackage problem
2013-07-25 14:38:16	SLi	cabal install ltk tries to install 0.8.0.6.
2013-07-25 14:38:25	merijn	tbh, I'm not sure how well leksah is actually maintained
2013-07-25 14:38:29	quchen	SLi: ghc --version?
2013-07-25 14:38:36	SLi	My ghc is from Debian unstable, 7.6.3.
2013-07-25 14:38:39	quchen	Hm.
2013-07-25 14:38:52	quchen	Well, that's as current as it gets.
2013-07-25 14:39:02	quchen	I guess it's Leksah's fault then.
2013-07-25 14:39:38	applicative	hm, I though it was still maintained
2013-07-25 14:39:41	SLi	merijn: Ah. Any recommendations for a Haskell dev environment? :) I've been using emacs and I'm semi-happy with it (basically my only gripes are with somewhat broken indentation), but I'd be willing to give other environments a try.
2013-07-25 14:39:49	quchen	If it helps, I'm not a fan of Leksah myself and would like to recommend you another editor, and in the process turn this channel into a warzone.
2013-07-25 14:39:56	applicative	uh oh, editor war
2013-07-25 14:39:58	SLi	:)
2013-07-25 14:40:17	applicative	SLi, nano ftw!
2013-07-25 14:40:24	quchen	I use Notepad with Wine.
2013-07-25 14:40:29	<--	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has quit (Ping timeout: 268 seconds)
2013-07-25 14:40:31	<--	normanrichards (~normanric@70.114.215.220) has quit (Quit: normanrichards)
2013-07-25 14:40:40	applicative	quchen: awesome
2013-07-25 14:41:15	SLi	Mostly I was just curious about what such an IDE has to offer. For example, I guess something could help by displaying types on the fly and highlighting the smallest non-typechecking subexpression instead of the entire line like emacs does? :)
2013-07-25 14:41:18	<--	flebron (~flebron@gw.dc.uba.ar) has quit
2013-07-25 14:41:23	applicative	i just wish I had something that would read my handwriting, then i would be really productive. whitespace is a problem ...
2013-07-25 14:41:41	bitonic	SLi: the latter is going to be hard because not even GHC does that
2013-07-25 14:41:43	<--	morazow (~morazow@92.36.136.95.rev.vodafone.pt) has quit (Ping timeout: 268 seconds)
2013-07-25 14:41:43	bitonic	you just get a line
2013-07-25 14:41:47	SLi	bitonic: ok.
2013-07-25 14:42:23	<--	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has quit (Remote host closed the connection)
2013-07-25 14:42:29	SLi	While we're on the subject, I'd like to have a touchscreen & virtual keyboad usable Haskell editor. And a pony. Please.
2013-07-25 14:42:31	-->	bgilbert (~textual@108-239-26-79.lightspeed.chtnsc.sbcglobal.net) has joined #haskell
2013-07-25 14:42:32	quchen	applicative: Right, writing Haskell by hand would solve all our problems.
2013-07-25 14:42:42	-->	Ayey_ (~rune1@2-106-141-211-dynamic.dk.customer.tdc.net) has joined #haskell
2013-07-25 14:42:47	merijn	SLi: Most people here just use vim or emacs, I think
2013-07-25 14:42:52	 *	quchen is special
2013-07-25 14:43:11	merijn	SLi: Wanna see something cool (but completely not practically usable yet)?
2013-07-25 14:43:31	MercurialAlchemi	SLi: vim + syntastic + ghc-mod
2013-07-25 14:43:38	applicative	i don't know if that's right, merijn, exactly, it's just that they're the ones people bother to talk about - for good reason of course
2013-07-25 14:43:47	SLi	Ok. Guess I'll stick to emacs then :) I'm somewhat unhappy with it's indenting though. Not how it indents, but that pressing tab sometimes messes the correct indentation and pressing it no matter how many times never fixes it.
2013-07-25 14:43:50	merijn	SLi: The future of statically, strongly typed functional IDEs: https://github.com/Peaker/lamdu
2013-07-25 14:43:52	SLi	merijn: maybe :)
2013-07-25 14:43:56	<--	agumonkey (~agu@179.217.72.86.rev.sfr.net) has quit (Remote host closed the connection)
2013-07-25 14:44:19	-->	xplat_ (~james@67.205.253.80) has joined #haskell
2013-07-25 14:44:20	merijn	MercurialAlchemi: If you need a good auto-indent to go with that, I've got you covered! :p
2013-07-25 14:44:26	<--	jkoppel (~jkoppel@c-98-234-184-221.hsd1.ca.comcast.net) has quit (Quit: jkoppel)
2013-07-25 14:44:27	quchen	merijn: Is there a x86 version of that I could download and test?
2013-07-25 14:44:47	SLi	merijn: I guess I'll take a look :)
2013-07-25 14:44:52	merijn	quchen: It doesn't build from cabal? Last time I tried it *just compiled*
2013-07-25 14:44:54	applicative	lambdu is pretty wild
2013-07-25 14:45:14	merijn	SLi: type based auto-completion, on the fly typechecking, etc.
2013-07-25 14:45:23	quchen	merijn: Can I install the dependencies locally somehow? So everything stays in the Lamdu folder
2013-07-25 14:45:32	merijn	quchen: cabal-dev?
2013-07-25 14:45:45	quchen	cabal install cabal-dev?
2013-07-25 14:45:49	quchen	Never used it
2013-07-25 14:45:49	merijn	yeah
2013-07-25 14:46:03	merijn	quchen: cabal-dev just creates a project speficic package database
2013-07-25 14:46:12	MercurialAlchemi	merijn: I don't know, the auto-indent is OK?
2013-07-25 14:46:24	quchen	merijn: And apart from that it's just like cabal? Same flags etc?
2013-07-25 14:46:27	merijn	Just "cabal-dev install" instead of "cabal install" for a project
2013-07-25 14:46:31	MercurialAlchemi	merijn: I'd be more interested in a "manage imports and exports" feature
2013-07-25 14:46:32	merijn	quchen: I think so?
2013-07-25 14:46:34	quchen	Cool.
2013-07-25 14:46:42	<--	jmcarthur_mobile (~jmcarthur@2607:fb90:a1e:4be4:6035:a7b6:6ae0:a445) has quit (Quit: Bye)
2013-07-25 14:46:53	-->	jmcarthur_mobile (~jmcarthur@2607:fb90:a1e:4be4:6035:a7b6:6ae0:a445) has joined #haskell
2013-07-25 14:46:53	applicative	quchen: try the development version of cabal, with the de-luxe cabal sandbox
2013-07-25 14:46:54	<--	QInGW2 (~emacs@115.171.181.51) has quit (Ping timeout: 264 seconds)
2013-07-25 14:46:57	applicative	or maybe not ..
2013-07-25 14:47:04	SLi	"Code stored as code solves most merge conflicts. With textual tools a line where two variables were renamed causes a conflict. Just moving around code also generates a lot of spurious conflicts -- which will no longer be the case." That sounds a bit scary. Because a small number of trivial merge conflicts is often better than an automerge gone wrong (a changed variable name may indicate that the purpose of the variable changed too, so it may not be what the
2013-07-25 14:47:04	SLi	conflicting committer intended).
2013-07-25 14:47:09	quchen	applicative: Heard of that, but I'm a little afraid of it.
2013-07-25 14:47:15	SLi	But maybe it's worth a try :)
2013-07-25 14:47:17	merijn	MercurialAlchemi: My work-in-progress autoindenter is at https://github.com/merijn/haskellFoldIndent, the import/export thing I dunno if someone is doing that
2013-07-25 14:47:21	-->	christianpbrink (~christian@cpe-74-73-159-66.nyc.res.rr.com) has joined #haskell
2013-07-25 14:47:50	applicative	quchen: I made bold to install it, probably thinking similarly, and it's totally changed everything for me.
2013-07-25 14:47:52	-->	hualet_deepin (~user@113.57.47.216) has joined #haskell
2013-07-25 14:48:01	merijn	SLi: The point is that they do version control at an AST level, rather than text level
2013-07-25 14:48:09	applicative	but I'm not actually arguing for early adoption
2013-07-25 14:48:12	quchen	applicative: How is it deluxe-r than cabal-dev?
2013-07-25 14:48:17	MercurialAlchemi	merijn: cool
2013-07-25 14:48:18	<--	hualet_deepin (~user@113.57.47.216) has left #haskell
2013-07-25 14:48:21	<--	Moggle_ (~chatzilla@S01060014d1c3a9f9.wp.shawcable.net) has quit (Remote host closed the connection)
2013-07-25 14:48:22	merijn	SLi: So moving a function and changing a function are trivially mergable, unlike textual diffs which can't see that
2013-07-25 14:48:26	-->	ustunozgur (~ustunozgu@139.179.103.67) has joined #haskell
2013-07-25 14:48:30	applicative	quchen i think its similar
2013-07-25 14:48:32	SLi	Basically I treat a merge conflict as "hey, there's something messy here, please check". But I do realize that I'm much more used to merge conflicts and much less afraid of them than many other people :)
2013-07-25 14:48:40	<--	jmcarthur_mobile (~jmcarthur@2607:fb90:a1e:4be4:6035:a7b6:6ae0:a445) has quit (Client Quit)
2013-07-25 14:48:42	quchen	applicative: But more integrated into Cabal etc. I see.
2013-07-25 14:48:43	SLi	merijn: yup. As long as it's not too zealous, that's probably good.
2013-07-25 14:48:45	<--	brianloveswords (~brianlove@li124-154.members.linode.com) has quit (Excess Flood)
2013-07-25 14:48:57	<--	igstan (~igstan@5-12-111-157.residential.rdsnet.ro) has quit (Quit: igstan)
2013-07-25 14:48:58	-->	jmcarthur_mobile (~jmcarthur@2607:fb90:a1e:4be4:6035:a7b6:6ae0:a445) has joined #haskell
2013-07-25 14:49:12	-->	brianloveswords (~brianlove@li124-154.members.linode.com) has joined #haskell
2013-07-25 14:49:14	merijn	SLi: But they're implementing their own language for this thing, so it's not really suitable for "real" programming, but it's an insanely cool prototype :)
2013-07-25 14:49:22	applicative	quchen: i think thats right; in some ways its weaker -- if I remember, theres a cabal-dev ghci that got things right
2013-07-25 14:49:26	SLi	merijn: ah, it wasn't Haskell :)
2013-07-25 14:49:36	quchen	How do I disable profiling again? When I'm using cabal-dev for a local install, I really don't need the .p_o
2013-07-25 14:49:36	merijn	SLi: No, it's very haskell inspired, though
2013-07-25 14:49:42	quchen	-disable-prof isn't working
2013-07-25 14:50:02	applicative	is there a local cabal.config sort of file it respects?
2013-07-25 14:50:10	merijn	SLi: Haskell is rather big and complicated to implement, though so that'd be a bit unwieldy to work with
2013-07-25 14:50:32	MercurialAlchemi	merijn: looks cool, I'll try it as soon as I'm back coding for fun instead of coding for profit
2013-07-25 14:50:50	SLi	But basically I tend to think that the closer two changes are to each other in the source, the bigger the probability that the trivial merge is not the right one, and I think current SCM merge conflicts are mostly a fairly good approximation of "it would be good that someone human looked at this before proceeding".
2013-07-25 14:51:35	-->	ts33kr (~ts33kr@193.34.60.56) has joined #haskell
2013-07-25 14:51:35	<--	Swizec (~swizec@c-24-6-53-23.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-07-25 14:51:46	<--	ts33kr (~ts33kr@193.34.60.56) has quit (Client Quit)
2013-07-25 14:52:27	-->	wolfnn (~wolfnn@AMontsouris-651-1-19-74.w82-123.abo.wanadoo.fr) has joined #haskell
2013-07-25 14:52:28	-->	ts33kr (~ts33kr@193.34.60.56) has joined #haskell
2013-07-25 14:52:35	SLi	Of course if type checking can be integrated in the merge process, it's possible to eliminate not currently conflicting merges that cause a build failure (or even new warnings), which would be good :)
2013-07-25 14:52:45	applicative	SLi: Peaker is on this channel pretty frequently, he will defend his position capably
2013-07-25 14:52:54	applicative	...
2013-07-25 14:53:05	merijn	hmmm
2013-07-25 14:53:07	SLi	:)
2013-07-25 14:53:15	merijn	I just looked at the implementation of bracket
2013-07-25 14:53:18	MercurialAlchemi	you'll tear my code files from my cold, dead hands
2013-07-25 14:53:21	-->	gehmehgeh (~geh@unaffiliated/gehmehgeh) has joined #haskell
2013-07-25 14:53:37	applicative	merijn: and burst into tears ?
2013-07-25 14:53:38	merijn	As far as I can see bracket isn't safe if your resource acquisition can black...
2013-07-25 14:53:45	merijn	s/black/block
2013-07-25 14:54:03	quchen	merijn: In what sense is it not safe?
2013-07-25 14:54:13	merijn	It uses mask, rather than interruptibleMask, so if you block in resource acquisition you can still be interrupted and leak partially acquired resources
2013-07-25 14:54:18	<--	peterhil (~peterhil@158.127.31.162) has quit (Quit: Must not waste too much time here...)
2013-07-25 14:54:20	merijn	eh
2013-07-25 14:54:26	merijn	UNinterruptibleMask
2013-07-25 14:54:41	quchen	merijn: I think Marlow's book talks about that.
2013-07-25 14:54:43	merijn	quchen: Not safe in the sense that it's supposed to prevent resource leaks, but doesn't
2013-07-25 14:55:21	<--	xcthulhu (~xcthulhu@ip-64-134-163-56.public.wayport.net) has quit (Quit: xcthulhu)
2013-07-25 14:55:30	merijn	I should maybe read the concurrency part of it
2013-07-25 14:55:31	quchen	When discussing the `mask` in the section about async exceptions he brings up issues with mask and uninterruptibleMask
2013-07-25 14:55:42	quchen	Maybe that's relevant here.
2013-07-25 14:55:43	quchen	Maybe not.
2013-07-25 14:55:52	<--	paullik (~paullik@unaffiliated/paullik) has quit (Quit: paullik)
2013-07-25 14:56:22	-->	matheus23 (~quassel@p4FDF30A6.dip0.t-ipconnect.de) has joined #haskell
2013-07-25 14:57:42	<--	yesthisisuser (~chatzilla@196.45.145.212) has quit (Read error: Connection reset by peer)
2013-07-25 14:57:46	<--	scooty-puff (~andy@71-220-82-253.mpls.qwest.net) has quit (Ping timeout: 256 seconds)
2013-07-25 14:58:08	merijn	I looked at the "mask and forkIO" section, but it's not discussed there, I'll just start reading the start to see if I run into a discussion
2013-07-25 14:58:48	MercurialAlchemi	merijn: I'll try your plugin as soon as I'm back coding for fun instead of for profit
2013-07-25 14:59:04	merijn	MercurialAlchemi: Lemme run if you run into anything
2013-07-25 14:59:09	mauke	if your resource acquisition isn't atomic, you're screwed anyway, no?
2013-07-25 14:59:12	merijn	oh: "But before should perform only one blocking operation. An exception raised by a second blocking operation would not result in after being executed. If you need to perform two blocking operations, the right way is to nest calls to bracket"
2013-07-25 14:59:24	merijn	mauke: Why?
2013-07-25 14:59:36	mauke	because otherwise it can't be used safely
2013-07-25 14:59:51	merijn	I don't see why that's necessarily true?
2013-07-25 15:00:36	-->	xcthulhu (~xcthulhu@ip-64-134-163-56.public.wayport.net) has joined #haskell
2013-07-25 15:00:48	merijn	I'm doing cleanup of threads, i.e. there's a cleanup that should kill a thread and clean it resources, but if the thread dies it should also cleanup and deregister it's cleanup hook
2013-07-25 15:00:51	-->	yesthisisuser (~chatzilla@196.45.145.212) has joined #haskell
2013-07-25 15:01:19	merijn	This means that my resource acquisition is two steps "acquire resource, register handler"
2013-07-25 15:01:20	<--	PRISMBITCH (~PRISMBITC@178-85-121-235.dynamic.upc.nl) has quit (Ping timeout: 256 seconds)
2013-07-25 15:01:38	applicative	@type \a f g -> bracket (bracket a f g)
2013-07-25 15:01:39	lambdabot	IO a1 -> (a1 -> IO b1) -> (a1 -> IO a) -> (a -> IO b) -> (a -> IO c) -> IO c
2013-07-25 15:01:41	merijn	The handler registration can block if there's contention on the cleanup
2013-07-25 15:01:43	applicative	nice
2013-07-25 15:01:54	merijn	So I want either *both* to happen, or neither
2013-07-25 15:02:21	merijn	But that means I should not ever get interrupted while registering the handler
2013-07-25 15:02:32	mauke	can you mask manually?
2013-07-25 15:02:47	<--	vijaykiran (~user@D57DBD32.static.ziggozakelijk.nl) has quit (Ping timeout: 240 seconds)
2013-07-25 15:02:48	merijn	with mask it's possible to block for a bit and get interrupted in there
2013-07-25 15:03:15	merijn	mauke: I can write my own code using uninterruptibleMask, it's just that everyone always yells "you shouldn't use mask yourself!"
2013-07-25 15:03:24	merijn	So I wondered if there was an existing safe approach
2013-07-25 15:03:55	merijn	But it looks like I should just assume I'm a aware of the dangers of uninterruptibleMask and do things myself :)
2013-07-25 15:04:32	<--	vobi (~vobi@2001:1a50:11:0:5f:8f:ac93:280) has quit (Ping timeout: 260 seconds)
2013-07-25 15:04:34	-->	apparentsoft (~apparents@46-116-168-246.bb.netvision.net.il) has joined #haskell
2013-07-25 15:04:34	-->	edsko (~edsko@p57B8BD02.dip0.t-ipconnect.de) has joined #haskell
2013-07-25 15:05:24	-->	csakatoku (~csakatoku@softbank126009008011.bbtec.net) has joined #haskell
2013-07-25 15:05:28	quchen	Assuming is not a very good start with that function.
2013-07-25 15:05:57	-->	vobi (~vobi@2001:1a50:11:0:5f:8f:ac93:280) has joined #haskell
2013-07-25 15:05:58	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #haskell
2013-07-25 15:06:07	-->	de-Vri-es (~quassel@50709F23.static.ziggozakelijk.nl) has joined #haskell
2013-07-25 15:06:19	merijn	quchen: I've worked on a concurrent runtime system in C using pthreads, I'm an adept at foot shooting :)
2013-07-25 15:06:25	quchen	unsafePerformIO getYear -- Assuming everyone celebrates on New Year's and doesn't run my program
2013-07-25 15:06:31	-->	uniquenick (~uniquenic@CPE000024ce7a51-CM78cd8e7dbf05.cpe.net.cable.rogers.com) has joined #haskell
2013-07-25 15:06:38	-->	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has joined #haskell
2013-07-25 15:06:47	de-Vri-es	hey, I just compiled a simple helloword with and without optimization, but I didn't see any difference in an objdump from both versions
2013-07-25 15:06:52	de-Vri-es	any idea why that may be?
2013-07-25 15:07:11	merijn	quchen: I like to think I'm experienced enough at this to ignore all the "experts-only" warnings :)
2013-07-25 15:07:21	merijn	de-Vri-es: There's not much to optimise about hello world?
2013-07-25 15:07:24	applicative	maybe de-Vri-es there's not too much scope for optimization with hello world
2013-07-25 15:07:31	quchen	Oh yes there is
2013-07-25 15:07:31	mauke	de-Vri-es: did it say "compiling" each time?
2013-07-25 15:07:40	merijn	mauke: oh, good point
2013-07-25 15:07:43	merijn	mauke++
2013-07-25 15:07:43	de-Vri-es	ehh, let me see
2013-07-25 15:07:57	merijn	I've fallen into that trap so often
2013-07-25 15:07:59	applicative	good point mauke
2013-07-25 15:08:02	<--	osa1 (~omer@178-211-43-55.turkrdns.com) has quit (Quit: Konversation terminated!)
2013-07-25 15:08:02	de-Vri-es	mauke: no it didn't
2013-07-25 15:08:03	quchen	Compare the output of "ghc -O helloworld.js -ddump-simpl -fforce-recomp" with the one without O
2013-07-25 15:08:09	quchen	There's one hell of a difference
2013-07-25 15:08:11	mauke	de-Vri-es: -fforce-recomp
2013-07-25 15:08:33	de-Vri-es	I see, didn't know it doesn't do that
2013-07-25 15:08:35	de-Vri-es	thanks
2013-07-25 15:08:39	applicative	quchen: its helloworld.hs, please
2013-07-25 15:08:42	merijn	quchen: helloworld.js ಠ_ಠ ಠ_ಠ
2013-07-25 15:08:58	-->	osa1 (~omer@91.232.136.87) has joined #haskell
2013-07-25 15:09:05	quchen	You guys didn't get the memo? SPJ is now working on Node.js
2013-07-25 15:09:07	merijn	de-Vri-es: It tries to be smart about recompiling, since the code didn't change it was like "I don't need to recompile"
2013-07-25 15:09:18	quchen	I should be careful now. :>
2013-07-25 15:09:29	merijn	de-Vri-es: i.e. ghc behaves like make
2013-07-25 15:09:33	applicative	de-Vri-es: i made a stupid alias, hclean, that crushes the o and i files, which i somehow forget less than --fforce-recomp
2013-07-25 15:09:33	de-Vri-es	merijn: I just kinda assumed it would delegate that to a build tool
2013-07-25 15:09:54	<--	ntus1017 (~ntus1017@113.173.220.22) has quit (Remote host closed the connection)
2013-07-25 15:09:56	quchen	applicative: A --clean flag (the inverse of --make) would be pretty cool.
2013-07-25 15:10:06	merijn	de-Vri-es: Nope, one of the advantages of a proper module system is no unnecessary recompiles :)
2013-07-25 15:10:23	<--	elediaz (~elediaz@92.59.149.116) has quit (Quit: leaving)
2013-07-25 15:10:27	de-Vri-es	good to know :)
2013-07-25 15:10:28	-->	maximveksler (~maximveks@46.19.81.34) has joined #haskell
2013-07-25 15:10:43	quchen	Meanwhile, Lamdu is still compiling.
2013-07-25 15:11:09	applicative	de-Vri-es: it's irritating when you're writing a short executable, this default, but with beyond that, the sensibleness of the default shows itself
2013-07-25 15:11:25	<--	jophish_ (~jophish@cpc2-oxfd18-2-0-cust473.4-3.cable.virginmedia.com) has quit (Read error: Connection reset by peer)
2013-07-25 15:11:26	-->	lambdanaut (~lambdanau@rrcs-98-101-176-171.midsouth.biz.rr.com) has joined #haskell
2013-07-25 15:11:47	quchen	merijn: Oh, ghc-dev doesn't use the global package DB at all? It even installs the packages I already have locally again?
2013-07-25 15:11:48	de-Vri-es	applicative: yeah. it makes sense, as long as you know about it
2013-07-25 15:11:53	merijn	quchen: Yeah
2013-07-25 15:11:59	-->	jophish_ (~jophish@cpc2-oxfd18-2-0-cust473.4-3.cable.virginmedia.com) has joined #haskell
2013-07-25 15:12:00	quchen	Even the Platform stuff then?
2013-07-25 15:12:06	quchen	That explains the compilation time
2013-07-25 15:12:21	applicative	de-Vri-es: yes, exactly
2013-07-25 15:12:23	merijn	quchen: Yeah, it's one of the main reasons I don't usually use cabal-dev
2013-07-25 15:12:27	<--	yogert1 (~Adium@ool-457128b5.dyn.optonline.net) has quit (Quit: Leaving.)
2013-07-25 15:12:29	<--	tazjin (~tazjin@2a01:2b0:3041:3018:6406:debd:ba52:edbe) has quit (Ping timeout: 245 seconds)
2013-07-25 15:12:58	quchen	merijn: Do you know anything about when parallel building is coming?
2013-07-25 15:13:01	applicative	when ghc is re-building, it emits claims like 'recompilation not needed'
2013-07-25 15:13:04	quchen	7 cores are bored here
2013-07-25 15:13:20	merijn	quchen: I think cabal already supports parallel builds?
2013-07-25 15:13:29	<--	kingugo (~kingugo@196.46.245.58) has quit (Quit: Leaving)
2013-07-25 15:13:29	applicative	of course it does
2013-07-25 15:13:43	applicative	-j37
2013-07-25 15:13:53	-->	jumac (~quassel@140.255.127.199.client.static.strong-in14.as13926.net) has joined #haskell
2013-07-25 15:14:03	--	anildigital is now known as anildigital_away
2013-07-25 15:14:16	quchen	Wat.
2013-07-25 15:14:26	quchen	Did I just miss the existence of that parameter then
2013-07-25 15:14:29	applicative	its recent
2013-07-25 15:14:37	quchen	Is it in the Platform?
2013-07-25 15:14:45	applicative	but its in the going cabal-install Im pretty sure
2013-07-25 15:15:00	merijn	quchen: Fun fact, you can install newer cabal-install versions no problem
2013-07-25 15:15:15	merijn	gah
2013-07-25 15:15:22	merijn	Let me guess
2013-07-25 15:15:28	quchen	merijn: What's cabal-install good for anyway, how is it different from "cabal install"?
2013-07-25 15:15:33	merijn	ContT won't work with Rank2Types?
2013-07-25 15:15:33	applicative	I think its in the cabal-install the comes with the recent platform
2013-07-25 15:15:34	t7	how do i parrellel zipWith?
2013-07-25 15:15:40	-->	mgile (~mgile@74-92-220-177-Colorado.hfc.comcastbusiness.net) has joined #haskell
2013-07-25 15:15:44	merijn	quchen: cabal-install *is* the cabal binary
2013-07-25 15:15:47	quchen	merijn: I just found out I don't even have cabal-install
2013-07-25 15:15:48	quchen	Oh.
2013-07-25 15:15:53	quchen	And cabal is a link to it?
2013-07-25 15:16:17	mauke	http://hackage.haskell.org/package/cabal-install
2013-07-25 15:16:19	merijn	quchen: cabal (the package name) is the library, cabal-install (the package name) is the executable caal
2013-07-25 15:16:34	mauke	http://hackage.haskell.org/package/Cabal
2013-07-25 15:16:49	applicative	there's an irritating ambiguity.
2013-07-25 15:17:10	quchen	merijn: But the thing I enter in my command line is "cabal", not "cabal-install".
2013-07-25 15:17:20	quchen	Oh.
2013-07-25 15:17:20	applicative	t7 parallel zipWith?
2013-07-25 15:17:21	applicative	hm
2013-07-25 15:17:26	merijn	quchen: Yes, he cabal-install package installs a binary named cabal
2013-07-25 15:17:26	quchen	Bloody hell.
2013-07-25 15:17:33	quchen	Alright, I think I got it now.
2013-07-25 15:17:44	quchen	Sorry, I'm a bit slow. It's warm and I have this birth defect.
2013-07-25 15:17:44	applicative	quchen: 'cabal-install' is just a way of speaking, following the executable's package name, to disambuiguage
2013-07-25 15:17:51	applicative	disambiguate too
2013-07-25 15:18:03	-->	Yaasky (~Adium@135.0.63.119) has joined #haskell
2013-07-25 15:18:08	mauke	coambiguate
2013-07-25 15:18:20	quchen	AAAAAAAH now Lamdu installs Lens locally
2013-07-25 15:18:24	quchen	I should have done this over night
2013-07-25 15:18:28	applicative	hahah
2013-07-25 15:18:29	<--	brandonw1 (~brandonw@24-181-232-41.dhcp.oxfr.ma.charter.com) has quit (Ping timeout: 248 seconds)
2013-07-25 15:18:37	quchen	ExitFailure 1
2013-07-25 15:18:41	quchen	Screw it :-C
2013-07-25 15:19:52	<--	yesthisisuser (~chatzilla@196.45.145.212) has quit (Read error: Connection reset by peer)
2013-07-25 15:20:09	-->	tazjin (~tazjin@2a01:2b0:3041:3018:d00a:4365:d3eb:aaeb) has joined #haskell
2013-07-25 15:20:27	<--	jozefg (~dannygrat@c-24-63-142-232.hsd1.ma.comcast.net) has quit (Quit: jozefg)
2013-07-25 15:20:43	quchen	applicative: I see, "cabal install cabal-install" looks much more reasonable than "cabal install cabal".
2013-07-25 15:20:49	 *	Yaasky is new to Haskell
2013-07-25 15:20:50	-->	yesthisisuser (~chatzilla@196.45.145.212) has joined #haskell
2013-07-25 15:21:00	 *	Yaasky loves infinite primes (:
2013-07-25 15:21:11	<--	lokydor (lecornec20@tom.iiens.net) has quit (Ping timeout: 264 seconds)
2013-07-25 15:21:12	ski_	infinite primes ?
2013-07-25 15:21:15	mauke	inb4 nubBy
2013-07-25 15:21:25	Yaasky	yep.
2013-07-25 15:21:36	mauke	most primes are finite
2013-07-25 15:22:03	applicative	yes, mauke but they are infinite ;)
2013-07-25 15:22:18	Yaasky	I know but I have never been able to compute that from imperative programming. always thought they were just theories
2013-07-25 15:22:19	-->	morazow (~morazow@gsd117.gsd.inesc-id.pt) has joined #haskell
2013-07-25 15:22:27	Yaasky	mathematical theories
2013-07-25 15:22:45	applicative	I see, that you can define primes :: [Integer], for example
2013-07-25 15:23:06	Yaasky	yes, without an upper bound
2013-07-25 15:23:10	applicative	It is very strange and wonderful Yaasky
2013-07-25 15:23:19	applicative	of course you pay for it in some ways!
2013-07-25 15:23:20	-->	ghorn_ (~ghorn@kulnet-nat-2.kulnet.kuleuven.be) has joined #haskell
2013-07-25 15:23:21	ghorn_	ll
2013-07-25 15:23:58	mauke	ls -lh
2013-07-25 15:23:59	Yaasky	I'm yet to know the costs. Right now, it's free. I'm still new
2013-07-25 15:24:49	applicative	Yaasky: no, Im not objecting to it, it is just closely bound up with other features of Haskell that have plusses and minuses.
2013-07-25 15:24:59	<--	spektroskop (~alex@cm-84.208.195.71.getinternet.no) has quit (Quit: Lost terminal)
2013-07-25 15:25:00	applicative	Of course it is overwhelmingly beautiful
2013-07-25 15:26:22	applicative	Yaasky: take a look at http://www.cs.bham.ac.uk/~mhe/papers/seemingly-impossible.html or in its original form, sort of, http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/
2013-07-25 15:27:10	Yaasky	Thanks applicative! This is the reason I am here: to learn more
2013-07-25 15:27:10	<--	gautamc (~mrblue@ip174-64-113-195.ga.at.cox.net) has quit (Read error: Connection reset by peer)
2013-07-25 15:27:11	quchen	> nubBy(((>1).).gcd) -- Did soneone say primes?
2013-07-25 15:27:12	lambdabot	  <[Integer] -> [Integer]>
2013-07-25 15:27:13	b2coutts	applicative: I'm curious; how do you pay for it?
2013-07-25 15:27:26	b2coutts	I thought that it was pretty much free
2013-07-25 15:27:30	-->	paintcan (~user@66.199.39.230) has joined #haskell
2013-07-25 15:27:33	<--	MedDev (~MDev@68-112-203-118.dhcp.eucl.wi.charter.com) has quit (Ping timeout: 248 seconds)
2013-07-25 15:27:41	applicative	b2coutts: I was just making the obvious point, it's bound up with laziness
2013-07-25 15:28:04	mauke	... and there's the nubBy!
2013-07-25 15:28:20	b2coutts	applicative: oh, as in you pay for it by having some of the less desirable properties of laziness, not with a performance loss?
2013-07-25 15:28:29	applicative	I was just trying to avoid being excessively enthusiastic b2coutts though of course I am excessively enthusiastic
2013-07-25 15:28:34	b2coutts	haha
2013-07-25 15:28:56	applicative	b2coutts: right, I wasn't being clear really
2013-07-25 15:29:05	-->	c4iff (~Adium@38.111.136.224) has joined #haskell
2013-07-25 15:29:13	jevankovich	Don't forget being able to represent images as infinitely definite functions over the reals. That's nice too
2013-07-25 15:29:15	-->	gautamc (~mrblue@ip174-64-113-195.ga.at.cox.net) has joined #haskell
2013-07-25 15:29:27	-->	mbuf (user@nat/redhat/x-wxszzvtaseqibcxj) has joined #haskell
2013-07-25 15:29:58	Yaasky	I have no idea what that is, jevankovich, but it does sound useful
2013-07-25 15:30:22	<--	xcthulhu (~xcthulhu@ip-64-134-163-56.public.wayport.net) has quit (Quit: xcthulhu)
2013-07-25 15:30:26	-->	duikboot (~ad@s3eea3de7.adsl.online.nl) has joined #haskell
2013-07-25 15:31:40	merijn	heh
2013-07-25 15:31:40	<--	yesthisisuser (~chatzilla@196.45.145.212) has quit (Read error: Connection reset by peer)
2013-07-25 15:31:44	jevankovich	you can have a function "image :: Float -> Float -> Color" and sample it any where whenever you need it. You don't need to worry about storing all of those points in an array like would be standard in an imperative language
2013-07-25 15:31:44	-->	MedDev (~MDev@68-112-203-118.dhcp.eucl.wi.charter.com) has joined #haskell
2013-07-25 15:31:57	merijn	I've been overcomplicating my code with MVar's to communicate a threads id to the thread
2013-07-25 15:32:14	merijn	Totally forgetting the fact that there's like a completely simple "myThreadId" available...
2013-07-25 15:32:32	Yaasky	ah true, jevankovich
2013-07-25 15:32:54	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-07-25 15:33:11	quchen	merijn: I'm looking forward to the point where you'd like to have it as an Int :>
2013-07-25 15:33:16	 *	hackagebot unix-process-conduit 0.2.1 - Run processes on Unix systems, with a conduit interface  http://hackage.haskell.org/package/unix-process-conduit-0.2.1 (MichaelSnoyman)
2013-07-25 15:33:22	-->	jchild (~textual@rrcs-50-75-181-175.nys.biz.rr.com) has joined #haskell
2013-07-25 15:33:27	<--	Icewing (~Icewing@unaffiliated/icewing) has quit (Remote host closed the connection)
2013-07-25 15:35:35	-->	Cromulent (~Cromulent@81.106.27.252) has joined #haskell
2013-07-25 15:35:53	-->	yesthisisuser (~chatzilla@196.45.145.212) has joined #haskell
2013-07-25 15:36:08	-->	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 15:36:09	<--	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Read error: Connection reset by peer)
2013-07-25 15:37:03	-->	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 15:37:12	b2coutts	jevankovich: is that a horrible way of doing it in terms of performance/space, or is this one of those cases where GHC is magic?
2013-07-25 15:37:39	b2coutts	also wouldn't those be ints?
2013-07-25 15:37:46	<--	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has quit (Remote host closed the connection)
2013-07-25 15:37:53	<--	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has quit (Quit: DrTeggy)
2013-07-25 15:38:25	-->	lokydor (lecornec20@tom.iiens.net) has joined #haskell
2013-07-25 15:38:39	-->	jjohnsson (~jjohnsson@host-95-195-140-188.mobileonline.telia.com) has joined #haskell
2013-07-25 15:38:56	<--	osa1 (~omer@91.232.136.87) has quit (Quit: Konversation terminated!)
2013-07-25 15:39:16	-->	ntus1017 (~ntus1017@113.173.220.22) has joined #haskell
2013-07-25 15:39:23	<--	joaopizani (~joaopizan@175pc204.sshunet.nl) has quit (Ping timeout: 240 seconds)
2013-07-25 15:39:26	--	gpampara is now known as zz_gpampara
2013-07-25 15:40:40	<--	xexonixxexillion (~Adium@130.56.94.205) has quit (Quit: Leaving.)
2013-07-25 15:41:07	jevankovich	b2coutts: The way I used it I used floats from 0 to 1 and I did this in a raytracer. If it was done for loading an image from storage that wasn't going to be transformed, this would be fairly awful I'd imagine. For how I used it (I also did something similar to represent the volume I was raytracing) it made representing transformations really nice
2013-07-25 15:41:08	-->	xcthulhu (~xcthulhu@c-98-220-235-232.hsd1.il.comcast.net) has joined #haskell
2013-07-25 15:41:15	applicative	b2coutts: I think jevankovich is thinking of the image itself as Float -> Float -> Color, then you so to speak interpret it
2013-07-25 15:41:20	applicative	oh hes explaining
2013-07-25 15:41:26	-->	joaopizani (~joaopizan@175pc204.sshunet.nl) has joined #haskell
2013-07-25 15:41:33	<--	catwiesel (~catwiesel@p579D3282.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2013-07-25 15:41:34	<--	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Read error: Connection reset by peer)
2013-07-25 15:41:38	jevankovich	It's nice for arbitrarily generating images
2013-07-25 15:42:24	-->	DarkUnicorn (~DarkUnico@sunlight.informatik.uni-kiel.de) has joined #haskell
2013-07-25 15:42:39	merijn	hmm
2013-07-25 15:42:46	merijn	I've got a nice tricky question
2013-07-25 15:42:59	-->	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 15:43:05	b2coutts	jevankovich: oh, cool, I was thinking of a bitmap
2013-07-25 15:43:18	b2coutts	er, a pixel map
2013-07-25 15:43:25	b2coutts	you know what I mean >_>
2013-07-25 15:43:35	bscarlet	merijn: I, for one, am waiting to be tricked.
2013-07-25 15:43:40	-->	egork8n (~egor.kuro@77.232.56.194) has joined #haskell
2013-07-25 15:44:20	merijn	Do these have the same effect? "do { tid <- myThreadId; putMVar m (killThread tid) }" vs "do { putMVar m =<< (myThreadId >>= killThread) }"
2013-07-25 15:44:41	merijn	oh, I guess they do
2013-07-25 15:44:48	<--	DarkUnicorn (~DarkUnico@sunlight.informatik.uni-kiel.de) has quit (Client Quit)
2013-07-25 15:45:10	-->	pmade (~pmade@c-67-172-151-101.hsd1.co.comcast.net) has joined #haskell
2013-07-25 15:45:11	merijn	because of the =<< requires "myThreadId >>= killThread" to be evaluated before being able to get it out
2013-07-25 15:45:14	applicative	wait do the types fit
2013-07-25 15:45:34	mauke	@. pl undo do { tid <- myThreadId; putMVar m (killThread tid) }
2013-07-25 15:45:34	lambdabot	putMVar m . killThread =<< myThreadId
2013-07-25 15:45:37	applicative	oh isee
2013-07-25 15:45:41	<--	quchen (~quchen@wthp151d.physik.uni-wuerzburg.de) has quit (Read error: Operation timed out)
2013-07-25 15:45:50	merijn	actually, now I'm doubting again
2013-07-25 15:45:54	merijn	About the second
2013-07-25 15:46:11	mauke	@unpl putMVar m =<< (myThreadId >>= killThread)
2013-07-25 15:46:11	lambdabot	((myThreadId >>= killThread) >>= (putMVar m))
2013-07-25 15:46:14	applicative	@undo do { tid <- myThreadId; putMVar m (killThread tid) }
2013-07-25 15:46:15	lambdabot	myThreadId >>= \ tid -> putMVar m (killThread tid)
2013-07-25 15:46:18	mauke	@. redo unpl putMVar m =<< (myThreadId >>= killThread)
2013-07-25 15:46:18	lambdabot	Plugin `compose' failed with: Unknown command: "redo"
2013-07-25 15:46:32	mauke	@. do unpl putMVar m =<< (myThreadId >>= killThread)
2013-07-25 15:46:32	lambdabot	(do { a <- (do { a <- myThreadId; killThread a}); (putMVar m) a})
2013-07-25 15:46:33	-->	Arnoldz (~df@198.199.108.230) has joined #haskell
2013-07-25 15:46:36	-->	Luke (~luke@c-67-184-182-187.hsd1.il.comcast.net) has joined #haskell
2013-07-25 15:46:36	<--	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Read error: Connection reset by peer)
2013-07-25 15:46:47	<--	justinls (uid10572@gateway/web/irccloud.com/x-iuskrjkavfcggmtf) has quit (Quit: Connection closed for inactivity)
2013-07-25 15:46:55	mauke	the second one puts the result of killing tid
2013-07-25 15:47:24	<--	bgilbert (~textual@108-239-26-79.lightspeed.chtnsc.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2013-07-25 15:47:24	<--	jumac (~quassel@140.255.127.199.client.static.strong-in14.as13926.net) has quit (Remote host closed the connection)
2013-07-25 15:47:28	merijn	hmm I guess I wanted "do { putMVar m (myThreadId >>= killThread) }"
2013-07-25 15:47:34	merijn	That's what I get for simplifying on the fly
2013-07-25 15:47:42	mauke	that would kill the wrong thread, no?
2013-07-25 15:47:44	merijn	I suspect that one kills the thread reading
2013-07-25 15:47:50	merijn	mauke: Yes, hence my question :p
2013-07-25 15:48:02	merijn	mauke: I was checking that that would indeed kill the wrong one
2013-07-25 15:48:06	-->	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 15:48:10	-->	Apocalisp (~textual@mobile-166-147-096-231.mycingular.net) has joined #haskell
2013-07-25 15:48:23	-->	julmac (~no@140.255.127.199.client.static.strong-in14.as13926.net) has joined #haskell
2013-07-25 15:48:36	-->	denver (~denver@adsl-ull-226-248.45-151.net24.it) has joined #haskell
2013-07-25 15:49:20	-->	flebron (~flebron@gw.dc.uba.ar) has joined #haskell
2013-07-25 15:49:50	<--	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Remote host closed the connection)
2013-07-25 15:50:54	<--	copumpkin (~copumpkin@unaffiliated/copumpkin) has quit (Ping timeout: 265 seconds)
2013-07-25 15:51:00	-->	fmardini (~fmardini@212.35.92.160) has joined #haskell
2013-07-25 15:51:01	bscarlet	merijn: Well, I'm confused at least. Which one kills the wrong thread and why?
2013-07-25 15:51:11	-->	copumpkin (~copumpkin@unaffiliated/copumpkin) has joined #haskell
2013-07-25 15:51:45	-->	anRch (~markmilli@ip-64-134-242-96.public.wayport.net) has joined #haskell
2013-07-25 15:51:59	fmardini	Hi, finding it a bit hard to wrap my head around the type signature of (.) . (.)
2013-07-25 15:52:10	fmardini	any ideas on how to tackle
2013-07-25 15:52:19	-->	danharaj (~Adium@rrcs-24-39-113-178.nyc.biz.rr.com) has joined #haskell
2013-07-25 15:52:28	<--	flebron (~flebron@gw.dc.uba.ar) has quit (Client Quit)
2013-07-25 15:52:29	<--	tazjin (~tazjin@2a01:2b0:3041:3018:d00a:4365:d3eb:aaeb) has quit (Ping timeout: 245 seconds)
2013-07-25 15:52:34	merijn	bscarlet: The second one
2013-07-25 15:52:54	<--	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Read error: Connection reset by peer)
2013-07-25 15:52:54	merijn	bscarlet: i.e "putMVar m (myThreadId >>= killThread)"
2013-07-25 15:53:08	merijn	bscarlet: because the myThreadId will be evaluated in the reading thread, not the writing thread
2013-07-25 15:53:44	-->	nilsi (~nilsi@124.79.136.212) has joined #haskell
2013-07-25 15:54:05	<--	germanmushroom (~remco@s5596529d.adsl.online.nl) has quit (Remote host closed the connection)
2013-07-25 15:54:45	-->	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 15:54:46	bscarlet	merijn: so (once you've made the correction), you're talking about an MVar (IO ())?
2013-07-25 15:55:11	-->	bsft (~sam@cpc1-nrwh4-0-0-cust402.4-4.cable.virginmedia.com) has joined #haskell
2013-07-25 15:55:15	jevankovich	fmardini: the type of (.) is (b -> c) -> (a -> b) -> a -> c . When you put the first argument as (.) b is bound to a different (b -> c) and c is bound to a different ((a -> b) -> a -> c)
2013-07-25 15:56:00	merijn	bscarlet: Yes
2013-07-25 15:56:12	merijn	bscarlet: The first one is MVar (IO ()) too
2013-07-25 15:56:25	merijn	bscarlet: The original second one had the wrong type
2013-07-25 15:56:55	applicative	@pl \f g x y  -> f (g x y)
2013-07-25 15:56:56	lambdabot	(.) . (.)
2013-07-25 15:57:12	Yaasky	fmardini: you can extrapolate what jevankovich said to the signature of (.) . (.) which is (b -> c) -> (a -> a1 -> b) -> a -> a1 -> c
2013-07-25 15:57:14	<--	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Read error: Connection reset by peer)
2013-07-25 15:57:50	-->	bashyal (~bashyal@ec2-54-245-100-167.us-west-2.compute.amazonaws.com) has joined #haskell
2013-07-25 15:57:55	bscarlet	merijn: Thanks.
2013-07-25 15:57:59	<--	jdnavarro (~danny@2.Red-88-1-184.dynamicIP.rima-tde.net) has quit (Quit: Konversation terminated!)
2013-07-25 15:58:21	-->	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 15:58:52	<--	bsft (~sam@cpc1-nrwh4-0-0-cust402.4-4.cable.virginmedia.com) has left #haskell
2013-07-25 15:58:53	<--	joaopizani (~joaopizan@175pc204.sshunet.nl) has quit (Ping timeout: 240 seconds)
2013-07-25 15:59:14	applicative	fmardini: one if constantly combining signs like so even (x + y) , length (x ++ y) etc. this abstracts the pattern
2013-07-25 15:59:18	-->	normanrichards (~normanric@74.61.92.158) has joined #haskell
2013-07-25 15:59:21	applicative	one is forever ...
2013-07-25 15:59:53	applicative	somehow, the abstraction is not quite as useful as say foldr or (.) itself ...
2013-07-25 15:59:53	<--	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Read error: Connection reset by peer)
2013-07-25 16:00:29	-->	joaopizani (~joaopizan@175pc204.sshunet.nl) has joined #haskell
2013-07-25 16:00:30	fmardini	jevankovich: thanks. this seems to have "uncurried" the second function of the composition. this is what is confusing me
2013-07-25 16:00:43	applicative	@type let owl f op x y = f (op x y) in owl
2013-07-25 16:00:44	lambdabot	(t1 -> t) -> (t2 -> t3 -> t1) -> t2 -> t3 -> t
2013-07-25 16:00:52	merijn	fmardini: My advice is, take a pen and paper, write out the types of all components and start substituting by hand
2013-07-25 16:01:02	-->	kingugo (~kingugo@196.46.245.53) has joined #haskell
2013-07-25 16:01:20	mauke	get a type writer
2013-07-25 16:01:23	<--	kingugo (~kingugo@196.46.245.53) has quit (Client Quit)
2013-07-25 16:01:24	-->	Velpoman (~Velpoman@nat/yahoo/x-kwldcsvylsgrcbof) has joined #haskell
2013-07-25 16:01:45	-->	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 16:02:00	hpaste	merijn pasted “Managed threads without resource leaks!” at http://lpaste.net/91208
2013-07-25 16:02:14	merijn	Right, I think that's as safe as I can get it
2013-07-25 16:02:14	<--	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Read error: Connection reset by peer)
2013-07-25 16:02:35	applicative	fmardini: yes, in order to make sense of (.).(.) the types end up being specialized, the second argument must take two arguments so to say
2013-07-25 16:02:38	fmardini	merijn: will give it a shot
2013-07-25 16:03:11	merijn	fmardini: Hell, I did that not 10 minutes ago to figure out how ContT works :)
2013-07-25 16:03:39	-->	lambdakind (~lambdakin@cpe-66-25-204-143.sw.res.rr.com) has joined #haskell
2013-07-25 16:03:47	fmardini	merijn: :) gotta love them types
2013-07-25 16:03:58	applicative	fmardini, the case is similar to
2013-07-25 16:04:00	<--	yesthisisuser (~chatzilla@196.45.145.212) has quit (Ping timeout: 246 seconds)
2013-07-25 16:04:01	applicative	@type flip id
2013-07-25 16:04:02	lambdabot	b -> (b -> c) -> c
2013-07-25 16:04:19	jevankovich	fmardini: It might be a good idea to give each function new type variables. That way it'll be harder to mix everything up
2013-07-25 16:04:31	applicative	here, if it is to make sense, id has to be specialised to (b->c) -> (b->c)
2013-07-25 16:04:50	-->	oleo (~oleo@xdsl-78-35-138-72.netcologne.de) has joined #haskell
2013-07-25 16:05:17	fmardini	applicative: flip id help actually :) thanks
2013-07-25 16:06:01	-->	SyntaxNinja (~ijones@c-76-105-176-7.hsd1.or.comcast.net) has joined #haskell
2013-07-25 16:06:31	-->	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 16:07:02	Yaasky	ah this :t flip id actually helped me understand—a bit—what's going on here
2013-07-25 16:07:11	 *	Yaasky was totally lost
2013-07-25 16:07:36	-->	germanmushroom (~remco@s5596529d.adsl.online.nl) has joined #haskell
2013-07-25 16:09:02	<--	apparentsoft (~apparents@46-116-168-246.bb.netvision.net.il) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2013-07-25 16:09:29	-->	adas (~adas@122.164.69.110) has joined #haskell
2013-07-25 16:10:28	adas	I am in the IO monad. Inside the IO monad I have a (Just val). Is it possible to get the 'val' alone to do more processing with it?
2013-07-25 16:10:37	<--	julmac (~no@140.255.127.199.client.static.strong-in14.as13926.net) has quit (Remote host closed the connection)
2013-07-25 16:10:51	--	Kuraitou_ is now known as Kuraitou
2013-07-25 16:10:54	-->	execut3 (~shesek@77.126.37.211) has joined #haskell
2013-07-25 16:10:58	-->	amathew (~Adium@nol-lo0.fw.nyc2.appnexus.com) has joined #haskell
2013-07-25 16:11:13	tdammers	adas: sure
2013-07-25 16:11:23	tdammers	let Just v = yourMaybeValue
2013-07-25 16:11:43	<--	edwardk (~edwardk@pdpc/supporter/professional/edwardk) has quit (Quit: Computer has gone to sleep.)
2013-07-25 16:11:44	jevankovich	But then in the case that it's Nothing...
2013-07-25 16:11:55	tdammers	well, of course, then it breaks
2013-07-25 16:12:13	tdammers	you can use fromMaybe or maybe, of course
2013-07-25 16:12:24	tdammers	the fact that you're in IO doesn't really change a lot
2013-07-25 16:13:00	-->	enthropy (~aavogt@CPE00222d67ba9d-CM00222d67ba99.cpe.net.cable.rogers.com) has joined #haskell
2013-07-25 16:13:13	adas	oh oh ofcourse..the control.maybe should have some helpers. thanks for reminding me. : )
2013-07-25 16:13:40	adas	there is no such thing
2013-07-25 16:13:45	adas	Data.maybe perhaps
2013-07-25 16:13:48	-->	vishesh (~vishesh@103.26.218.147) has joined #haskell
2013-07-25 16:14:03	-->	julmac (~no@140.255.127.199.client.static.strong-in14.as13926.net) has joined #haskell
2013-07-25 16:14:22	-->	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 16:14:26	<--	shesek (~shesek@IGLD-84-229-213-228.inter.net.il) has quit (Ping timeout: 256 seconds)
2013-07-25 16:14:42	jevankovich	You could write a small function if it's okay to have a sane default come out with Nothing
2013-07-25 16:14:45	 *	Yaasky is about to leave
2013-07-25 16:14:56	Yaasky	thanks for the links, applicative
2013-07-25 16:15:47	Yaasky	thanks for the chat bscarlet, merijn, jevankovich, applicative, lambdabot and the rest
2013-07-25 16:17:02	<--	niklasb (~codeslay0@p5B313132.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2013-07-25 16:17:09	<--	torkjak (~torkjak@gateway/tor-sasl/torkjak) has quit (Ping timeout: 240 seconds)
2013-07-25 16:17:09	<--	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has quit (Ping timeout: 248 seconds)
2013-07-25 16:17:19	<--	Yaasky (~Adium@135.0.63.119) has left #haskell
2013-07-25 16:17:55	adas	im just trying to print a value inside a maybe
2013-07-25 16:17:57	hpaste	merijn pasted “ContT-ify?” at http://lpaste.net/91209
2013-07-25 16:18:12	-->	Y_Less (Y_Less@2a01:7e00::f03c:91ff:fe69:c328) has joined #haskell
2013-07-25 16:18:23	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-25 16:18:39	merijn	It seems like that could be nicified/generalised using ContT, but I'm not to familiar with ContT? Any helpers?
2013-07-25 16:18:44	-->	wbruce (~wbruce@c-98-246-217-110.hsd1.or.comcast.net) has joined #haskell
2013-07-25 16:18:45	mauke	:t maybe (return ()) print
2013-07-25 16:18:46	lambdabot	Show a => Maybe a -> IO ()
2013-07-25 16:19:03	<--	bitonic (~user@77-56-49-28.dclient.hispeed.ch) has quit (Remote host closed the connection)
2013-07-25 16:19:22	-->	torkjak (~torkjak@gateway/tor-sasl/torkjak) has joined #haskell
2013-07-25 16:19:26	merijn	also known as forM_
2013-07-25 16:19:39	-->	Sculptor (~Sculptor@82.208.238.173) has joined #haskell
2013-07-25 16:19:42	-->	Wuzzy (~Wuzzy@p549FBB3D.dip0.t-ipconnect.de) has joined #haskell
2013-07-25 16:19:46	<--	MyrAchle (~MyrAchle@server56310.uk2net.com) has quit (Ping timeout: 268 seconds)
2013-07-25 16:19:58	mauke	:t maybe def print
2013-07-25 16:19:59	lambdabot	Show a => Maybe a -> IO ()
2013-07-25 16:20:01	merijn	(or "whenJust :: Monad m => (a -> m ()) -> Maybe a -> m ()")
2013-07-25 16:20:17	-->	MyrAchle (~MyrAchle@server56310.uk2net.com) has joined #haskell
2013-07-25 16:20:23	mauke	:t maybe def def
2013-07-25 16:20:23	Sculptor	yo
2013-07-25 16:20:24	lambdabot	Default b => Maybe a -> b
2013-07-25 16:20:34	<--	Kabaka (~Kabaka@botters/kabaka) has quit (Remote host closed the connection)
2013-07-25 16:21:07	-->	vlaeter (~vlaeter@149.62.176.186) has joined #haskell
2013-07-25 16:23:10	-->	Kabaka (~Kabaka@botters/kabaka) has joined #haskell
2013-07-25 16:23:24	-->	znaimon (~spthysis@c-68-55-207-121.hsd1.dc.comcast.net) has joined #haskell
2013-07-25 16:23:30	<--	applicative (~m@pool-71-182-234-215.pitbpa.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2013-07-25 16:23:36	-->	chunkstuntman (~stefan@63.117.70.130) has joined #haskell
2013-07-25 16:23:40	znaimon	`morning
2013-07-25 16:24:14	-->	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has joined #haskell
2013-07-25 16:24:18	<--	raichoo (~raichoo@mue-88-130-2-036.dsl.tropolys.de) has quit (Ping timeout: 246 seconds)
2013-07-25 16:24:36	-->	chatsiri_ (~chatsiri_@49.48.95.134) has joined #haskell
2013-07-25 16:25:20	adas	mauke: the type of maybe says :b -> (a -> b) -> Maybe a -> b. In your example i see 'b' is a monad? Am i correct?
2013-07-25 16:25:23	-->	applicative (~m@pool-71-182-234-215.pitbpa.fios.verizon.net) has joined #haskell
2013-07-25 16:25:46	mauke	huh?
2013-07-25 16:26:02	duikboot	Hi, can I call System.Cmd system with map? :  http://lpaste.net/91210 Sorry for this stupid question, but I am a beginner...
2013-07-25 16:26:03	mauke	which example? and why does that even matter?
2013-07-25 16:26:04	<--	Croms (~dv@92.109.224.112) has quit (Quit: Croms)
2013-07-25 16:26:38	applicative	hi znaimon
2013-07-25 16:26:49	adas	mauke: maybe (return ()) print
2013-07-25 16:26:58	<--	normanrichards (~normanric@74.61.92.158) has quit (Ping timeout: 246 seconds)
2013-07-25 16:27:09	applicative	it would be mapM_ duikboot but maybe more is needed
2013-07-25 16:27:10	<--	Cromulent (~Cromulent@81.106.27.252) has quit (Ping timeout: 268 seconds)
2013-07-25 16:27:20	mauke	adas: b can't be a monad as it has kind *
2013-07-25 16:27:23	applicative	map just makes a list of actions in  case like this; you want an action
2013-07-25 16:27:38	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-25 16:27:42	jophish_	Yo yo yo, people
2013-07-25 16:28:26	adas	but isn't return () of type IO ()?
2013-07-25 16:28:27	dgpratt	feeling conflicted
2013-07-25 16:28:41	mauke	adas: yes
2013-07-25 16:28:53	applicative	duikboot: if l is defined as in your module, main = mapM_ system l
2013-07-25 16:29:12	Saizan	adas: by "monad" we refer to the parametrized types that are instances of the Monad class (in the context of Haskell)
2013-07-25 16:29:30	applicative	duikboot if l is the string that comes from readFile, you will need to associate it with a list of strings, e.g. with unlines
2013-07-25 16:29:34	jevankovich	adas: IO is a monad. A monad takes a type to become a concrete type. IO () is a concrete type because () was given to monad
2013-07-25 16:29:40	dgpratt	I have this program where I am working with some data of type [[String]] but a more precise type of the data would be [(String, String, String, String)]
2013-07-25 16:30:00	dgpratt	the problem is that at some point I need to "transpose" the data
2013-07-25 16:30:06	Saizan	adas: if you have (foo :: IO ()) then foo is sometimes called a monadic action, or just action, or "value of monadic type"
2013-07-25 16:30:15	-->	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has joined #haskell
2013-07-25 16:30:19	adas	thanks for the clarification. i used some misplaced words.. hence the confusion.
2013-07-25 16:30:20	bscarlet	:t unzip4
2013-07-25 16:30:22	lambdabot	[(a, b, c, d)] -> ([a], [b], [c], [d])
2013-07-25 16:30:43	dgpratt	bscarlet, hmm, interesting
2013-07-25 16:30:45	-->	DrTeggy (~grust@closure.informatik.uni-tuebingen.de) has joined #haskell
2013-07-25 16:30:58	duikboot	applicative: Thanks a lot mapM_ works!
2013-07-25 16:31:14	applicative	duikboot: ah good
2013-07-25 16:31:42	adas	when i say maybe .. i saw 'b' and thought it can only be a concrete type and nothing else. So i was thinking that 'b' could be any primitive concrete type. Didn't occur to me that a value of type IO () is also concrete
2013-07-25 16:31:42	dgpratt	anyways, I can't decide if I should use the more precise type or the more convenient type and convert as necessary
2013-07-25 16:31:46	adas	*saw
2013-07-25 16:31:53	dgpratt	opinions welcome
2013-07-25 16:32:00	-->	cfricke (~cfricke@CPE00f1f3072bf9-CM001ceacce8e2.cpe.net.cable.rogers.com) has joined #haskell
2013-07-25 16:32:08	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-25 16:32:54	Saizan	adas: the type (IO ()) is a concrete type
2013-07-25 16:33:21	-->	niklasb (~codeslay0@p5B313132.dip0.t-ipconnect.de) has joined #haskell
2013-07-25 16:33:37	<--	isenmann (~isenmann@blackhole.science-computing.de) has quit (Ping timeout: 248 seconds)
2013-07-25 16:33:37	<--	fmardini (~fmardini@212.35.92.160) has quit (Ping timeout: 276 seconds)
2013-07-25 16:33:52	adas	yup i got that now )
2013-07-25 16:33:57	<--	znaimon (~spthysis@c-68-55-207-121.hsd1.dc.comcast.net) has quit (Ping timeout: 268 seconds)
2013-07-25 16:34:05	<--	applicative (~m@pool-71-182-234-215.pitbpa.fios.verizon.net) has quit (Quit: Lost terminal)
2013-07-25 16:34:15	bscarlet	dgpratt: I find tuples bigger than pairs get to be a pain if I use them too broadly - they're great in limited scopes. If I use them too broadly they're either confusing (for lack of an inherent explanation of what they mean - e.g. a declared type would be better) or I hit problems where they don't fit some standard api well - e.g. Map only works with pairs.
2013-07-25 16:34:23	-->	nooodl (~nooodl@91.179.137.83) has joined #haskell
2013-07-25 16:34:39	<--	Apocalisp (~textual@mobile-166-147-096-231.mycingular.net) has quit (Quit: Computer has gone to sleep.)
2013-07-25 16:34:55	<--	gdeest (~gael@ns357861.ovh.net) has quit (Quit: Changing server)
2013-07-25 16:35:00	-->	davesque (~davesque@208.186.142.130) has joined #haskell
2013-07-25 16:35:34	elliott	dgpratt: here is what I would do
2013-07-25 16:35:37	jevankovich	adas: Note that (a->b) is also a concrete type ( (->) has kind * -> * -> *) and could also be the 'b' in maybe
2013-07-25 16:35:41	elliott	dgpratt: data Foo a = Foo a a a
2013-07-25 16:35:45	elliott	dgpratt: [Foo String]
2013-07-25 16:35:57	elliott	dgpratt: you can then use Data.Traversable.sequenceA or such to get Foo [String]
2013-07-25 16:36:01	elliott	perhaps this will work for you
2013-07-25 16:36:22	davesque	hey, could someone help me with these type errors: http://lpaste.net/91211
2013-07-25 16:37:06	davesque	i've been screwing around with {-# LANGUAGE ExistentialQuantification #-} and {-# LANGUAGE RankNTypes #-}, but to no avail
2013-07-25 16:37:26	<--	federkasten (~federkast@ac227084.ppp.asahi-net.or.jp) has quit (Remote host closed the connection)
2013-07-25 16:37:33	mauke	davesque: remove the type signature
2013-07-25 16:37:52	-->	federkasten (~federkast@ac227084.ppp.asahi-net.or.jp) has joined #haskell
2013-07-25 16:37:52	davesque	mauke: right, when i do that, i get Parser a -> Parser a -> Parser a
2013-07-25 16:37:57	mauke	yep
2013-07-25 16:38:00	mauke	that's the correct type
2013-07-25 16:38:17	 *	hackagebot magma 0.2.0.0 - magma is an algebraic structure consisting a set together with an binary operation.  http://hackage.haskell.org/package/magma-0.2.0.0 (KatsutoshiItoh)
2013-07-25 16:38:36	davesque	mauke: how could i work towards having a Parser that returns either a result with type a or b?
2013-07-25 16:38:39	jevankovich	davesque: maybe if or had type Parser a -> Parser b -> Parser (Either a b). You'll have to use the Left and Right constructors inside the case
2013-07-25 16:38:51	mauke	davesque: Parser a -> Parser b -> Parser (Either a b)
2013-07-25 16:38:53	<--	sjl (~sjl@li136-50.members.linode.com) has left #haskell ("WeeChat 0.4.1")
2013-07-25 16:39:02	jevankovich	Either is defined as: data Either a b = Left a | Right b
2013-07-25 16:39:07	davesque	mauke: ahh, okay
2013-07-25 16:39:10	-->	osa1 (~omer@91.232.136.87) has joined #haskell
2013-07-25 16:39:38	davesque	jevankovich: right, i've seen it before.  i tried using it for this, but it seemed like it would make the code way more complicated.  guess there's no way to avoid that.
2013-07-25 16:40:30	jevankovich	davesque: It'll make it really complicated if you want to chain 'or's. It'll probably be easier to go with the single typed version
2013-07-25 16:41:02	merijn	I have "(a -> IO b) -> IO b" and "b -> s -> IO s and want to end up with "s -> IO s", any suggestions?
2013-07-25 16:41:17	davesque	jevankovich, mauke: i'll try experimenting with the two.  thanks!
2013-07-25 16:41:22	merijn	Basically, I want to get the second inside the "a -> IO b" bit
2013-07-25 16:41:44	<--	davesque (~davesque@208.186.142.130) has left #haskell
2013-07-25 16:42:02	<--	hsyl20 (~shenry@193.50.110.70) has quit (Quit: leaving)
2013-07-25 16:42:19	jevankovich	merijn: you could partially apply the second. I'm not sure if that would get what you want, though.
2013-07-25 16:42:25	-->	DaveCTurner (~DaveCTurn@host-92-22-139-1.as13285.net) has joined #haskell
2013-07-25 16:42:28	<--	smarter (~smarter@ubuntu/member/smarter) has quit (Read error: Connection reset by peer)
2013-07-25 16:42:33	merijn	jevankovich: How would I partially apply it?
2013-07-25 16:42:35	<--	federkasten (~federkast@ac227084.ppp.asahi-net.or.jp) has quit (Ping timeout: 268 seconds)
2013-07-25 16:42:46	<--	rfw (rfw@thor.rfw.name) has quit (Ping timeout: 256 seconds)
2013-07-25 16:42:51	<--	julmae (harblargh@140.255.127.199.client.static.strong-in14.as13926.net) has quit (Quit: ( www.nnscript.com :: NoNameScript 4.22 :: www.esnation.com ))
2013-07-25 16:43:07	jevankovich	foo x :: b -> s -> IO s
2013-07-25 16:43:12	mauke	\s -> f return >>= \b -> g b s
2013-07-25 16:43:23	-->	EvilPenguin (~EvilPengu@50.193.235.235) has joined #haskell
2013-07-25 16:43:25	jevankovich	just call foo with some b
2013-07-25 16:43:32	-->	smarter (~smarter@ubuntu/member/smarter) has joined #haskell
2013-07-25 16:43:41	Lethalman	:t \b s f -> do b <- mb; return f s
2013-07-25 16:43:42	lambdabot	    Not in scope: `mb'
2013-07-25 16:43:42	lambdabot	    Perhaps you meant one of these:
2013-07-25 16:43:42	lambdabot	      `b' (line 1), `b' (imported from Debug.SimpleReflect),
2013-07-25 16:43:46	Lethalman	:t \mb s f -> do b <- mb; return f s
2013-07-25 16:43:46	merijn	jevankovich: No, I want the b to be the b produce by "a -> IO b"
2013-07-25 16:43:47	lambdabot	(Monad m, Monad ((->) t1)) => m t -> t1 -> m b -> m b
2013-07-25 16:43:57	<--	MedDev (~MDev@68-112-203-118.dhcp.eucl.wi.charter.com) has quit (Ping timeout: 264 seconds)
2013-07-25 16:43:59	Lethalman	mh :P
2013-07-25 16:44:03	mauke	:t \f g s -> f return >>= \b -> g b s
2013-07-25 16:44:04	lambdabot	(Monad m, Monad m1) => ((a1 -> m1 a1) -> m a) -> (a -> t -> m b) -> t -> m b
2013-07-25 16:44:18	<--	agr (~agr@186.211.65.27) has quit (Ping timeout: 256 seconds)
2013-07-25 16:44:24	-->	bgilbert (~textual@64.20.30.66) has joined #haskell
2013-07-25 16:45:10	jevankovich	If you're inside a do block you might be able to bind the result of the first to some 'variable' and us it on the second
2013-07-25 16:45:27	mauke	:t \f g s -> newEmptyMVar >>= \v -> f (putMVar v) >> takeMVar v >>= \b -> g b s
2013-07-25 16:45:28	lambdabot	Not in scope: `newEmptyMVar'
2013-07-25 16:45:28	lambdabot	    Not in scope: `putMVar'
2013-07-25 16:45:28	lambdabot	    Perhaps you meant `putChar' (imported from Prelude)
2013-07-25 16:45:29	dgpratt	elliott, thanks for the idea, I'll try that and see how it fits
2013-07-25 16:45:33	merijn	I though I'd have to make use of the ContT transformer to turn the first into "ContT a IO b", but then I'm not sure how to stuff the "b -> s -> IO s" into the continuation
2013-07-25 16:45:48	mauke	merijn: if you can't unify a/b, you could just use a variable
2013-07-25 16:45:51	-->	kevinqcs (~turing@117.62.228.209) has joined #haskell
2013-07-25 16:45:53	<--	kevinqcs (~turing@117.62.228.209) has quit (Max SendQ exceeded)
2013-07-25 16:46:49	<--	anRch (~markmilli@ip-64-134-242-96.public.wayport.net) has quit (Quit: anRch)
2013-07-25 16:46:54	-->	raichoo (~raichoo@e182221028.adsl.alicedsl.de) has joined #haskell
2013-07-25 16:46:57	<--	DaveCTurner (~DaveCTurn@host-92-22-139-1.as13285.net) has quit (Ping timeout: 264 seconds)
2013-07-25 16:47:02	-->	kevinqcs (~turing@117.62.228.209) has joined #haskell
2013-07-25 16:47:08	<--	osa1 (~omer@91.232.136.87) has quit (Ping timeout: 256 seconds)
2013-07-25 16:47:13	<--	kevinqcs (~turing@117.62.228.209) has quit (Max SendQ exceeded)
2013-07-25 16:47:15	<--	christianpbrink (~christian@cpe-74-73-159-66.nyc.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2013-07-25 16:47:26	<--	Franciman (~quassel@host42-22-dynamic.13-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2013-07-25 16:48:19	-->	kevinqcs (~turing@117.62.228.209) has joined #haskell
2013-07-25 16:48:27	<--	kevinqcs (~turing@117.62.228.209) has quit (Max SendQ exceeded)
2013-07-25 16:48:49	-->	juliohm (~julio@unaffiliated/juliohm) has joined #haskell
2013-07-25 16:49:22	<--	nooodl (~nooodl@91.179.137.83) has quit (Ping timeout: 268 seconds)
2013-07-25 16:49:26	dmwit_	merijn: Supposing you have "foo :: A -> IO B", "bar :: (A -> IO B) -> IO B", and "baz :: B -> S -> IO S", you can write "bar foo >>= \b -> return (baz b) :: IO (S -> IO S)".
2013-07-25 16:49:30	-->	DaveCTurner (~DaveCTurn@host-92-22-139-1.as13285.net) has joined #haskell
2013-07-25 16:49:32	-->	kevinqcs (~turing@117.62.228.209) has joined #haskell
2013-07-25 16:49:34	--	dmwit_ is now known as dmwit
2013-07-25 16:49:38	<--	kevinqcs (~turing@117.62.228.209) has quit (Max SendQ exceeded)
2013-07-25 16:49:46	dmwit	Have you got a "foo :: A -> IO B"? If not, you may be in a bit of trouble.
2013-07-25 16:50:07	-->	brandonw (~brandonw@24-181-232-41.dhcp.oxfr.ma.charter.com) has joined #haskell
2013-07-25 16:50:22	-->	kevinqcs (~turing@117.62.228.209) has joined #haskell
2013-07-25 16:50:28	<--	kevinqcs (~turing@117.62.228.209) has quit (Max SendQ exceeded)
2013-07-25 16:51:03	-->	kevinqcs (~turing@117.62.228.209) has joined #haskell
2013-07-25 16:51:09	<--	WhereIsMySpoon_ (~james@teamfrag.net) has quit (Quit: No Ping reply in 180 seconds.)
2013-07-25 16:51:10	<--	kevinqcs (~turing@117.62.228.209) has quit (Max SendQ exceeded)
2013-07-25 16:51:16	-->	WhereIsMySpoon (~james@teamfrag.net) has joined #haskell
2013-07-25 16:51:27	-->	kevinqcs (~turing@117.62.228.209) has joined #haskell
2013-07-25 16:51:30	merijn	Actually, I think what I want isn't possible
2013-07-25 16:51:38	-->	vijaykiran (~user@88.128.80.6) has joined #haskell
2013-07-25 16:51:55	-->	breck7 (~breck7@207.194.125.34) has joined #haskell
2013-07-25 16:51:55	 *	djahandarie wonders why dmwit has switched to upper-case bound variables
2013-07-25 16:52:07	dmwit	Because that way they are not bound variables.
2013-07-25 16:52:11	dmwit	They are concrete types.
2013-07-25 16:52:17	bscarlet	merijn: It does look kind of weird to me.
2013-07-25 16:52:46	dmwit	That is, when they're variables it looks like more things can unify; when they're concrete types, it's more obvious that things aren't intended to unify.
2013-07-25 16:53:13	merijn	The things is that I want to basically replace every invocation of the "a -> IO b" to be changed into "a -> IO s" using the "b -> s -> IO s" type, but the more I think about it, the more it seems like it might not make sense
2013-07-25 16:53:17	-->	znaimon (~spthysis@c-68-55-207-121.hsd1.dc.comcast.net) has joined #haskell
2013-07-25 16:53:50	-->	Ankhers (~user@gateway/tor-sasl/ankhers) has joined #haskell
2013-07-25 16:53:53	-->	htau (~chatzilla@76.237.226.99) has joined #haskell
2013-07-25 16:54:03	merijn	Basically, if baz was "B -> (S -> IO S) -> IO s" I could use >>= from ContT to do that
2013-07-25 16:54:23	bscarlet	merijn: the (a -> IO b) -> IO b is a continuation - a thing that provides an a. The b -> s -> IO s wants a b.
2013-07-25 16:54:27	merijn	Like I said, I'm not sure what I want makes sense
2013-07-25 16:54:41	<--	bashyal (~bashyal@ec2-54-245-100-167.us-west-2.compute.amazonaws.com) has quit (Quit: bashyal)
2013-07-25 16:54:45	<--	amosr (~amos@28.30.233.220.static.exetel.com.au) has quit (Quit: amosr)
2013-07-25 16:56:04	znaimon	I'm getting a cabal install error: Module `Data.Monoid' does not export `(<>)' regarding hsp-0.9.2 on CentOS6
2013-07-25 16:56:08	znaimon	Anyone have any insight?
2013-07-25 16:56:09	<--	nilsi (~nilsi@124.79.136.212) has quit (Remote host closed the connection)
2013-07-25 16:56:14	<--	kstuart (~Thunderbi@host81-129-118-94.range81-129.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2013-07-25 16:56:27	dmwit	upgrade GHC
2013-07-25 16:56:43	dmwit	Also, complain to the package maintainer that their version restriction on "base" is too lax.
2013-07-25 16:56:44	-->	sferry (~samuel@192.119.225.50) has joined #haskell
2013-07-25 16:56:44	<--	sferry (~samuel@192.119.225.50) has quit (Changing host)
2013-07-25 16:56:44	-->	sferry (~samuel@atheme/member/samferry) has joined #haskell
2013-07-25 16:57:00	dmwit	Alternate workaround to upgrading GHC: open up the source and replace <> with mappend everywhere.
2013-07-25 16:57:34	znaimon	I can't find any udated versions of GHC that are compatible with Centos 6 :/
2013-07-25 16:57:46	-->	agjacome (~agjacome@77.226.151.243) has joined #haskell
2013-07-25 16:58:02	mauke	upgrade centos 6
2013-07-25 16:58:19	-->	conal (~textual@173-166-248-200-stockton.hfc.comcastbusiness.net) has joined #haskell
2013-07-25 16:58:29	znaimon	that's not an option :(
2013-07-25 16:58:40	int-e	build your own ghc
2013-07-25 16:58:43	<--	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-07-25 16:58:46	-->	Onielfa (3e0efc52@gateway/web/freenode/ip.62.14.252.82) has joined #haskell
2013-07-25 16:58:53	dmwit	I feel that one of my two proposed options has been ignored here.
2013-07-25 16:59:11	int-e	yes :)
2013-07-25 16:59:22	Clint	but which one
2013-07-25 16:59:59	-->	BeardedCoder (~user@of1-nat2.aus1.rackspace.com) has joined #haskell
2013-07-25 17:00:28	-->	bitonic (~user@cust.static.81-63-183-2.swisscomdata.ch) has joined #haskell
2013-07-25 17:00:37	danharaj	how do I tell cabal to ignore Safe Haskell?
2013-07-25 17:00:48	-->	skypers (~skp@88-190-221-99.rev.dedibox.fr) has joined #haskell
2013-07-25 17:00:59	-->	jfischoff (~jfischoff@66-140-190-154.lightspeed.sntcca.sbcglobal.net) has joined #haskell
2013-07-25 17:01:05	znaimon	dmwit: your second option would be fantastic if I had any idea what I was doing haha
2013-07-25 17:01:08	-->	tac (~tac-tics@cip-248.trustwave.com) has joined #haskell
2013-07-25 17:01:30	<--	jfischoff (~jfischoff@66-140-190-154.lightspeed.sntcca.sbcglobal.net) has quit (Client Quit)
2013-07-25 17:01:33	<--	DaveCTurner (~DaveCTurn@host-92-22-139-1.as13285.net) has quit (Read error: Connection reset by peer)
2013-07-25 17:02:02	<--	Onielfa (3e0efc52@gateway/web/freenode/ip.62.14.252.82) has quit (Client Quit)
2013-07-25 17:02:08	-->	DaveCTurner (~DaveCTurn@host-92-22-139-1.as13285.net) has joined #haskell
2013-07-25 17:02:19	<--	agjacome (~agjacome@77.226.151.243) has quit (Ping timeout: 268 seconds)
2013-07-25 17:02:54	dmwit	sed -i 's/(<>)/mappend/;s/<>/`mappend`/' **/*.{l,}hs
2013-07-25 17:02:57	<--	adas (~adas@122.164.69.110) has quit (Quit: leaving)
2013-07-25 17:03:02	dmwit	znaimon: ^^
2013-07-25 17:03:14	dmwit	100% untested, read the man pages, beware troll suggestions, etc.
2013-07-25 17:03:14	-->	Onielfa (3e0efc52@gateway/web/freenode/ip.62.14.252.82) has joined #haskell
2013-07-25 17:03:30	-->	tharper (~tomh@unaffiliated/sioraiocht) has joined #haskell
2013-07-25 17:03:39	znaimon	dmwit: what dir would I be running this from?  or does it matter?
2013-07-25 17:03:42	dmwit	might need some 'g's at the end of those 's's.
2013-07-25 17:03:46	dmwit	Run it from the source directory.
2013-07-25 17:03:52	dmwit	If you don't have one, you can get one with cabal unpacke.
2013-07-25 17:03:57	dmwit	cabal unpack, I mean
2013-07-25 17:04:30	dmwit	Also, if you have to ask whether it matters, you *definitely* need to read some man pages first.
2013-07-25 17:04:52	<--	mbuf (user@nat/redhat/x-wxszzvtaseqibcxj) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2013-07-25 17:04:53	int-e	dmwit: **/ - what's your shell?
2013-07-25 17:04:55	znaimon	probably.  alright.  i'll go do my reading now.
2013-07-25 17:04:59	dmwit	int-e: zsh
2013-07-25 17:05:01	<--	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has quit (Remote host closed the connection)
2013-07-25 17:05:07	dmwit	Why, does bash not do that?
2013-07-25 17:05:08	-->	joe9 (~user@70.179.153.227) has joined #haskell
2013-07-25 17:05:25	int-e	no. ** has the same meaning as *.
2013-07-25 17:05:33	dmwit	bummer
2013-07-25 17:06:00	mauke	find . -type f -exec sed ... {} +
2013-07-25 17:06:09	<--	ethercrow (~ethercrow@81.1.213.1) has quit (Ping timeout: 248 seconds)
2013-07-25 17:06:35	int-e	find . -name \*.lhs -o -name \*.hs -print0 | xargs -0 sed -i 's/(<>)/mappend/;s/<>/`mappend`/'
2013-07-25 17:06:39	 *	int-e shrugs
2013-07-25 17:06:45	<--	DaveCTurner (~DaveCTurn@host-92-22-139-1.as13285.net) has quit (Ping timeout: 264 seconds)
2013-07-25 17:07:04	dmwit	looks convenient
2013-07-25 17:07:41	-->	Apocalisp (~textual@mobile-166-147-096-231.mycingular.net) has joined #haskell
2013-07-25 17:07:54	int-e	ok, bash has an option to expand ** like that
2013-07-25 17:07:54	dmwit	Why use xargs over -exec?
2013-07-25 17:08:40	-->	jdnavarro (~danny@2.Red-88-1-184.dynamicIP.rima-tde.net) has joined #haskell
2013-07-25 17:09:08	int-e	(bash: shopt -s globstar)
2013-07-25 17:09:22	dmwit	Sounds like the name of a great game.
2013-07-25 17:09:24	int-e	dmwit: fewer execs. just a habit really
2013-07-25 17:09:41	mauke	it's not fewer execs
2013-07-25 17:10:04	<--	Lethalman (~luca@net77-43-20-100.mclink.it) has quit (Ping timeout: 260 seconds)
2013-07-25 17:10:48	-->	hwiersma (~hwiersma@205.250.5.108) has joined #haskell
2013-07-25 17:11:05	-->	p\mage (~travis@71.22.67.48) has joined #haskell
2013-07-25 17:11:07	-->	S11001001 (~sirian@c-50-169-36-118.hsd1.ma.comcast.net) has joined #haskell
2013-07-25 17:11:08	dmwit	-P looks interesting, though
2013-07-25 17:11:20	<--	S11001001 (~sirian@c-50-169-36-118.hsd1.ma.comcast.net) has quit (Changing host)
2013-07-25 17:11:20	-->	S11001001 (~sirian@fsf/member/S11001001) has joined #haskell
2013-07-25 17:11:23	dmwit	I bet find -exec can't do that. =)
2013-07-25 17:11:28	-->	Lethalman (~luca@net77-43-20-100.mclink.it) has joined #haskell
2013-07-25 17:11:35	int-e	dmwit: thanks. I can't believe I didn't know the + variant of -exec.
2013-07-25 17:11:48	-->	fizbin2 (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 17:12:05	-->	klrr (~klrr@88.129.151.72) has joined #haskell
2013-07-25 17:12:14	<--	Velpoman (~Velpoman@nat/yahoo/x-kwldcsvylsgrcbof) has quit (Ping timeout: 240 seconds)
2013-07-25 17:12:21	 *	mux is also partial to using xargs rather than the cumbersome -exec
2013-07-25 17:12:23	<--	fizbin (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Ping timeout: 240 seconds)
2013-07-25 17:12:37	dmwit	cumbersome?
2013-07-25 17:12:58	mux	having to terminate commands with \; or +
2013-07-25 17:13:16	-->	leroux (~leroux@unaffiliated/leroux) has joined #haskell
2013-07-25 17:13:36	mux	also with xargs you can limit to a specified number of parameters with -n, which sometimes comes in handy
2013-07-25 17:13:46	dmwit	> length "\;" < length "-print0 | xargs -0"
2013-07-25 17:13:46	lambdabot	  <hint>:1:10:
2013-07-25 17:13:47	lambdabot	     lexical error in string/character literal at character ';'
2013-07-25 17:13:49	-->	nilsi (~nilsi@124.79.136.212) has joined #haskell
2013-07-25 17:13:54	dmwit	> length "\\;" < length "-print0 | xargs -0"
2013-07-25 17:13:55	lambdabot	  True
2013-07-25 17:13:55	elliott	> (length " | xargs", length "-exec +")
2013-07-25 17:13:56	lambdabot	  (8,7)
2013-07-25 17:14:11	dmwit	Oh yeah, forgot the -exec part.
2013-07-25 17:14:13	-->	kobain (~kobian@unaffiliated/kobain) has joined #haskell
2013-07-25 17:14:13	-->	agumonkey (~agu@179.217.72.86.rev.sfr.net) has joined #haskell
2013-07-25 17:14:19	mux	it's also more UNIXy
2013-07-25 17:14:24	<--	no7hing (~anonymous@62.217.45.66) has quit (Quit: no7hing)
2013-07-25 17:14:26	dmwit	mux: Okay, yeah. -n looks nice (and as observed before, -P too).
2013-07-25 17:14:40	dmwit	"more UNIXy" does not hold a lot of weight with me.
2013-07-25 17:14:43	-->	elediaz (~elediaz@90.173.199.105) has joined #haskell
2013-07-25 17:14:44	mux	I'm not trying to argue over one vs the other though, they are mostly equivalent, and this is mostly about taste, I guess.
2013-07-25 17:14:51	mux	it does with me ;-)
2013-07-25 17:14:52	dmwit	We have browsers and stuff these days. UNIX is dead.
2013-07-25 17:15:16	tac	dmwit: Plan10: Everything's a webpage.
2013-07-25 17:15:16	int-e	yet we're discussing shell commands
2013-07-25 17:15:37	<--	p\mage (~travis@71.22.67.48) has quit (Ping timeout: 246 seconds)
2013-07-25 17:16:13	mux	I also love FreeBSD's -o flag to xargs, which tells it to reopen stdin
2013-07-25 17:16:17	b2coutts	I'm a fan of things being UNIX-y when it's more efficient than the non-UNIX-y alternative
2013-07-25 17:16:24	mux	so you can find ... | xargs -o <interactive program>
2013-07-25 17:16:25	b2coutts	which is often in my experience
2013-07-25 17:16:52	mux	that is not standard though. I added it to FreeBSD's xarg a long time ago
2013-07-25 17:16:59	mux	I think Linux has some equivalent
2013-07-25 17:17:13	-->	phyrex1an (~phyrex1an@cm-84.211.97.217.getinternet.no) has joined #haskell
2013-07-25 17:17:23	<--	Lethalman (~luca@net77-43-20-100.mclink.it) has quit (Ping timeout: 240 seconds)
2013-07-25 17:18:06	-->	agr (~agr@186.231.79.107) has joined #haskell
2013-07-25 17:18:58	int-e	mux: no, the manpage suggests something like  xargs sh -c 'emacs "$@" < /dev/tty' to achieve that effect
2013-07-25 17:19:07	dmwit	int-e: Okay, my claim was too strong.
2013-07-25 17:19:12	mux	ugh, I'll blame Linux
2013-07-25 17:19:19	-->	alszar (alszar@nat/rackspace/x-xluigtnojwwgaefl) has joined #haskell
2013-07-25 17:20:01	<--	znaimon (~spthysis@c-68-55-207-121.hsd1.dc.comcast.net) has quit (Remote host closed the connection)
2013-07-25 17:20:04	-->	nooodl (~nooodl@91.179.137.83) has joined #haskell
2013-07-25 17:20:11	-->	jfischoff (~jfischoff@66-140-190-154.lightspeed.sntcca.sbcglobal.net) has joined #haskell
2013-07-25 17:20:52	<--	threesome (~threesome@customer-79-127-150-148.net.angelnet.cz) has quit (Read error: Operation timed out)
2013-07-25 17:21:50	<--	Alice3 (~Alice@cpc18-grim14-2-0-cust478.12-3.cable.virginmedia.com) has quit
2013-07-25 17:22:04	<--	skchrko (~sk@109.110.93.94) has quit (Quit: Leaving)
2013-07-25 17:22:56	<--	Sonderblade (~boo@130.144.241.83.in-addr.dgcsystems.net) has quit (Quit: Lämnar)
2013-07-25 17:23:33	-->	k0001 (~k0001@host135.186-125-145.telecom.net.ar) has joined #haskell
2013-07-25 17:23:40	<--	vijaykiran (~user@88.128.80.6) has quit (Ping timeout: 276 seconds)
2013-07-25 17:25:14	hpaste	merijn pasted “Suggestions for a nicer generalisation?” at http://lpaste.net/91212
2013-07-25 17:25:27	merijn	nAny suggestions how to make that less ugly?
2013-07-25 17:25:50	merijn	Specifically when before/after/work are less trivial
2013-07-25 17:25:59	<--	agr (~agr@186.231.79.107) has quit (Quit: agr)
2013-07-25 17:27:08	-->	loteriety (~loteriety@rrcs-108-178-120-144.sw.biz.rr.com) has joined #haskell
2013-07-25 17:27:13	<--	jfischoff (~jfischoff@66-140-190-154.lightspeed.sntcca.sbcglobal.net) has quit (Quit: jfischoff)
2013-07-25 17:27:33	-->	spektroskop (~alex@cm-84.208.195.71.getinternet.no) has joined #haskell
2013-07-25 17:27:50	<--	flori (flori@irc.ping.de) has quit (Read error: Operation timed out)
2013-07-25 17:27:59	zvrba	is there a HO function akin to common lisp's maplist? it's like a fold, except that the folding function receives the rest of the list starting from the current element, except just the element
2013-07-25 17:28:04	-->	flori (flori@irc.ping.de) has joined #haskell
2013-07-25 17:28:16	-->	Taneb (~nathan@host-92-30-148-233.as13285.net) has joined #haskell
2013-07-25 17:28:27	zvrba	I have a list of logical pairs, and I find myself manually writing recursion over v1:v2:vs
2013-07-25 17:28:41	zvrba	sometimes removing just v1, sometimes both v1 and v2
2013-07-25 17:28:51	-->	s_s_l (~s_s_l@173-164-85-85-Oregon.hfc.comcastbusiness.net) has joined #haskell
2013-07-25 17:28:58	zvrba	hmmm, guess maplist wouldn't help there.
2013-07-25 17:29:00	b2coutts	zvrba: I'm not sure exactly what function you're looking for
2013-07-25 17:29:01	-->	setmeaway2 (oosool3@119.201.52.138) has joined #haskell
2013-07-25 17:29:21	-->	hape03 (6debe6ba@gateway/web/freenode/ip.109.235.230.186) has joined #haskell
2013-07-25 17:29:30	Rembane	zvrba: Do they reside in a tuple or just in a "flat" list?
2013-07-25 17:29:37	zvrba	flat list
2013-07-25 17:29:58	zvrba	it's a list of boundary vertices of a polygon
2013-07-25 17:30:18	zvrba	then the list is filtered by some criterion
2013-07-25 17:30:35	-->	tobyo1 (~tobyo@firstchoice-rb-gw.select.net) has joined #haskell
2013-07-25 17:30:37	b2coutts	and "pairs" just mean adjacent vertices?
2013-07-25 17:30:38	zvrba	and the remaining verices processed pairwise
2013-07-25 17:30:41	zvrba	yes
2013-07-25 17:30:52	-->	mkscrg (~mkscrg@216.38.142.34) has joined #haskell
2013-07-25 17:30:57	<--	mirsal (~mirsal@videolan/developer/Mirsal) has quit (Ping timeout: 245 seconds)
2013-07-25 17:31:10	zvrba	I could transform [v1,v2,v3..] to [(v1,v2),(v2,v3),..] but it seems inelegant
2013-07-25 17:31:15	<--	maximveksler (~maximveks@46.19.81.34) has quit (Read error: Connection reset by peer)
2013-07-25 17:31:20	<--	idnar (~idnar@unaffiliated/idnar) has quit (Read error: Connection reset by peer)
2013-07-25 17:31:27	-->	idnar (~idnar@unaffiliated/idnar) has joined #haskell
2013-07-25 17:31:35	zvrba	indeed, zipWith (,) v (tail v) :-)
2013-07-25 17:31:37	b2coutts	zvrba: how exactly are they processed? seems to me like you could just use a regular fold
2013-07-25 17:31:39	<--	averell_ (~averell@2a00:1c18:401:c00::803:11) has quit (Ping timeout: 245 seconds)
2013-07-25 17:31:56	<--	s_s_l (~s_s_l@173-164-85-85-Oregon.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2013-07-25 17:32:09	zvrba	b2coutts: well, each v_i is a pair of ints
2013-07-25 17:32:12	mux	zipWith (,) == zip
2013-07-25 17:32:19	zvrba	oh :)
2013-07-25 17:32:26	-->	averell (~averell@2a00:1c18:401:c00::803:11) has joined #haskell
2013-07-25 17:32:26	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2013-07-25 17:32:28	<--	duikboot (~ad@s3eea3de7.adsl.online.nl) has quit (Quit: Leaving)
2013-07-25 17:32:31	<--	setmeaway (~setmeaway@119.201.52.138) has quit (Read error: Connection reset by peer)
2013-07-25 17:32:38	<--	Rarrikins (~Rarrikins@unaffiliated/rarrikins) has quit (Ping timeout: 256 seconds)
2013-07-25 17:32:46	zvrba	b2coutts: so, v1:v2:v2... if v1.x == v2.x, both v1 and v2 are removed. otherwise, only v1 is removed.
2013-07-25 17:32:57	<--	djcoin (~djcoin@ip-114.net-89-2-70.rev.numericable.fr) has quit (Quit: WeeChat 0.4.0)
2013-07-25 17:32:58	zvrba	(pardon the obvious shortcut there :))
2013-07-25 17:33:03	b2coutts	zvrba: ah, so you just want to remove duplicate adjacent vertices
2013-07-25 17:33:19	<--	t7 (~chatzilla@chaucer.kent.ac.uk) has quit (Quit: ChatZilla 0.9.90.1 [Firefox 22.0/20130618035212])
2013-07-25 17:33:23	zvrba	b2coutts: well, no, I want to join together in a tuple adjacent vertices with the same x- or y-component
2013-07-25 17:33:34	-->	mirsal (~mirsal@2001:470:69e8:1::1) has joined #haskell
2013-07-25 17:33:42	<--	nilsi (~nilsi@124.79.136.212) has quit (Ping timeout: 264 seconds)
2013-07-25 17:33:48	zvrba	so [(1,2),(1,10),(1,17),(3,10)] -> [((1,2),(1,10))]
2013-07-25 17:34:12	<--	Ue (~Ue@unaffiliated/ue) has quit (Quit: Bye!)
2013-07-25 17:34:38	-->	Velpoman (~Velpoman@nat/yahoo/x-dsctopxoxeokxcnt) has joined #haskell
2013-07-25 17:34:41	zvrba	so [(1,2),(1,10),(1,17),(1,19),(3,10)] -> [((1,2),(1,10)), ((1,17),(1,19)]
2013-07-25 17:34:44	hape03	@type zip
2013-07-25 17:34:44	lambdabot	[a] -> [b] -> [(a, b)]
2013-07-25 17:35:05	hape03	@type (zipWith (,))
2013-07-25 17:35:06	lambdabot	[a] -> [b] -> [(a, b)]
2013-07-25 17:35:08	hape03	yep
2013-07-25 17:35:17	<--	petapetapeta (~petapetap@6164198-cl69.boa.fiberby.dk) has quit (Read error: Operation timed out)
2013-07-25 17:35:17	zvrba	b2coutts: ok I guess it's a case where recursion has to be manually spelled-out :)
2013-07-25 17:35:24	-->	maximveksler (~maximveks@bzq-82-80-132-79.static.bezeqint.net) has joined #haskell
2013-07-25 17:35:28	zvrba	(not that I mind)
2013-07-25 17:35:56	--	anildigital_away is now known as anildigital
2013-07-25 17:36:02	b2coutts	zvrba: yeah, I mean what you need to do seems complex enough to deserve its own function
2013-07-25 17:37:04	b2coutts	alternatively you could probably use foldr, where the function checks that its second argument has length at least 2, and if it does, it sees if the first arg and first two points of the second arg form a line
2013-07-25 17:37:13	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-25 17:37:16	mr-	zvrba: how about ziping the sequence with itself, once shifted, and filtering that one?
2013-07-25 17:37:40	b2coutts	but this is probably worse than just writing a separate function and using explicit recursion, even if the code is shorter
2013-07-25 17:37:41	zvrba	yeah,that could be another way
2013-07-25 17:37:52	zvrba	mr-: but I think explicit recursion is less obscure in this case.
2013-07-25 17:37:56	-->	Lethalman (~luca@net77-43-20-100.mclink.it) has joined #haskell
2013-07-25 17:38:05	<--	Lethalman (~luca@net77-43-20-100.mclink.it) has quit (Remote host closed the connection)
2013-07-25 17:38:06	zvrba	more "declarative" if you want
2013-07-25 17:38:19	-->	Lethalman (~luca@net77-43-20-100.mclink.it) has joined #haskell
2013-07-25 17:38:27	mr-	I don't think so ;-)
2013-07-25 17:38:38	zvrba	http://pastie.org/8174737
2013-07-25 17:39:08	-->	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 17:39:14	<--	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-07-25 17:39:31	zvrba	p is fst or snd. I have to run it on both components.
2013-07-25 17:39:50	<--	Mortomes_ (~Moretomes@unaffiliated/mortomes) has quit (Ping timeout: 256 seconds)
2013-07-25 17:41:09	mr-	Oh.. my solution does not quite do what you want
2013-07-25 17:41:17	-->	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has joined #haskell
2013-07-25 17:41:40	mr-	> let l = [(1,2),(1,10),(1,17),(1,19),(3,10)] in filter (\((a,b),(c,d)) -> a == c || b == d) $ zip l (tail l)
2013-07-25 17:41:41	lambdabot	  [((1,2),(1,10)),((1,10),(1,17)),((1,17),(1,19))]
2013-07-25 17:41:44	<--	sopvop (~lonokhov@213.170.88.43) has quit (Quit: Leaving.)
2013-07-25 17:42:20	zvrba	nope, not what I want :-)
2013-07-25 17:43:04	-->	mhooge (~Matt@67.131.102.78) has joined #haskell
2013-07-25 17:43:16	<--	zzing (~textual@198-91-210-150.cpe.distributel.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2013-07-25 17:43:19	<--	brianloveswords (~brianlove@li124-154.members.linode.com) has quit (Excess Flood)
2013-07-25 17:44:18	-->	alanz (~alanz@105-236-223-12.access.mtnbusiness.co.za) has joined #haskell
2013-07-25 17:45:12	<--	path[l] (~vsi@c-67-188-10-68.hsd1.ca.comcast.net) has quit (Quit: path[l])
2013-07-25 17:45:44	-->	brianloveswords (~brianlove@li124-154.members.linode.com) has joined #haskell
2013-07-25 17:46:00	mr-	too bad..
2013-07-25 17:46:29	-->	shoret (~user@66.11.220.78) has joined #haskell
2013-07-25 17:46:59	-->	tertl3-laptop (~tertl3-la@108-85-16-151.lightspeed.gnvlsc.sbcglobal.net) has joined #haskell
2013-07-25 17:49:05	<--	DrTeggy (~grust@closure.informatik.uni-tuebingen.de) has quit (Quit: DrTeggy)
2013-07-25 17:49:17	merijn	On a scale from one to very, how evil am I? "loop before after work x = bracket before after (work x) `catch` loop before after work"
2013-07-25 17:49:23	<--	ustunozgur (~ustunozgu@139.179.103.67) has quit (Remote host closed the connection)
2013-07-25 17:50:11	elliott	four
2013-07-25 17:50:49	-->	m_ke (~m_ke@cpe-108-182-20-11.nyc.res.rr.com) has joined #haskell
2013-07-25 17:50:56	<--	m_ke (~m_ke@cpe-108-182-20-11.nyc.res.rr.com) has quit (Client Quit)
2013-07-25 17:51:10	klrr	is the author of Helm here on irc
2013-07-25 17:51:11	klrr	??
2013-07-25 17:51:43	<--	hape03 (6debe6ba@gateway/web/freenode/ip.109.235.230.186) has quit (Quit: Page closed)
2013-07-25 17:52:11	-->	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has joined #haskell
2013-07-25 17:52:16	<--	vishesh (~vishesh@103.26.218.147) has quit (Quit: WeeChat 0.4.1)
2013-07-25 17:53:14	-->	tiffany (~kawaii@fl-76-5-40-101.dhcp.embarqhsd.net) has joined #haskell
2013-07-25 17:53:50	-->	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has joined #haskell
2013-07-25 17:54:09	-->	t2ahc (~t2ahc@bridgeport.uchicago.edu) has joined #haskell
2013-07-25 17:54:19	-->	quchen (~quchen@p54AA3FE6.dip0.t-ipconnect.de) has joined #haskell
2013-07-25 17:54:23	<--	jjohnsson (~jjohnsson@host-95-195-140-188.mobileonline.telia.com) has quit (Ping timeout: 260 seconds)
2013-07-25 17:54:28	<--	SyntaxNinja (~ijones@c-76-105-176-7.hsd1.or.comcast.net) has quit (Quit: Leaving.)
2013-07-25 17:54:37	-->	hwiersma2 (~hwiersma@205.250.5.108) has joined #haskell
2013-07-25 17:54:54	<--	hwiersma (~hwiersma@205.250.5.108) has quit (Ping timeout: 240 seconds)
2013-07-25 17:54:57	-->	Rogach (uid6398@gateway/web/irccloud.com/x-ksfrhwhprpigodoa) has joined #haskell
2013-07-25 17:54:59	-->	nbouscal (~nbouscal@c-67-168-113-48.hsd1.wa.comcast.net) has joined #haskell
2013-07-25 17:55:58	--	zz_gpampara is now known as gpampara
2013-07-25 17:55:58	-->	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has joined #haskell
2013-07-25 17:56:00	klrr	http://lpaste.net/91213 anyone know what "setup: The pkg-config package cairo-pdf is required but it could not be found." mean and what i should do? i tried do "cabal install cairo-pdf" but there was no package called that
2013-07-25 17:56:20	dcoutts	klrr: the hint is that it's a pkg-config package
2013-07-25 17:56:33	dcoutts	pkg-config is a program and a system for managing C libs
2013-07-25 17:56:48	int-e	klrr: so you need pkg-config and the development package for cairo-pdf.
2013-07-25 17:56:53	dcoutts	what it really indicates is that you don't have the devel package for cairo installed
2013-07-25 17:56:58	int-e	(which is a C library_
2013-07-25 17:57:06	<--	JaRoel|4d (~jaroel|4d@lukkien-test11.customer.bit.nl) has quit (Ping timeout: 264 seconds)
2013-07-25 17:57:06	Rogach	Hi! Is there some way to reuse argument definitions when using cmdArgs? I tried to do it in this snippet (reuse happens in `common` method), but failed.
2013-07-25 17:57:09	dcoutts	you almost certainly have pkg-config, it's the C lib you're missing
2013-07-25 17:57:12	int-e	(right, it's probably just cairo)
2013-07-25 17:57:15	-->	jjohnsson (~jjohnsson@host-95-195-158-82.mobileonline.telia.com) has joined #haskell
2013-07-25 17:57:17	-->	Noldorin (~noldorin@unaffiliated/noldorin) has joined #haskell
2013-07-25 17:57:30	<--	edsko (~edsko@p57B8BD02.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2013-07-25 17:57:40	jevankovich	so if he's running something debian based he should run 'sudo apt-get install libcairo-dev' or something like that. I think
2013-07-25 17:57:42	Rogach	Only the first mode gets the arguments configured, the second one ignores the names/help for arguments.
2013-07-25 17:57:44	-->	Mortomes (~Moretomes@unaffiliated/mortomes) has joined #haskell
2013-07-25 17:59:30	klrr	int-e: what's pkg-config?
2013-07-25 17:59:30	<--	fizbin2 (~Adium@pool-173-61-156-106.cmdnnj.east.verizon.net) has quit (Read error: Connection reset by peer)
2013-07-25 17:59:34	<--	gspr (~gspr@2a00:1a28:1251:178:73:210:141:0) has quit (Ping timeout: 245 seconds)
2013-07-25 17:59:49	klrr	it's not on hackage
2013-07-25 18:00:00	int-e	klrr: it'll come with your distribution
2013-07-25 18:00:05	klrr	okey
2013-07-25 18:00:07	supki	Rogach: I don't think your snippet got linked in channel.
2013-07-25 18:00:20	Rogach	supki: Sorry! http://lpaste.net/91214
2013-07-25 18:00:20	klrr	i got no idea about this, is it some kind of C header file im missing?
2013-07-25 18:00:21	int-e	klrr: it's a command line program for querying data about installed C libraries.
2013-07-25 18:00:23	<--	sclv (c62d1326@gateway/web/freenode/ip.198.45.19.38) has quit (Quit: Page closed)
2013-07-25 18:00:25	--	sclv_ is now known as sclv
2013-07-25 18:00:31	-->	hajimeho_ (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has joined #haskell
2013-07-25 18:00:43	jevankovich	klrr: what OS are you running?
2013-07-25 18:00:45	klrr	int-e: so i most likely doesnt have the right header files aka clibs?
2013-07-25 18:00:47	klrr	ubuntu
2013-07-25 18:00:54	<--	erochester (~erocheste@d-137-155-210.bootp.Virginia.EDU) has quit (Ping timeout: 246 seconds)
2013-07-25 18:01:06	geekosaur	klrr, it's a bunch of non-Haskell stuff you are missing, as you've been told a couple of times
2013-07-25 18:01:13	<--	wbruce (~wbruce@c-98-246-217-110.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2013-07-25 18:01:24	klrr	cairo-dev-header-C stuff package
2013-07-25 18:01:29	jevankovich	klrr: sudo apt-get install libcairo2-dev will get what you need, I think
2013-07-25 18:01:35	int-e	klrr: for example, pkg-config --list-all will list the libraries that pkg-config knows about, once it is installed.
2013-07-25 18:01:36	<--	hexagoxel (~hexagoxel@134.245.229.236) has quit (Ping timeout: 246 seconds)
2013-07-25 18:01:39	klrr	oh thanks for writing it out for me :D
2013-07-25 18:02:08	klrr	int-e: okey, useful took
2013-07-25 18:02:10	klrr	tool*
2013-07-25 18:02:27	-->	path[l] (~vsi@ip-64-134-236-30.public.wayport.net) has joined #haskell
2013-07-25 18:02:33	<--	quchen (~quchen@p54AA3FE6.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2013-07-25 18:02:46	klrr	now everything works ^^ thanks
2013-07-25 18:02:52	<--	t2ahc (~t2ahc@bridgeport.uchicago.edu) has quit (Quit: Leaving)
2013-07-25 18:02:57	jevankovich	No problem. Happy to help
2013-07-25 18:03:19	 *	hackagebot metadata 0.1.4.0 - metadata library for semantic web.  http://hackage.haskell.org/package/metadata-0.1.4.0 (KatsutoshiItoh)
2013-07-25 18:03:43	-->	fijimunkii (~fijimunki@pool-98-113-72-161.nycmny.fios.verizon.net) has joined #haskell
2013-07-25 18:04:14	-->	ivoscc (~ivo@190.42.234.219) has joined #haskell
2013-07-25 18:04:16	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-25 18:04:24	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-25 18:04:38	<--	hajimeho_ (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has quit (Ping timeout: 240 seconds)
2013-07-25 18:04:44	klrr	i always forget you also need header files to link libs that has bindings to C code, i always just install the normal dynamically linked library xD
2013-07-25 18:05:35	<--	perspectival (perspectiv@nat/redhat/x-edmvqnrxkamsutci) has quit (Quit: Leaving.)
2013-07-25 18:06:28	<--	resnik_ (~sethroot@108.71.82.84) has quit (Ping timeout: 256 seconds)
2013-07-25 18:06:28	<--	Yuu-chan (~yuu@2.mfisoft.ru) has quit (Quit: Yuu-chan)
2013-07-25 18:06:40	-->	flebron (~flebron@gw.dc.uba.ar) has joined #haskell
2013-07-25 18:07:12	<--	Ayey_ (~rune1@2-106-141-211-dynamic.dk.customer.tdc.net) has quit (Ping timeout: 246 seconds)
2013-07-25 18:07:15	-->	rachit7 (~Adium@208.91.36.142) has joined #haskell
2013-07-25 18:07:48	<--	jchild (~textual@rrcs-50-75-181-175.nys.biz.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2013-07-25 18:09:05	klrr	anyone know a library for playing audio files?
2013-07-25 18:09:10	<--	nominolo (~nominolo@cust.static.81-63-183-2.swisscomdata.ch) has quit (Ping timeout: 276 seconds)
2013-07-25 18:09:10	<--	ThomasLocke (~ThomasLoc@pdpc/supporter/active/thomaslocke) has quit (Ping timeout: 276 seconds)
2013-07-25 18:09:15	<--	rachit7 (~Adium@208.91.36.142) has quit (Client Quit)
2013-07-25 18:09:55	<--	enthropy (~aavogt@CPE00222d67ba9d-CM00222d67ba99.cpe.net.cable.rogers.com) has quit (Quit: WeeChat 0.3.7)
2013-07-25 18:10:43	-->	sclv_ (c62d135f@gateway/web/freenode/ip.198.45.19.95) has joined #haskell
2013-07-25 18:11:09	-->	joehillen (~joe@38.104.125.2) has joined #haskell
2013-07-25 18:11:26	<--	Shin-LaC (~LaC@108-243-41-60.lightspeed.cicril.sbcglobal.net) has quit (Quit: Computer has gone to sleep.)
2013-07-25 18:11:30	<--	lokydor (lecornec20@tom.iiens.net) has quit (Ping timeout: 264 seconds)
2013-07-25 18:11:44	-->	rachit7 (~Adium@lvcc.zappos.com) has joined #haskell
2013-07-25 18:12:07	-->	threesome (~threesome@ip-94-113-12-233.net.upcbroadband.cz) has joined #haskell
2013-07-25 18:12:12	-->	fizbin (~Adium@pool-96-235-152-213.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 18:12:29	<--	jdnavarro (~danny@2.Red-88-1-184.dynamicIP.rima-tde.net) has quit (Quit: Konversation terminated!)
2013-07-25 18:13:44	-->	finity (~nick@entasa.readytalk.com) has joined #haskell
2013-07-25 18:14:05	-->	fizbin1 (~Adium@pool-96-235-148-78.cmdnnj.east.verizon.net) has joined #haskell
2013-07-25 18:14:08	-->	dubsg (~dubsg@208.74.177.104.static.etheric.net) has joined #haskell
2013-07-25 18:14:09	<--	beckerb (~beckerb@2001:660:3013:3:7aac:c0ff:fea0:a7b4) has quit (Ping timeout: 245 seconds)
2013-07-25 18:14:56	<--	ParahSailin (~Rob@50-194-178-148-static.hfc.comcastbusiness.net) has quit (Changing host)
2013-07-25 18:14:56	-->	ParahSailin (~Rob@unaffiliated/parahsailin) has joined #haskell
2013-07-25 18:15:53	-->	ethercrow (~ethercrow@81.1.213.1) has joined #haskell
2013-07-25 18:16:12	Pranz	klrr, there exists OpenAL bindings
2013-07-25 18:16:58	<--	fizbin (~Adium@pool-96-235-152-213.cmdnnj.east.verizon.net) has quit (Ping timeout: 276 seconds)
2013-07-25 18:17:38	<--	DanielDiaz (~dhelta@217.Red-83-50-108.dynamicIP.rima-tde.net) has quit (Quit: Leaving.)
2013-07-25 18:17:42	-->	Shin-LaC (~LaC@108-243-41-60.lightspeed.cicril.sbcglobal.net) has joined #haskell
2013-07-25 18:17:54	<--	Onielfa (3e0efc52@gateway/web/freenode/ip.62.14.252.82) has quit (Quit: Page closed)
2013-07-25 18:17:58	<--	Shin-LaC (~LaC@108-243-41-60.lightspeed.cicril.sbcglobal.net) has quit (Client Quit)
2013-07-25 18:17:59	klrr	Pranz: will have a look
2013-07-25 18:18:01	-->	jasonkuhrt (~jasonkuhr@CPE602ad0871e9e-CM602ad0871e9b.cpe.net.cable.rogers.com) has joined #haskell
2013-07-25 18:18:09	-->	lokydor (lecornec20@tom.iiens.net) has joined #haskell
2013-07-25 18:18:40	-->	tjohnson (~tjohnson@8-16.ptpg.oregonstate.edu) has joined #haskell
2013-07-25 18:18:42	<--	jjohnsson (~jjohnsson@host-95-195-158-82.mobileonline.telia.com) has quit (Ping timeout: 264 seconds)
2013-07-25 18:18:42	<--	hwiersma2 (~hwiersma@205.250.5.108) has quit (Ping timeout: 264 seconds)
2013-07-25 18:18:47	-->	cads (~m@adsl-74-160-112-174.asm.bellsouth.net) has joined #haskell
2013-07-25 18:19:02	-->	jjohnsson (~jjohnsson@host-95-195-136-228.mobileonline.telia.com) has joined #haskell
2013-07-25 18:19:02	klrr	Pranz: it says 3d audio, odes it still work with 2d games ?
2013-07-25 18:19:19	-->	codesoup (~codesoup@76-10-142-41.dsl.teksavvy.com) has joined #haskell
2013-07-25 18:19:25	Pranz	klrr, Yeah, altough it may not be the fastest alternative then
2013-07-25 18:19:37	Pranz	but I don't know that much about sound really
2013-07-25 18:19:37	klrr	is there better alternatives?
2013-07-25 18:19:48	jevankovich	Since you're doing a 2d game, I'm curious what you're using to draw to the screen
2013-07-25 18:19:48	ocharles	bleh, there's no real pattern for  (a -> b -> m c) -> m a -> m b -> m c  is there?
2013-07-25 18:19:53	klrr	i tried look into handling it using SDL, but it seems that the haskell bindings doesnt have that
2013-07-25 18:19:57	Pranz	klrr, not a single library I don't think
2013-07-25 18:20:07	klrr	jevankovich: cairo, well, im using Helm game engine
2013-07-25 18:20:08	Gracenotes	http://hackage.haskell.org/package/SDL-mixer
2013-07-25 18:20:23	Pranz	ah!
2013-07-25 18:20:25	Pranz	slipped my mind
2013-07-25 18:20:26	Gracenotes	SDL mixer has some limitations, though.
2013-07-25 18:20:28	klrr	aa it was a seperated library Gracenotes thanks!
2013-07-25 18:20:40	klrr	any improntant to know?
2013-07-25 18:20:41	ocharles	I guess I can use applicative and then join the whole thing at the end
2013-07-25 18:20:44	Pranz	klrr, altough 3D sound may find its place you know
2013-07-25 18:20:50	Gracenotes	I haven't used this, I just Googled sdl mixer haskell
2013-07-25 18:20:55	Pranz	klrr, if you wanna place sound further back and use various effects
2013-07-25 18:20:58	-->	rzh (~rzh@c-50-161-22-247.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 18:20:59	-->	tommd (~tommd@pdx.galois.com) has joined #haskell
2013-07-25 18:20:59	klrr	ok
2013-07-25 18:21:12	klrr	Pranz: i dont want such advanced stuff
2013-07-25 18:21:15	<--	Zenol (~zenol@ip-91.net-81-220-73.rev.numericable.fr) has quit (Ping timeout: 268 seconds)
2013-07-25 18:21:17	Gracenotes	also, if you want to play more than one thing at once, and want to be particular about starting and ending sound at a specific time
2013-07-25 18:21:34	Gracenotes	I can't promise anything about the sound quality either
2013-07-25 18:21:45	klrr	well, i will try and see if it works
2013-07-25 18:21:52	Gracenotes	yes, report back :)
2013-07-25 18:21:53	Pranz	klrr, what os are you making for?
2013-07-25 18:22:07	klrr	im just playing around, so unix-like oses only atm
2013-07-25 18:22:27	<--	path[l] (~vsi@ip-64-134-236-30.public.wayport.net) has quit (Quit: path[l])
2013-07-25 18:22:28	jevankovich	I think SDL just plays the sound. OpenAL does a lot of processing and will even offload to the soundcard I think
2013-07-25 18:22:53	klrr	jevankovich: if you were interested what i used for drawing, using helm which uses cairo http://helm-engine.org/
2013-07-25 18:23:24	-->	Zenol (~zenol@ip-91.net-81-220-73.rev.numericable.fr) has joined #haskell
2013-07-25 18:23:42	-->	Placinta (~Placinta@89.28.113.126) has joined #haskell
2013-07-25 18:23:44	<--	jasonkuhrt (~jasonkuhr@CPE602ad0871e9e-CM602ad0871e9b.cpe.net.cable.rogers.com) has quit (Quit: Linkinus - http://linkinus.com)
2013-07-25 18:23:53	<--	tertl3-laptop (~tertl3-la@108-85-16-151.lightspeed.gnvlsc.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2013-07-25 18:23:58	<--	shepheb (~bsshephe@bas1-jockvale05-1176150906.dsl.bell.ca) has quit (Read error: Operation timed out)
2013-07-25 18:24:03	-->	Rarrikins (~Rarrikins@unaffiliated/rarrikins) has joined #haskell
2013-07-25 18:24:08	<--	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2013-07-25 18:24:13	Pranz	klrr, hmm, that seems interesting
2013-07-25 18:24:20	<--	tjohnson (~tjohnson@8-16.ptpg.oregonstate.edu) has quit (Ping timeout: 268 seconds)
2013-07-25 18:24:38	-->	mithsv (~mithsv@ip51cf3d13.direct-adsl.nl) has joined #haskell
2013-07-25 18:24:38	klrr	Pranz: it does :D im super excited
2013-07-25 18:25:21	Pranz	klrr, you may find #haskell-game useful for more gamespecific questions
2013-07-25 18:25:44	<--	refold (~gman@h-54-251.a258.priv.bahnhof.se) has quit (Quit: leaving)
2013-07-25 18:25:51	Placinta	Hi. I'm trying to create a value that is wrapped in a Maybe and a Writer monad. I want to use a WriterT monad transformer, but I just can't get the correct value constructor. I try something like WriterT ["A message"] Just 1, but I get an error. Can anybody tell me how I can fix that?
2013-07-25 18:25:55	-->	DoomBoom (~DoomBoom@86.89.90.229) has joined #haskell
2013-07-25 18:26:22	klrr	Pranz: im already on there
2013-07-25 18:26:33	<--	DrTeggy (~grust@closure.Informatik.Uni-Tuebingen.De) has quit (Ping timeout: 264 seconds)
2013-07-25 18:26:33	Pranz	oh
2013-07-25 18:27:04	Clint	Placinta: you don't do things that way
2013-07-25 18:27:42	-->	normanrichards (~normanric@rrcs-108-178-120-144.sw.biz.rr.com) has joined #haskell
2013-07-25 18:27:43	-->	path[l] (~vsi@72.51.35.51) has joined #haskell
2013-07-25 18:28:03	<--	c4iff (~Adium@38.111.136.224) has quit (Quit: Leaving.)
2013-07-25 18:28:04	Placinta	Clint: What is the problem doing it this way?
2013-07-25 18:28:12	-->	shepheb (~bsshephe@bas1-jockvale05-3096538012.dsl.bell.ca) has joined #haskell
2013-07-25 18:28:14	Clint	Placinta: well it doesn't make sense
2013-07-25 18:28:18	-->	gspr (~gspr@2a00:1a28:1251:178:73:210:141:0) has joined #haskell
2013-07-25 18:28:19	Clint	what are you trying to do?
2013-07-25 18:28:24	-->	ioanel (~Thunderbi@188.25.8.255) has joined #haskell
2013-07-25 18:28:42	-->	langmartin (~user@host-68-169-154-130.WISOLT2.epbfi.com) has joined #haskell
2013-07-25 18:29:07	<--	codesoup (~codesoup@76-10-142-41.dsl.teksavvy.com) has quit (Quit: Leaving)
2013-07-25 18:29:18	Pranz	Placinta, return $ Just 1 >>= log "a message"
2013-07-25 18:29:19	Pranz	maybe?
2013-07-25 18:29:35	Pranz	if log is what I think it is
2013-07-25 18:29:40	-->	hwiersma (~hwiersma@S0106602ad08e475a.ok.shawcable.net) has joined #haskell
2013-07-25 18:29:52	<--	amathew (~Adium@nol-lo0.fw.nyc2.appnexus.com) has quit (Quit: Leaving.)
2013-07-25 18:29:53	Pranz	eh, may have to wrap parantheses around the expression before ">>="
2013-07-25 18:30:01	<--	Lethalman (~luca@net77-43-20-100.mclink.it) has quit (Remote host closed the connection)
2013-07-25 18:30:08	Placinta	I'm trying to figure out, how to construct a value in a monad, in a monad transformer in 1 line
2013-07-25 18:30:25	Clint	i don't think the WriterT transformer does what you think it does then
2013-07-25 18:30:33	-->	paullik (~paullik@unaffiliated/paullik) has joined #haskell
2013-07-25 18:30:36	-->	tjohnson (~tjohnson@8-16.ptpg.oregonstate.edu) has joined #haskell
2013-07-25 18:30:37	<--	brianloveswords (~brianlove@li124-154.members.linode.com) has quit (Excess Flood)
2013-07-25 18:30:40	<--	n-dolio (~dolio@gw1.mcgraw-hill.com) has quit (Read error: Connection reset by peer)
2013-07-25 18:30:52	-->	erochester (~erocheste@c-71-206-171-217.hsd1.va.comcast.net) has joined #haskell
2013-07-25 18:31:01	<--	hashcat (~chatzilla@110-27-40-138.adsl.fetnet.net) has quit (Ping timeout: 248 seconds)
2013-07-25 18:31:01	<--	DexterLB (~dex@77-85-0-255.btc-net.bg) has quit (Read error: Connection reset by peer)
2013-07-25 18:31:07	<--	augur (~augur@c-71-57-182-133.hsd1.fl.comcast.net) has quit (Ping timeout: 268 seconds)
2013-07-25 18:31:34	<--	bitonic (~user@cust.static.81-63-183-2.swisscomdata.ch) has quit (Read error: Connection reset by peer)
2013-07-25 18:31:35	-->	bitonic` (~user@li146-81.members.linode.com) has joined #haskell
2013-07-25 18:31:44	-->	brianloveswords (~brianlove@li124-154.members.linode.com) has joined #haskell
2013-07-25 18:31:58	<--	owst (~owst@tarsier.ecs.soton.ac.uk) has quit (Ping timeout: 256 seconds)
2013-07-25 18:32:08	<--	breck7 (~breck7@207.194.125.34) has quit (Remote host closed the connection)
2013-07-25 18:32:38	Placinta	A Writer lets you log messages. I can apply it to simple values, like 1,3. If I have a a value with a context, say Just 3, I would need a monad transformer WriterT to be able to log operations on said value, no?
2013-07-25 18:33:16	Pranz	Placinta, no
2013-07-25 18:33:24	Pranz	or
2013-07-25 18:33:29	Pranz	hmm
2013-07-25 18:33:31	-->	CapitanK (~CaptainK@181.179.81.109) has joined #haskell
2013-07-25 18:33:31	Gracenotes	:t tell ["a"] >> return 1
2013-07-25 18:33:32	lambdabot	(Num b, MonadWriter [[Char]] m) => m b
2013-07-25 18:33:32	Pranz	I don't think so
2013-07-25 18:33:38	Clint	> runWriter $ tell ["Howdy"] >> return (Just 3)
2013-07-25 18:33:39	lambdabot	  (Just 3,["Howdy"])
2013-07-25 18:33:44	geekosaur	no, transformer doesn't transform the logged value. afaik if a is a Monoid then Maybe a is also a monoid, but you would have to then consistently log Maybe a
2013-07-25 18:33:46	Gracenotes	:t tell ["a"] >> return 1 :: WriterT [String] Maybe Int
2013-07-25 18:33:47	lambdabot	WriterT [String] Maybe Int
2013-07-25 18:34:05	geekosaur	and there is no type appropriate way to have it handle either a or Maybe a
2013-07-25 18:34:23	geekosaur	unless you want multiple Writer-s, one for each type (and *there* you are looking at WriterT)
2013-07-25 18:34:29	-->	simukis_ (~simukis_@78.63.244.234) has joined #haskell
2013-07-25 18:34:35	Gracenotes	you don't need 'return (Just 3)'; 'return 3' will work
2013-07-25 18:34:44	geekosaur	but you won't have any sequence information between their respective logs
2013-07-25 18:34:55	Gracenotes	at least, if you're using WriterT
2013-07-25 18:34:57	<--	chatsiri_ (~chatsiri_@49.48.95.134) has quit (Ping timeout: 264 seconds)
2013-07-25 18:34:58	<--	RayNbow`TU (~kirika@131.180.203.117) has quit (Quit: leaving)
2013-07-25 18:35:06	Clint	i was too lazy for type signature
2013-07-25 18:35:17	monochrom	I agree with the assessment that you misunderstood WriterT
2013-07-25 18:35:25	<--	PJBoy (~PJBoy@cpc4-aztw24-2-0-cust253.aztw.cable.virginmedia.com) has quit (Disconnected by services)
2013-07-25 18:35:34	<--	CaptainK (~CaptainK@181.179.35.116) has quit (Read error: Connection reset by peer)
2013-07-25 18:35:39	<--	bitonic` (~user@li146-81.members.linode.com) has quit (Remote host closed the connection)
2013-07-25 18:35:39	-->	PJBoy_ (~PJBoy@cpc4-aztw24-2-0-cust253.aztw.cable.virginmedia.com) has joined #haskell
2013-07-25 18:35:39	monochrom	or at least the specific WriterT [String] Maybe a
2013-07-25 18:35:40	<--	nbouscal (~nbouscal@c-67-168-113-48.hsd1.wa.comcast.net) has quit (Quit: Computer has commenced electric sheep tracking protocol.)
2013-07-25 18:35:44	<--	ptek (~ptek@217.64.164.1) has quit (Quit: Leaving...)
2013-07-25 18:35:47	--	PJBoy_ is now known as PJBoy
2013-07-25 18:35:57	-->	bitonic` (~user@cust.static.81-63-183-2.swisscomdata.ch) has joined #haskell
2013-07-25 18:36:13	-->	DexterLB (~dex@77-85-0-255.btc-net.bg) has joined #haskell
2013-07-25 18:36:17	--	PJBoy is now known as Guest45971
2013-07-25 18:36:33	Placinta	I need a moment to comprehend this
2013-07-25 18:36:45	<--	Apocalisp (~textual@mobile-166-147-096-231.mycingular.net) has quit (Ping timeout: 264 seconds)
2013-07-25 18:37:44	Gracenotes	The types of transformers and the nesting of transformers are a bit inverted. WriterT [String] (MaybeT IO) a, when you run this, IO is on the outside, then Maybe, then Writer [String] on the very inside
2013-07-25 18:38:00	jevankovich	Could anybody point me in the direction of some good resources for understanding monad transformers?
2013-07-25 18:38:16	Gracenotes	features propagate up via typeclasses, most often
2013-07-25 18:38:32	<--	vlaeter (~vlaeter@149.62.176.186) has quit (Read error: Connection reset by peer)
2013-07-25 18:38:33	-->	nbouscal (~nbouscal@c-67-168-113-48.hsd1.wa.comcast.net) has joined #haskell
2013-07-25 18:38:45	Gracenotes	then you get really complex hierarchies etc.
2013-07-25 18:38:52	<--	Argue (~Argue@112.209.127.125) has quit (Quit: Leaving)
2013-07-25 18:38:53	<--	Zenol (~zenol@ip-91.net-81-220-73.rev.numericable.fr) has quit (Ping timeout: 240 seconds)
2013-07-25 18:39:42	<--	jophish_ (~jophish@cpc2-oxfd18-2-0-cust473.4-3.cable.virginmedia.com) has quit (Remote host closed the connection)
2013-07-25 18:40:46	Gracenotes	well, http://web.archive.org/web/20070224024824/http://cale.yi.org/index.php/How_To_Use_Monad_Transformers used to work
2013-07-25 18:40:55	Gracenotes	it is probably lost forever now
2013-07-25 18:41:01	-->	hajimeho_ (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has joined #haskell
2013-07-25 18:41:19	<--	Vorpal (~Vorpal@unaffiliated/vorpal) has quit (Quit: ZNC - http://znc.sourceforge.net)
2013-07-25 18:41:33	Gracenotes	they're not really all they're cracked up to be, anyway.
2013-07-25 18:41:37	monochrom	jevankovich: perhaps http://www.haskell.org/haskellwiki/Typeclassopedia#Monad_transformers
2013-07-25 18:42:20	<--	DoomBoom (~DoomBoom@86.89.90.229) has quit (Quit: Leaving)
2013-07-25 18:42:31	monochrom	hmm, perhaps that's too brief
2013-07-25 18:42:39	-->	pamojarpan (~quassel@5.159.138.201) has joined #haskell
2013-07-25 18:43:30	Gracenotes	another reason for the above-mentioned inversion is that the difference between 'm a' and 't m a' is a lot smaller if you just enhance the innermost computational context, rather than change the entire semantics of everything. also, makes the types work nice.
2013-07-25 18:44:05	-->	Swizec (~swizec@c-24-6-53-23.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 18:44:18	monochrom	I learned them by reading the docs and playing with ReaderT, WriterT, StateT, ContT, respectively
2013-07-25 18:44:30	jevankovich	Okay. Thanks
2013-07-25 18:44:31	shachaf	CodensiT
2013-07-25 18:44:47	monochrom	playing is the key. programming is not a spectator sport.
2013-07-25 18:45:22	-->	Sourceless (~Sourceles@milan.cs.york.ac.uk) has joined #haskell
2013-07-25 18:45:34	-->	JaRoel|4d (~jaroel|4d@sink.jaroel.nl) has joined #haskell
2013-07-25 18:46:15	-->	codesoup (~codesoup@76-10-142-41.dsl.teksavvy.com) has joined #haskell
2013-07-25 18:46:19	<--	Kuraitou (~kuraitou@unaffiliated/kuraitou) has quit (Read error: Connection reset by peer)
2013-07-25 18:46:46	-->	Kuraitou (~kuraitou@unaffiliated/kuraitou) has joined #haskell
2013-07-25 18:46:57	ParahSailin	im having a hard time finding where "runGenProcess_" is defined http://hackage.haskell.org/packages/archive/process/latest/doc/html/src/System-Process.html
2013-07-25 18:47:18	Cale	jevankovich: If you'd like, I can take you through the construction of State / StateT which will probably help make the general idea of how monad transformers work pretty clear.
2013-07-25 18:47:35	ParahSailin	nevermind, .Internals
2013-07-25 18:47:35	jevankovich	That'd be great, Cale
2013-07-25 18:47:38	<--	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has quit (Quit: Leaving.)
2013-07-25 18:47:52	-->	rfw (rfw@thor.rfw.name) has joined #haskell
2013-07-25 18:48:01	-->	dysinger (~tim@cpe-24-94-76-59.hawaii.res.rr.com) has joined #haskell
2013-07-25 18:48:24	<--	Kiryx (~Kiryx@85-202-48-130.internetia.net.pl) has quit (Ping timeout: 256 seconds)
2013-07-25 18:48:26	Cale	Actually, come to #haskell-overflow so that we don't have quite as much scrolling :)
2013-07-25 18:48:33	Gracenotes	Cale: is there any hope of getting the tutorial back? or is it lost to posterity?
2013-07-25 18:48:41	Gracenotes	a relic from an ancient time
2013-07-25 18:49:10	Cale	Gracenotes: ummm... I'm not sure why archive.org suddenly decided to honour my old robots.txt when they'd been ignoring it up until last week
2013-07-25 18:49:21	<--	tommd (~tommd@pdx.galois.com) has quit (Ping timeout: 264 seconds)
2013-07-25 18:49:26	Gracenotes	yeah.. odd
2013-07-25 18:49:31	<--	juliohm (~julio@unaffiliated/juliohm) has quit (Quit: Leaving)
2013-07-25 18:49:45	-->	Thra11 (~Thra11@31.185.245.144) has joined #haskell
2013-07-25 18:49:53	<--	JaRoel|4d (~jaroel|4d@sink.jaroel.nl) has quit (Remote host closed the connection)
2013-07-25 18:49:55	<--	mithsv (~mithsv@ip51cf3d13.direct-adsl.nl) has quit (Quit: Computer has gone to sleep.)
2013-07-25 18:50:02	-->	JaRoel|4d (~jaroel|4d@sink.jaroel.nl) has joined #haskell
2013-07-25 18:50:18	Gracenotes	ParahSailin: systems-y stuff has a lot of indirection in ghc/base source. This may be a side effect of abstraction.
2013-07-25 18:50:38	<--	oleo (~oleo@xdsl-78-35-138-72.netcologne.de) has quit (Ping timeout: 240 seconds)
2013-07-25 18:50:47	-->	ulfdoz (~mary@95.81-167-139.customer.lyse.net) has joined #haskell
2013-07-25 18:51:04	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2013-07-25 18:51:17	-->	federkasten (~federkast@KD111109107122.ppp-bb.dion.ne.jp) has joined #haskell
2013-07-25 18:52:02	<--	flebron (~flebron@gw.dc.uba.ar) has quit
2013-07-25 18:52:21	<--	csakatoku (~csakatoku@softbank126009008011.bbtec.net) has quit (Remote host closed the connection)
2013-07-25 18:52:30	--	iri`away is now known as iri
2013-07-25 18:52:32	-->	resnik (~sethroot@108.71.82.84) has joined #haskell
2013-07-25 18:52:49	-->	Wizek (~Wizek@catv-80-98-252-30.catv.broadband.hu) has joined #haskell
2013-07-25 18:53:05	-->	Eldariof-ru (~CLD@pppoe-196-60-dyn-sr.volgaline.ru) has joined #haskell
2013-07-25 18:53:17	-->	flebron (~flebron@gw.dc.uba.ar) has joined #haskell
2013-07-25 18:53:21	<--	Placinta (~Placinta@89.28.113.126) has quit (Quit: Miranda IM! Smaller, Faster, Easier. http://miranda-im.org)
2013-07-25 18:54:41	-->	sepp2k (~sexy@g231141018.adsl.alicedsl.de) has joined #haskell
2013-07-25 18:54:44	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2013-07-25 18:55:57	<--	kevinqcs (~turing@117.62.228.209) has quit (Quit: Leaving.)
2013-07-25 18:57:27	-->	azm (~x@unaffiliated/azm) has joined #haskell
2013-07-25 18:59:19	-->	Jeanne-Kamikaze (~Jeanne-Ka@143.73.223.87.dynamic.jazztel.es) has joined #haskell
2013-07-25 18:59:46	tromp_	a nytimes article writes "... penetrated the secure computer networks ..." :(
2013-07-25 19:00:03	-->	Shin-LaC (~LaC@131-193-255-222.dhcp.uic.edu) has joined #haskell
2013-07-25 19:00:41	monochrom	please don't read nytimes :)
2013-07-25 19:01:14	-->	Neqoxec (~Neqoxec@8-12.ptpg.oregonstate.edu) has joined #haskell
2013-07-25 19:01:15	Gracenotes	:o
2013-07-25 19:01:30	<--	flebron (~flebron@gw.dc.uba.ar) has quit
2013-07-25 19:01:36	-->	agr (~agr@186.231.79.107) has joined #haskell
2013-07-25 19:01:48	--	[[zzz]] is now known as [[zz]]
2013-07-25 19:02:08	<--	gentleben (~gentleben@c-98-207-40-73.hsd1.ca.comcast.net) has quit (Quit: gentleben)
2013-07-25 19:03:30	-->	flebron (~flebron@gw.dc.uba.ar) has joined #haskell
2013-07-25 19:03:31	-->	breck7 (~breck7@207.194.125.34) has joined #haskell
2013-07-25 19:04:06	-->	wbruce (~wbruce@c-98-246-217-110.hsd1.or.comcast.net) has joined #haskell
2013-07-25 19:04:19	geekosaur	expecting anything like reality on any remotely technical subject from mass media is ..
2013-07-25 19:04:39	<--	simukis_ (~simukis_@78.63.244.234) has quit (Quit: simukis_)
2013-07-25 19:04:49	-->	simukis_ (~simukis_@78.63.244.234) has joined #haskell
2013-07-25 19:05:36	<--	JaRoel|4d (~jaroel|4d@sink.jaroel.nl) has quit (Remote host closed the connection)
2013-07-25 19:05:39	<--	simukis_ (~simukis_@78.63.244.234) has quit (Remote host closed the connection)
2013-07-25 19:05:45	-->	bashyal (~bashyal@ec2-54-245-100-167.us-west-2.compute.amazonaws.com) has joined #haskell
2013-07-25 19:05:56	-->	simukis_ (~simukis_@78.63.244.234) has joined #haskell
2013-07-25 19:06:02	-->	JaRoel|4d (~jaroel|4d@sink.jaroel.nl) has joined #haskell
2013-07-25 19:06:06	<--	c_wraith (~c_wraith@commie.pwrsrc.net) has quit (Quit: This computer has gone to sleep)
2013-07-25 19:06:22	Gracenotes	it's not just technical subjects. anyone who's proficient in anything will cringe reading stories about that thing.
2013-07-25 19:06:49	Gracenotes	Explaining complicated things to the general public is painful.
2013-07-25 19:07:07	-->	Setsuna (~Setsuna@nereida.xeonet.es) has joined #haskell
2013-07-25 19:07:08	Setsuna	Hi there, We are looking for a graphics designer for a work, if you are interested pm me, thanks :)
2013-07-25 19:07:09	<--	Setsuna (~Setsuna@nereida.xeonet.es) has left #haskell ("Once you know what it is you want to be true, instinct is a very useful device for enabling you to know that it is")
2013-07-25 19:07:53	<--	Quadrescence (~quad@unaffiliated/quadrescence) has quit (Quit: This computer has gone to sleep)
2013-07-25 19:08:26	-->	hashcat (~chatzilla@27.242.174.41) has joined #haskell
2013-07-25 19:08:39	<--	ravenvz (~vizier@ip-95-220-104-103.bb.netbynet.ru) has quit (Quit: Konversation terminated!)
2013-07-25 19:08:44	osfameron	if you want to work for a spammer
2013-07-25 19:08:53	-->	eduardo (~wakalabis@177.32.67.203) has joined #haskell
2013-07-25 19:10:29	<--	JaRoel|4d (~jaroel|4d@sink.jaroel.nl) has quit (Ping timeout: 248 seconds)
2013-07-25 19:11:06	-->	kylcarte (~kcarter@207.98.72.95) has joined #haskell
2013-07-25 19:11:26	-->	BobFunk (~mbc@76.14.64.156) has joined #haskell
2013-07-25 19:11:38	-->	fridim_ (~fridim@bas2-montreal07-2925317871.dsl.bell.ca) has joined #haskell
2013-07-25 19:12:46	-->	twanvl (~Twan@dhcp-077-250-086-217.chello.nl) has joined #haskell
2013-07-25 19:13:10	<--	flebron (~flebron@gw.dc.uba.ar) has quit
2013-07-25 19:13:41	<--	S11001001 (~sirian@fsf/member/S11001001) has quit (Ping timeout: 248 seconds)
2013-07-25 19:13:41	-->	mithsv (~mithsv@ip51cf3d13.direct-adsl.nl) has joined #haskell
2013-07-25 19:13:56	<--	HugoDaniel (~hugo@elab.fcsh.unl.pt) has quit (Quit: leaving)
2013-07-25 19:14:22	<--	donri (~dag@unaffiliated/dagodenhall) has quit (Quit: Leaving)
2013-07-25 19:14:27	-->	Wizcrack (~Wizcrack@c-67-181-247-60.hsd1.ca.comcast.net) has joined #haskell
2013-07-25 19:14:45	<--	phischu (~pschuster@dslb-088-077-197-151.pools.arcor-ip.net) has quit (Ping timeout: 248 seconds)
2013-07-25 19:14:50	<--	MouseTheLuckyDog (~mouse@adsl-76-193-161-115.dsl.chcgil.sbcglobal.net) has quit (Remote host closed the connection)
2013-07-25 19:16:10	<--	ulfdoz (~mary@95.81-167-139.customer.lyse.net) has quit (Ping timeout: 256 seconds)
2013-07-25 19:16:11	-->	tommd (~tommd@66.193.37.231) has joined #haskell
2013-07-25 19:16:38	-->	lukexi (~lukexi@cpe-72-229-189-117.nyc.res.rr.com) has joined #haskell
2013-07-25 19:17:11	<--	codesoup (~codesoup@76-10-142-41.dsl.teksavvy.com) has quit (Quit: Leaving)
2013-07-25 19:19:11	--	irc: disconnected from server
2013-07-25 19:19:34	-->	benoit_ (~benoit@130.185.130.212) has joined #haskell
2013-07-25 19:19:34	--	Topic for #haskell is "http://www.haskell.org | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | Administrative issues: #haskell-ops | Hackage down? http://hdiff.luite.com"
2013-07-25 19:19:34	--	Topic set by mauke (~mauke@p3m/member/mauke) on Wed, 17 Jul 2013 13:52:43
2013-07-25 19:19:34	--	Nicks #haskell: [@ChanServ @Igloo [[zz]] [edwtjo] \q __main__ _br_ _flow_ `0660 `^_^v `bps `fogus a11235 ab9rf acfoltzer acidi Adeon adimit_away Adios_ adlan adnap aess AfC aford aformeny agr agumonkey agundry ahf ahihi akahn akiress akraut alanz albel727 alcz_ aleator_ alexander__b alexs alpounet alszar Amadiro amyers anachron anders^^_ andrewsw anildigital aninhumer Ankhers anon1231 AntiSpamMeta anyfoo apaku apples` araujo arbn arborist arcatan args[0] aristid Ark1 arkeet arkx Arnoldz arnsholt arossouw asante asjo asQuirreL aszlig Athas averell away_sondr3 Axman6 azm b2coutts b52 b_jonas bamboo banjiewen barrucadu bartavelle bashyal Baughn bb010g bbee bben bbloom bcoppens bd_ bduc BeardedCoder Belgarion0 benoit_ benprew bentrevor bergmark betawaffle bezik bgamari bgilbert bholst_ Bigcheese BigEndian bigs bind bio- birkenfeld biscarch bitonic` BitPuffin_ bitraten blakesmith BlastHardcheese Blkt BMeph BobFunk bobry bogdanp bogner_ Boney boothead Boreeas bqp brainproxy brainwash Brando753 brandonw breck7 brendan brett BrianHV brianloveswords briden brisbin brixen bscarlet bstrie buetow burp_ Bwild bxc ByronJohnson bytbox bz c_14 cads cajla Cale caligula__ canar canissimia canta capisce_ CapitanK carter_away Catbuntu ccasin ccxCZ cdidd cdk ceii centrinia Cerise cfricke charlesofarrell_ cheezey chickenflu chirpsalot ChongLi Chousuke chrisbuchholz chrisdone chrisdotcode_ chrra chunkstuntman chuzz ciaranm CindyLinz cjay clampz ClaudiusMaximus Clint clog cmsd2 cods cognominal colah_ compnaion_cbue conal confound_ copton copumpkin corkexaminer CosmicRay Counter-Strike cow-orker cronject cross cruxeternus Cryovat cschneid cynick dabradley dan_johnsin danharaj danr danvet dario^CIP Darkflux DarkFox Dashkal dav davd davean davorak_ davorb-cellphone dcoutts de-Vri-es deavid Deewiant def-lkb_ deggis demolithion denver dEPy DexterLB dextrey dgpratt dialelo DigitalKiwi dilinger_ divarvel dixie_ djahandarie dju dlundy dmarker dmp1ce dmwit dobblego dogmaT DolphR1 doomlord doshitan dpwright dqd Draconx Draggor drbean DrCode drdo dreixel drewr drmegahertz dropdrive DrSyzygy dsantiago dschoepe dsfox1 dsirenko dsp_ DT`` Dtgr duairc dubsg dumbhat dustinswan DustyDingo dwierenga Dybber dyreshark dysinger eacameron EarlGray^^ earthy ecube edkk Edoxile Eduard_Munteanu eduardo edunham egork8n ehamberg ehd ejls eL_Bart0 Eldariof-ru electrogeek elediaz elgot Eliel Elision_ elliott ELLIOTTCABLE em Endy Enigmagic ent Entroacceptor epsylon epta ericmj Eridius ernst erochester ethercrow etrepum EvilPenguin Excureo execut3 eyck_ Ezku f8l fabjan fall_ farn favonia fayden federkasten felipe_ fergusnoble fihi09``` fijimunkii fikusz finity finnrobi FireFly fizbin1 floatingman flori flowsnake flux folone franksh FreeFull fridim_ frontend1oader froztbyte frx fry fryguybob ft Fubar^ Fuco Fuuzetsu FUZxxl fxrh gautamc gbarboza gbeshers gbluma gds geal geekosaur gehmehgeh gemelen genisage geoffh gereedy germanmushroom ggherdov ggreg ghorn ghorn_ Ghoul_ Gilly_ gnuvince goldkatze Gothmog_ go|dfish gpampara Gracenotes greymalkin gridaphobe gseitz_ gspr guerrilla Guest1103 Guest45971 Guest66280 Guest76380 guymann h_chiro_ haasn hackagebot Hafydd hajimeho_ HalfWayM1n hallettj hamilyon hamishmack hape01 Hardolaf harovali hashcat heath Heffalump helgikrs hiptobecubic hiratara hiredman hiroakip hive-mind hiyakashi honza horlicks hpaste hpc hpd htau hvr hwiersma ibid idnar idntfy ido idoru inarru inr insejn int-e integral Internet13 ioanel iol ion ipuustin iri Irtopiste ISF ismlages isomorphic isomorphismes iteratee_ iulian ivan\ ivan` ivoscc ixian Jaak jackhill jaimef jamwt jang1 janinge janne- jaspervd1 jayne jbauman_ jcp jdhutah jdoliner Jeanne-Kamikaze Jello_Raptor Jesin jevankovich jix jjohnsson jkpl jlaire jlamothe jlewis jliikka jlouis jmcarthur jmcarthur_mobile jml joachifm joaopizani joar jobstijl jodaro joe9 joehillen joelteon joeyh johanbev JohnBat26 johnw joneshf-laptop joneshf-work jonkri Jonno_FTW Jonte joogi jophish jorick joshc JPohlman1 jrib jroesch jrslepak jssanders JuanDaugherty juhp julmac junsuijin JustAPerson jvrmaia jyyou jzelinskie k0001 k00mi k0ral_ Kabaka kaictl kakos kallisti kamatsu KaneTW kaol kav kaw kazimir42 Ke kerrick Khady Khisanth killy9999 kini Kinnison KitB kloeri klrr kludge` klugez kmels_ Kneiva_ knyppeldynan knz koala_man kobain kofno koninkje_away kooga kosmikus kqr Krakarn kranius kryft kryptiskt kshannon ktosiek Kuba Kuraitou kushal kxra kylcarte Kyzza lahwran lambdabot lambdakind lambdanaut Laney langmartin latro`a lattenwald LeaChim leifw lemao lenstr leroux levi Licenser lightquake linduxed liori Liskni_si lispy liszt litherum liyang_ ljhms_ LK4D4 lokydor lopex loteriety lpsmith lpvb luite Luke lukexi lulf luminous lunarjar lusory M-ou-se m3ga machisuj- machisuji macron magicman Maior majoh mak` maksbotan malorie_ mami_ mandarg` mantovani maoe mapreduce marienz marr Martty MasseR matheus23 mattp__ matzo mauke mawuli Maxdamantus maximveksler maxter Mayzie mceier McManiaC mechairo` melter mendez_ MercurialAlchemi meretrix merijn MetaCosm mgaare mgile mgregson_ mgsloan mhooge mietek mike2 mike4_ mikecaruso mikee mikeplus64 milessabin milli mimi_vx mirsal misv mithsv mixi mjrosenb MK_FG mkrull mkscrg mlinksva mmaruseacph2 mmathis MoALTz Modius mokus mollerstrand Mon_Ouie monochrom mononofu morazow Morgawr mornfall morolin mortberg Mortomes mr- mrd_ mrpantoufle MrRacoon mrshoe MrWoohoo mstksg munro mux mviljamaa mxf myme1 MyrAchle n00dle Nahra_ nanothief Natch natte nbouscal NeatBasis_ necroyeti neektza1 neena nelk Neqoxec neurocyte newsham Nickeeh nicoo Nik05 nik_89 niklasb niko nikolah nilg Nimatek ninegrid ninwa ninzine nitrodex nlogax noam noddy2OOO Noldorin nooodl noplamodo normanrichards notdan ntus1017 nu11ptr nullcone_ nwf nxorg8 obcode ocharles Odd_Bloke ofan ogew oldmanstan OlegYch opqdonut OrangeDuck ormaaj Ornedan orospakr ortmage OscarZ osfameron osnr othiym23 otterdam otto_s ousado paintcan Paks palmje pamojarpan pantech Pantsu ParahSailin ParaSa1lin parcs path[l] paullik pcapriotti pdxleif peddie peltchu Pengoo perlite petanqk petantik petekaz`` petercoulton petermw pettter_ pfoetchen pharaun phienone Philippa Philonous_ Phlogistique PHO_ phryk phyrex1an pi8029 pikhq pingveno pjstadig pkkm Plex- plhk plucas pmade pnielsen popx poucet pqmodn_ pr Pranz predator217 preflex profmakx prophile Proteumus Ptival purefn puzza007 pygospa pyrtsa pyykkis q66 QinGW quicksilver qwandor qz rachit7 raichoo raid Ralith Rarrikins Raynes Raynos Razz rce redjohn ReinH Reisen Reite relrod Rembane resnik rfw rgrinberg rhodesd RichyB Riussi_ rmunroe robbert robinbb Rogach RoXtein rpenguin rs0 Rutger`_ ryanakca rzh s00pcan s4msung s_quark Saeppel Sagi saiam Saizan sajith saml satshaba1 saurik sbahra[] schlumpi_ schoppenhauer sclv sclv_ scottschecter scshunt Sculptor sdx23 seantallen SegFaultAX sellout seneca sepp2k setmeaway2 sevvie sferry sg sgso shachaf shanse shennyg shepheb shergill Shin-LaC shiona SHODAN shoret shutdown_-h_now si14 simukis_ sipa SirChurchill sirspazzolot ski ski_ skypers sleepybu1 SLi slobo sm smarter smlgs so Soft sohum solancile solarus solirc sordina1 SoupEvil Sourceless sp3ctum_ spektroskop Spockz Squid_Tamer ssbr Starfire_ stass statusfa1led stelleg stepcut steshaw stiell stomp studybot_ stuntaneous suiside sunfun Sunhay sunnavy_ SuperNoeMan supersym supki Svedrin Swizec swook` tac tahu talzeus_ tamiko Taneb Tarential taruti tavelram_ taylorgb td123_ tdammers Tehnix Tekerson_ Tene tensorpudding tero- Tesseraction tessier tg Th0mas_ thalassarche tharper theDon theorbtwo TheSpectre thetallguy thetallguy1 thirsteh thorkilnaur__ thorsten1 thorsten` thoughtpolice Thra11 threedaymonk threesome thunderrd tiffany Tinned_Tuna tippenein tjohnson tmiw TML tobyo1 tomaw tomboy65 tomejaguar tomh- tommd tomprince torkjak tpsinnem Tribal tridactyla trism tromp_ troydm ts33kr tswett ttm tudalex tulcod tunixman tvaalen twanvl Twey tych0 tylergillies_ udoprog Ulrar uniquenick unperceptually68 upgrayeddd Urchin uu1101 valdyn Valodim ve vehk Velpoman Vendethiel vhz_ vili vivekrai vmeson vnz vobi volitek vpm Vq vvein vvv wagle Walther warpy Watcher7 waterlaz wavewave wbruce wchun weie wereHamster whaletechno WhereIsMySpoon wilfredh willb1 Will| Wizcrack Wizek wolfnn wollw wormphlegm wting wto_ wunki Wuzzy xaimus xcthulhu xcv xenophon xilo XMunkki_ xnyhps Xorlev xorox90_ xplat xplat_ xrl xrq xymox Y_Less yacks yam yan_ Yaniel yano Yawgmoth_ Ycros yeltzooo yiannis_1 yogert yogurt_truck YoungFrog zaiste zaphar_ps Zariel zeiris_ zenzike_ zero7 zerokarmaleft Zesler ziman zoktar zomg zorzar zrot zugz zvrba zw01 zxq9 zz_nh2]
2013-07-25 19:19:34	--	Channel #haskell: 1078 nicks (2 ops, 0 halfops, 0 voices, 1076 normals)
2013-07-25 19:19:34	--	URL for #haskell: http://www.haskell.org/
2013-07-25 19:19:48	--	Mode #haskell [+CLcnpt]
2013-07-25 19:19:48	--	Channel created on Sun, 26 Nov 2006 07:42:48
2013-07-25 19:19:55	<--	litherum (~litherum@67-148-50-158.dia.static.qwest.net) has quit (Client Quit)
2013-07-25 19:20:13	-->	litherum (~litherum@67-148-50-158.dia.static.qwest.net) has joined #haskell
2013-07-25 19:21:03	-->	oleo (~oleo@xdsl-78-35-145-13.netcologne.de) has joined #haskell
2013-07-25 19:21:05	-->	xinming (~xinming@125.82.198.249) has joined #haskell
2013-07-25 19:21:15	-->	jchild (~textual@rrcs-50-75-181-175.nys.biz.rr.com) has joined #haskell
2013-07-25 19:21:49	<--	kushal (~kdas@fedora/kushal) has quit (Quit: Leaving)
2013-07-25 19:22:43	ParahSailin	what is an interesting library that uses arrows
2013-07-25 19:22:46	<--	xcthulhu (~xcthulhu@c-98-220-235-232.hsd1.il.comcast.net) has quit (Quit: xcthulhu)
2013-07-25 19:22:47	-->	csakatoku (~csakatoku@softbank126009008011.bbtec.net) has joined #haskell
2013-07-25 19:23:40	-->	zinfandel (~zinfandel@62.106.23.60) has joined #haskell
2013-07-26 08:54:49	--	irc: disconnected from server
2013-07-26 12:03:14	-->	benoit (~benoit@130.185.130.212) has joined #haskell
2013-07-26 12:03:14	--	Topic for #haskell is "http://www.haskell.org | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | Administrative issues: #haskell-ops | Hackage down? http://hdiff.luite.com"
2013-07-26 12:03:14	--	Topic set by mauke (~mauke@p3m/member/mauke) on Wed, 17 Jul 2013 13:52:43
2013-07-26 12:03:14	--	Nicks #haskell: [@ChanServ @Igloo [[zz]] [edwtjo] \q __main__ _br_ _flow_ _justjust `0660 `^_^v `bps `fogus a11235 ab9rf acfoltzer acidi Adeon adimit_away Adios_ adlan adnap aess aformeny agumonkey agundry ahf ahihi akahn akiress_ akraut akurei aleator_ alexander__b alexs Alice3 allsystemsarego alpounet Amadiro amosr anachron anders^^_ andrewsw anildigital aninhumer anon1231 AntiSpamMeta anyfoo apaku araujo arbn arcatan args[0] aristid Ark1 arkeet arkx Arnoldz arnsholt arossouw asante asjo asQuirreL aszlig Athas augur averell away_sondr3 Axman6 b2coutts b52 b_jonas banjiewen barrucadu bartavelle Baughn bbee bbloom bcoca bcoppens bd_ bduc beckerb_ Beetny Belgarion0 benoit benprew bentrevor bergmark betawaffle bezik bgamari bholst_ Bigcheese BigEndian bigs bind bio- birkenfeld biscarch bitonic BitPuffin bitraten blakesmith BlastHardcheese Blkt BMeph bobry bobthenameless_ bogdanp bogner_ Boney boothead Boreeas bqp brainproxy brainwash Brando753 brandonw brendan brett BrianHV brianloveswords briden brisbin brixen bscarlet bstrie buetow burp Bwild bxc ByronJohnson bytbox bz c_14 c_wraith CADD cads cajla Cale caligula__ canar canissimia canta capisce_ CaptainLex carter_away catwiesel ccasin ccxCZ cdidd cdk_ ceii centrinia Cerise charlesofarrell_ cheezey chickenflu chirpsalot ChongLi Chousuke chrisbuchholz chrisdone chrisdotcode_ chrra chuzz ciaranm CindyLinz cjay clampz ClaudiusMaximus Clint clog cmsd2 cods coeus colah_ compnaion_cbue confound_ copton copumpkin CosmicRay Counter-Strike cow-orke1 Cromulent cronject cross cruxeternus Cryovat csakatoku cscherrer cschneid cynick cyphase dabradley dakrone dalaing1 dan_johnsin danr danvet dario^CIP Darkflux DarkFox Dashkal dav davd davean davorak_ davorb-cellphone dcoutts dcoutts_ de-Vri-es deavid Deewiant def-lkb_ deggisv2 demolithion dEPy desc|zenbook DexterLB dextrey dialelo DigitalKiwi dilinger_ divarvel dixie_ djahandarie dju dlundy dmarker dmp1ce dmwit dobblego dogmaT dolio DolphR donri doomlord doshitan dpwright dqd Draconx Draggor drbean DrCode drdo dreixel_ drewr drmegahertz dropdrive DrSyzygy dsantiago dschoepe dsfox1 dsirenko dsp_ DT`` Dtgr duairc duikboot dumbhat DustyDingo dwierenga Dybber dyreshark eacameron EarlGray^^ earthy eb4890 ecube edkk Edoxile edsko Eduard_Munteanu edunham ehamberg ehd ejls eL_Bart0 electrogeek elgot Eliel Elision elliott ELLIOTTCABLE em Endy Enigmagic ent Entroacceptor epsylon epta ericmj Eridius ernst erochester ethercrow etrepum EvilMachine Excureo eyck_ Ezku ezrios f8l fabjan fall_ farn fayden federkasten felipe_ fergusnoble fihi09``` fikusz finnrobi FireFly floatingman flori flowsnake flux folone fran Franciman franksh FreeFull frontend1oader froztbyte frx fry fryguybob ft Fubar^ Fuco_ Fuuzetsu FUZxxl fxr fxrh GasaiYuno gautamc gbarboza gbeshers gbluma_ gds geal geekosaur gemelen genisage gentleben geoffh gereedy germanmushroom ggherdov ggreg ghorn ghorn_ Ghoul_ Gilly_ gnuvince goldkatze goodmanio Gothmog_ go|dfish gpampara Gracenotes greymalkin gridaphobe gseitz_ gspr guerrilla Guest10475 Guest76380 Guest88661 guymann h_chiro_ haasn hackagebot Hafydd HalfWayMan hamid_ hamishmack hape01 Hardolaf harovali1 hashcat heath Heffalump helgikrs hexagoxel hiptobecubic hiratara hiredman hive-mind hiyakashi honza horlicks hpaste hpc hpd hsyl20 HugoDaniel hvr ibid Icewing idnar idntfy ido idoru imalsogreg inarru inr insejn int-e integral Internet13 iol ion ipuustin iri`away Irtopiste_ isenmann ISF ismlages isomorphic isomorphismes iteratee_ iulian ivan\ ivan` ixian Jaak jackhill jaimef james-ubc jamwt jang1 janinge janne- jaspervd1 javawizard jayne jbauman jbracker jdoliner Jello_Raptor Jimi` jix jkoppel jkpl jlaire jlamothe jlewis jliikka jlouis jmcarthur jmcarthur_mobile jml joachifm joar jobstijl jodaro joe9 joelteon joeyh johanbev_ JohnBat26 johnw joneshf-laptop joneshf-work Jonno_FTW Jonte joogi jophish jorick joshc jozefg JPohlmann jrib jroesch jrslepak jssanders JuanDaugherty juhp julmac junsuijin JustAPerson jyyou k0ral Kabaka kaictl kakos kallisti kamatsu KaneTW kaol kav kaw kazimir42 kcj Ke kerrick Khady Khisanth killy9999 kingugo kini Kinnison Kiryx KitB kloeri kludge` klugez Kneiva_ knyppeldynan knz koala_man koninkje_away kooga kosmikus kqr1 Krakarn kranius_ kryft kryptiskt kshannon ktosiek Kuba Kuraitou kushal kxra Kyzza lahwran lambdabot Laney latro`a lattenwald LeaChim leifw lenstr leroux Lethalman levi Licenser lightquake linduxed liori Liskni_si lispy liszt liyang ljhms_ LK4D4 lokydor lopex loteriety lpsmith lpvb luite lulf luminous lunarjar lusory M-ou-se m0g m3ga machisuj- machisuji macron magicman mahogny Maior majoh mak` maksbotan malorie_ mami_ mandarg` mantovani maoe mapreduc1 marienz Martty MasseR_ mattp__ matzo mauke Maxdamantus maximveksler Mayzie mceier McManiaC mechairo` MedDev mee melter mendez_ meretrix merijn MetaCosm mgaare mgregson_ mgsloan mietek mike2 mike4_ mikecaruso mikee mikeplus64 milessabin milli mimi_vx MindlessDrone mirsal misv mithsv mixi mjrosenb MK_FG mkrull mlinksva mmaruseacph2 mmathis MnO2 MoALTz Modius mokus mollerstrand monochrom mononofu Morgawr mornfall morolin mortberg Mortomes mr- mrd_ mrpantoufle MrRacoon mrshoe MrWoohoo mstksg munro mux mviljamaa mxf myme1 MyrAchle n-dolio n00dle Nahra_ nanothief Natch natte ndonaldson NeatBasis_ necroyeti neektza1 neena nelk neurocyte newsham Nickeeh nicoo Nik05 nik_89 niko nikolah nilg Nimatek ninegrid ninwa ninzine Nisstyre nkpart nlogax no-n no7hing noam noddy2OOO nominolo noplamodo notdan nschoe ntus1017 nu11ptr nullcone_ nuttycom1 nwf nxorg8 obcode ocharles Odd_Bloke ofan ogew oldmanstan OlegYch opqdonut optimusbrine OrangeDuck ormaaj Ornedan orospakr ortmage OscarZ_ osfameron osnr othiym23 otterdam otto_s_ ousado Paks palmje pantech Pantsu ParahSail1n ParahSailin parcs paullik pcapriotti pdxleif peddie Pegleg peltchu Pengoo perlite perspectival petanqk petantik petapetapeta petekaz`` petercoulton peterhil pettter_ pfoetchen pharaun phienone Philippa Philonous_ Phlogistique PHO_ phryk pi8029 pikhq pingveno pjstadig pkkm Placinta Plex- plhk plucas pnielsen popx poucet pqmodn_ pr Pranz predator217 preflex profmakx prophile Proteumus ps-auxw ptek Ptival purefn puzza007 pygospa pyrtsa pyykkis Qfwfq QinGW quchen quicksilver qwandor qz RageOfThou raid Ralith Rarrikins ravenvz RayNbow`TU Raynes Raynos Razz rce redjohn redneb ReinH Reisen Reite relrod Rembane rfw rgrinberg rhodesd RichyB rishabhjain_ Riussi_ rmunroe robbert robinbb roelbruggink rpenguin rs0 Rutger`_ ryanakca s4msung s_quark Saeppel Sagi saiam Saizan sajith saml satshaba1 saurik sbahra[] schlumpi schoppenhauer sclv sclv_ scottschecter scshunt sdx23 seantallen SegFaultAX sellout seneca setmeaway2 sevvie sg Sgeo sgso shachaf shanse shennyg shepheb shiona Shozan shutdown_-h_now si14 silasm simukis_ sipa SirChurchill sirspazzolot skchrko ski ski_ skypers slack1256 sleepybu1 SLi slobo_ sm smarter smlgs so Soft sohum solancile solarus solirc solrize_ Sonderblade sopvop sordina1 SoupE Sourceless sp3ctum_ spektroskop Spockz Squid_Tamer ssbr` sshack Starfire_ stass statusfa1led stelleg stepcut stevejb stiell stomp studybot_ stuntaneous suiside sunfun Sunhay sunnavy_ SuperNoeMan supersym supki Svedrin swook` synonymous1 t7 tahu talzeus talzeus_ tamiko Tarential taruti tavelram_ taylorgb td123_ tdammers Tehnix Tekerson_ Tene tensorpudding tero- tertl3 Tesseraction tessier tg Th0mas theDon theorbtwo TheSpectre thetallguy thetallguy2 thirsteh ThomasLocke thorkilnaur__ thorsten1 thorsten` thoughtpolice threedaymonk threesome thunderrd timbod Tinned_Tuna tippenein tmiw TML tomaw tomboy65 tomejaguar tomh- tomprince torkjak totos tpsinnem Tribal tridactyla tromp_ troydm ts33kr tswett ttm tudalex tulcod tunixman tvaalen twanvl_ Twey tych0 tylergillies_ udoprog Ue Ulrar upgrayeddd uu1101 valdyn Valodim ve vehk Vendethiel vhz_ vijaykiran vili vishesh vivekrai vmeson vnz vobi volitek Vorpal vpm Vq vvein vvv vw21 wagle Walther warpaint warpy Watcher7 waterlaz wavewave wchun weie wereHamster whaletechno WhereIsMySpoon wilfredh willb1 Will| Wizek wolfnn wollw wormphlegm wting_ wto wtw wunki xaimus xcv xenophon xilo xinming xl1 XMunkki_ xnyhps Xorlev xorox90_ xplat xrl xrq xymox yacks yam yan_ Yaniel yano Yawgmoth_ Ycros yeltzooo yezariaely yiannis_1 yogurt_truck YoungFrog zaiste zaphar_p1 Zariel zeiris_ zenzike_ zero7 zerokarmaleft Zesler ziman zoktar zomg zorzar zrot zugz zvrba zw01 zxq9 zz_nh2 zzing]
2013-07-26 12:03:14	--	Channel #haskell: 1050 nicks (2 ops, 0 halfops, 0 voices, 1048 normals)
2013-07-26 12:03:14	--	Notice(morgan.freenode.net): [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
2013-07-26 12:03:15	--	URL for #haskell: http://www.haskell.org/
2013-07-26 12:03:18	--	Mode #haskell [+CLcnpt]
2013-07-26 12:03:18	--	Channel created on Sun, 26 Nov 2006 07:42:48
2013-07-26 12:03:42	mr-	clearly the right type for (++) involves semigroup
2013-07-26 12:04:04	haasn	instance Reader?
2013-07-26 12:04:14	shachaf	Er.
2013-07-26 12:04:23	shachaf	Monad
2013-07-26 12:04:50	-->	marr (~ccc@dynamic-78-8-71-191.ssp.dialog.net.pl) has joined #haskell
2013-07-26 12:05:09	-->	benoit (~benoit@130.185.130.212) has joined #haskell
2013-07-26 12:05:09	--	Topic for #haskell is "http://www.haskell.org | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | Administrative issues: #haskell-ops | Hackage down? http://hdiff.luite.com"
2013-07-26 12:05:09	--	Topic set by mauke (~mauke@p3m/member/mauke) on Wed, 17 Jul 2013 13:52:43
2013-07-26 12:05:09	--	Nicks #haskell: [@ChanServ @Igloo [[zz]] [edwtjo] \q __main__ _br_ _flow_ _justjust `0660 `^_^v `bps `fogus a11235 ab9rf acfoltzer acidi Adeon adimit_away Adios_ adlan adnap aess aformeny agumonkey agundry ahf ahihi akahn akiress_ akraut akurei aleator_ alexander__b alexs Alice3 allsystemsarego alpounet Amadiro amosr anachron anders^^_ andrewsw anildigital aninhumer anon1231 AntiSpamMeta anyfoo apaku araujo arbn arcatan args[0] aristid Ark1 arkeet arkx Arnoldz arnsholt arossouw asante asjo asQuirreL aszlig Athas augur averell away_sondr3 Axman6 b2coutts b52 b_jonas banjiewen barrucadu bartavelle Baughn bbee bbloom bcoca bcoppens bd_ bduc beckerb_ Beetny Belgarion0 benoit benprew bentrevor bergmark betawaffle bezik bgamari bholst_ Bigcheese BigEndian bigs bind bio- birkenfeld biscarch bitonic BitPuffin bitraten blakesmith BlastHardcheese Blkt BMeph bobry bobthenameless_ bogdanp bogner_ Boney boothead Boreeas bqp brainproxy brainwash Brando753 brandonw brendan brett BrianHV brianloveswords briden brisbin brixen bscarlet bstrie buetow burp Bwild bxc ByronJohnson bytbox bz c_14 c_wraith CADD cads cajla Cale caligula__ canar canissimia canta capisce_ CaptainLex carter_away catwiesel ccasin ccxCZ cdidd cdk_ ceii centrinia Cerise charlesofarrell_ cheezey chickenflu chirpsalot ChongLi Chousuke chrisbuchholz chrisdone chrisdotcode_ chrra chuzz ciaranm CindyLinz cjay clampz ClaudiusMaximus Clint clog cmsd2 cods coeus colah_ compnaion_cbue confound_ copton copumpkin CosmicRay Counter-Strike cow-orke1 Cromulent cronject cross cruxeternus Cryovat csakatoku cscherrer cschneid cynick cyphase dabradley dakrone dalaing1 dan_johnsin danr danvet dario^CIP Darkflux DarkFox Dashkal dav davd davean davorak_ davorb-cellphone dcoutts dcoutts_ de-Vri-es deavid Deewiant def-lkb_ deggisv2 demolithion dEPy desc|zenbook DexterLB dextrey dialelo DigitalKiwi dilinger_ divarvel dixie_ djahandarie dju dlundy dmarker dmp1ce dmwit dobblego dogmaT dolio DolphR donri doomlord doshitan dpwright dqd Draconx Draggor drbean DrCode drdo dreixel_ drewr drmegahertz dropdrive DrSyzygy dsantiago dschoepe dsfox1 dsirenko dsp_ DT`` Dtgr duairc duikboot dumbhat DustyDingo dwierenga Dybber dyreshark eacameron EarlGray^^ earthy eb4890 ecube edkk Edoxile edsko Eduard_Munteanu edunham ehamberg ehd ejls eL_Bart0 electrogeek elgot Eliel Elision elliott ELLIOTTCABLE em Endy Enigmagic ent Entroacceptor epsylon epta ericmj Eridius ernst erochester ethercrow etrepum EvilMachine Excureo eyck_ Ezku ezrios f8l fabjan fall_ farn fayden federkasten felipe_ fergusnoble fihi09``` fikusz finnrobi FireFly floatingman flori flowsnake flux folone fran Franciman franksh FreeFull frontend1oader froztbyte frx fry fryguybob ft Fubar^ Fuco_ Fuuzetsu FUZxxl fxr fxrh GasaiYuno gautamc gbarboza gbeshers gbluma_ gds geal geekosaur gemelen genisage gentleben geoffh gereedy germanmushroom ggherdov ggreg ghorn ghorn_ Ghoul_ Gilly_ gnuvince goldkatze goodmanio Gothmog_ go|dfish gpampara Gracenotes greymalkin gridaphobe gseitz_ gspr guerrilla Guest10475 Guest76380 Guest88661 guymann h_chiro_ haasn hackagebot Hafydd HalfWayMan hamid_ hamishmack hape01 Hardolaf harovali1 hashcat heath Heffalump helgikrs hexagoxel hiptobecubic hiratara hiredman hive-mind hiyakashi honza horlicks hpaste hpc hpd hsyl20 HugoDaniel hvr ibid Icewing idnar idntfy ido idoru imalsogreg inarru inr insejn int-e integral Internet13 iol ion ipuustin iri`away Irtopiste_ isenmann ISF ismlages isomorphic isomorphismes iteratee_ iulian ivan\ ivan` ixian Jaak jackhill jaimef james-ubc jamwt jang1 janinge janne- jaspervd1 javawizard jayne jbauman jbracker jdoliner Jello_Raptor Jimi` jix jkoppel jkpl jlaire jlamothe jlewis jliikka jlouis jmcarthur jmcarthur_mobile jml joachifm joar jobstijl jodaro joe9 joelteon joeyh johanbev_ JohnBat26 johnw joneshf-laptop joneshf-work Jonno_FTW Jonte joogi jophish jorick joshc jozefg JPohlmann jrib jroesch jrslepak jssanders JuanDaugherty juhp julmac junsuijin JustAPerson jyyou k0ral Kabaka kaictl kakos kallisti kamatsu KaneTW kaol kav kaw kazimir42 kcj Ke kerrick Khady Khisanth killy9999 kingugo kini Kinnison Kiryx KitB kloeri kludge` klugez Kneiva_ knyppeldynan knz koala_man koninkje_away kooga kosmikus kqr1 Krakarn kranius_ kryft kryptiskt kshannon ktosiek Kuba Kuraitou kushal kxra Kyzza lahwran lambdabot Laney latro`a lattenwald LeaChim leifw lenstr leroux Lethalman levi Licenser lightquake linduxed liori Liskni_si lispy liszt liyang ljhms_ LK4D4 lokydor lopex loteriety lpsmith lpvb luite lulf luminous lunarjar lusory M-ou-se m0g m3ga machisuj- machisuji macron magicman mahogny Maior majoh mak` maksbotan malorie_ mami_ mandarg` mantovani maoe mapreduc1 marienz marr Martty MasseR_ mattp__ matzo mauke Maxdamantus maximveksler Mayzie mceier McManiaC mechairo` MedDev mee melter mendez_ meretrix merijn MetaCosm mgaare mgregson_ mgsloan mietek mike2 mike4_ mikecaruso mikee mikeplus64 milessabin milli mimi_vx MindlessDrone mirsal misv mithsv mixi mjrosenb MK_FG mkrull mlinksva mmaruseacph2 mmathis MnO2 MoALTz Modius mokus mollerstrand monochrom mononofu Morgawr mornfall morolin mortberg Mortomes mr- mrd_ mrpantoufle MrRacoon mrshoe MrWoohoo mstksg munro mux mviljamaa mxf myme1 MyrAchle n-dolio n00dle Nahra_ nanothief Natch natte ndonaldson NeatBasis_ necroyeti neektza1 neena nelk neurocyte newsham Nickeeh nicoo Nik05 nik_89 niko nikolah nilg Nimatek ninegrid ninwa ninzine Nisstyre nkpart nlogax no-n no7hing noam noddy2OOO nominolo noplamodo notdan nschoe ntus1017 nu11ptr nullcone_ nuttycom1 nwf nxorg8 obcode ocharles Odd_Bloke ofan ogew oldmanstan OlegYch opqdonut optimusbrine OrangeDuck ormaaj Ornedan orospakr ortmage OscarZ_ osfameron osnr othiym23 otterdam otto_s_ ousado Paks palmje pantech Pantsu ParahSail1n ParahSailin parcs paullik pcapriotti pdxleif peddie Pegleg peltchu Pengoo perlite perspectival petanqk petantik petapetapeta petekaz`` petercoulton peterhil pettter_ pfoetchen pharaun phienone Philippa Philonous_ Phlogistique PHO_ phryk pi8029 pikhq pingveno pjstadig pkkm Placinta Plex- plhk plucas pnielsen popx poucet pqmodn_ pr Pranz predator217 preflex profmakx prophile Proteumus ps-auxw ptek Ptival purefn puzza007 pygospa pyrtsa pyykkis Qfwfq QinGW quchen quicksilver qwandor qz RageOfThou raid Ralith Rarrikins ravenvz RayNbow`TU Raynes Raynos Razz rce redjohn redneb ReinH Reisen Reite relrod Rembane rfw rgrinberg rhodesd RichyB rishabhjain_ Riussi_ rmunroe robbert robinbb roelbruggink rpenguin rs0 Rutger`_ ryanakca s4msung s_quark Saeppel Sagi saiam Saizan sajith saml satshaba1 saurik sbahra[] schlumpi schoppenhauer sclv sclv_ scottschecter scshunt sdx23 seantallen SegFaultAX sellout seneca setmeaway2 sevvie sg Sgeo sgso shachaf shanse shennyg shepheb shiona Shozan shutdown_-h_now si14 silasm simukis_ sipa SirChurchill sirspazzolot skchrko ski ski_ skypers slack1256 sleepybu1 SLi slobo_ sm smarter smlgs so Soft sohum solancile solarus solirc solrize_ Sonderblade sopvop sordina1 SoupE Sourceless sp3ctum_ spektroskop Spockz Squid_Tamer ssbr` sshack Starfire_ stass statusfa1led stelleg stepcut stevejb stiell stomp studybot_ stuntaneous suiside sunfun Sunhay sunnavy_ SuperNoeMan supersym supki Svedrin swook` synonymous1 t7 tahu talzeus talzeus_ tamiko Tarential taruti tavelram_ taylorgb td123_ tdammers Tehnix Tekerson_ Tene tensorpudding tero- tertl3 Tesseraction tessier tg Th0mas theDon theorbtwo TheSpectre thetallguy thetallguy2 thirsteh ThomasLocke thorkilnaur__ thorsten1 thorsten` thoughtpolice threedaymonk threesome thunderrd timbod Tinned_Tuna tippenein tmiw TML tomaw tomboy65 tomejaguar tomh- tomprince torkjak totos tpsinnem Tribal tridactyla tromp_ troydm ts33kr tswett ttm tudalex tulcod tunixman tvaalen twanvl_ Twey tych0 tylergillies_ udoprog Ue Ulrar upgrayeddd uu1101 valdyn Valodim ve vehk Vendethiel vhz_ vijaykiran vili vishesh vivekrai vmeson vnz vobi volitek Vorpal vpm Vq vvein vvv vw21 wagle Walther warpaint warpy Watcher7 waterlaz wavewave wchun weie wereHamster whaletechno WhereIsMySpoon wilfredh willb1 Will| Wizek wolfnn wollw wormphlegm wting_ wto wtw wunki xaimus xcv xenophon xilo xinming xl1 XMunkki_ xnyhps Xorlev xorox90_ xplat xrl xrq xymox yacks yam yan_ Yaniel yano Yawgmoth_ Ycros yeltzooo yezariaely yiannis_1 yogurt_truck YoungFrog zaiste zaphar_p1 Zariel zeiris_ zenzike_ zero7 zerokarmaleft Zesler ziman zoktar zomg zorzar zrot zugz zvrba zw01 zxq9 zz_nh2 zzing]
2013-07-26 12:05:09	--	Channel #haskell: 1051 nicks (2 ops, 0 halfops, 0 voices, 1049 normals)
2013-07-26 12:05:10	--	URL for #haskell: http://www.haskell.org/
2013-07-26 12:05:11	haasn	that joke is still beyond me
2013-07-26 12:05:13	--	Mode #haskell [+CLcnpt]
2013-07-26 12:05:13	--	Channel created on Sun, 26 Nov 2006 07:42:48
2013-07-26 12:05:19	shachaf	It's no joke!
2013-07-26 12:05:26	shachaf	E.g. http://stackoverflow.com/questions/15418075/the-reader-monad
2013-07-26 12:05:51	shachaf	Comonoid r => Monad (r ->), Monoid r => Monad (r,)
2013-07-26 12:05:55	shachaf	Comonoid r => Comonad (r,), Monoid r => Comonad (r ->)
2013-07-26 12:06:14	<--	Qfwfq (~Qfwfq@unaffiliated/washirving) has quit (Ping timeout: 268 seconds)
2013-07-26 12:06:14	-->	shreesh (~shreesh@209.104.235.1) has joined #haskell
2013-07-26 12:06:52	<--	mandarg` (~user@67.202.108.110) has quit (Ping timeout: 276 seconds)
2013-07-26 12:07:06	haasn	    delete :: m -> () -- is the most useful Haskell function I've ever seen
2013-07-26 12:07:56	haasn	shachaf: yeah, that makes sense now
2013-07-26 12:08:05	haasn	I still think it's a joke
2013-07-26 12:08:18	shachaf	It still thinks you're a joke.
2013-07-26 12:09:03	-->	raichoo (~raichoo@mue-88-130-51-211.dsl.tropolys.de) has joined #haskell
2013-07-26 12:09:21	haasn	class instances can be so cruel sometimes
2013-07-26 12:09:29	haasn	especially Enum
2013-07-26 12:09:34	-->	megabeest (~user@i59202.upc-i.chello.nl) has joined #haskell
2013-07-26 12:10:07	shachaf	The Bird is Cruel!
2013-07-26 12:10:14	<--	shreesh (~shreesh@209.104.235.1) has quit (Ping timeout: 240 seconds)
2013-07-26 12:10:50	haasn	shachaf: so does edwardk have a comonoid package?
2013-07-26 12:11:18	shachaf	haasn: No.
2013-07-26 12:11:29	shachaf	But comonads are just comonoids in the category of endofunctors!
2013-07-26 12:12:03	haasn	I wonder what the dual of “lax 2-functor from a terminal bicategory” is
2013-07-26 12:12:36	shachaf	@quote bicategory
2013-07-26 12:12:36	lambdabot	copumpkin says: a monad is just a lax functor from a terminal bicategory, duh. fuck that monoid in category of endofunctors shit
2013-07-26 12:12:39	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-26 12:13:00	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-26 12:13:45	haasn	(would it be a lax functor from an initial bicategory?)
2013-07-26 12:13:52	<--	CADD (~CADD@12.227.104.109) has quit (Read error: Operation timed out)
2013-07-26 12:14:02	shachaf	I don't think so...
2013-07-26 12:14:02	haasn	keeping in mind I have no idea what a lax functor or a bicategory is
2013-07-26 12:14:40	<--	coeus (~coeus@dslb-084-061-103-168.pools.arcor-ip.net) has quit (Ping timeout: 276 seconds)
2013-07-26 12:14:45	shachaf	I think it'd be an oplax functor from a terminal bicategory.
2013-07-26 12:14:53	-->	jophish_ (~jophish@cpc2-oxfd18-2-0-cust473.4-3.cable.virginmedia.com) has joined #haskell
2013-07-26 12:15:01	shachaf	I mostly think that because nlab says it...
2013-07-26 12:15:07	shachaf	But it makes sense.
2013-07-26 12:15:08	merijn	Someone got category theory in my haskell again :(
2013-07-26 12:15:30	shachaf	haasn: A strong functor has f(ab)=f(a)f(b), f(1)=1
2013-07-26 12:15:39	shachaf	haasn: With a lax functor you just have ->, not =
2013-07-26 12:15:46	shachaf	(In the right category.)
2013-07-26 12:15:46	haasn	ok
2013-07-26 12:16:26	haasn	that is much simpler than the ncatlab explanation
2013-07-26 12:16:28	haasn	“See the definition at pseudofunctor, and let the natural isomorphisms in that definition be merely natural transformations.”
2013-07-26 12:16:38	<--	redneb (~redneb@c-67-177-185-135.hsd1.in.comcast.net) has left #haskell
2013-07-26 12:16:46	shachaf	Right, those arrows are natural transformations/isomorphisms.
2013-07-26 12:16:52	<--	MnO2 (~MnO2@nat/yahoo/x-qlqnuixurzxqmgqr) has quit (Quit: MnO2)
2013-07-26 12:16:55	shachaf	Now, a terminal bicategory is, I assume, a lot like a terminal category, i.e. one with one object and one arrow.
2013-07-26 12:16:58	haasn	it makes sense now that I've seen your version
2013-07-26 12:17:14	shachaf	So a strong -- ah, OK, I won't keep working it out in here, then. :-)
2013-07-26 12:17:40	shachaf	Anyway it pretty much comes out as a monad.
2013-07-26 12:17:48	Ghoul_	I can't make pureOpt typecheck ; http://lpaste.net/91225 . Can someone help?
2013-07-26 12:18:10	haasn	shachaf: yeah, I've looked up the definitions and worked it out before, just forgotten everything in the meantime
2013-07-26 12:18:57	-->	phischu (~pschuster@p4FD306B2.dip0.t-ipconnect.de) has joined #haskell
2013-07-26 12:19:02	mauke	pureOpt :: AnyOptimization -> (forall a. (Optimization a, Show a) => a -> r) -> r
2013-07-26 12:19:04	<--	joar (~joar@fsf/member/jwandborg) has quit (Read error: Connection reset by peer)
2013-07-26 12:19:49	Ghoul_	mauke: thanks
2013-07-26 12:19:57	-->	xl2 (~xl@124.205.93.160) has joined #haskell
2013-07-26 12:19:58	shachaf	Ghoul_: It's probably in your best interest to figure out how to make that work without an existential, for the reasons I outlined above.
2013-07-26 12:20:00	mauke	the whole thing is crazy, of course
2013-07-26 12:20:05	shachaf	But I'm not going to dwell on it.
2013-07-26 12:20:25	shachaf	The FAQ also talks about what you're doing and why you probably shouldn't do it.
2013-07-26 12:20:29	mauke	data Optimization = MakeSmaller | MakeFaster
2013-07-26 12:21:11	shachaf	Or newtype Optimization = Opt { runOpt :: [Expr] -> [Expr] }
2013-07-26 12:21:13	haasn	or data Optimization = Optimization { [Expr] -> a -> [Expr] } -- depending on which way you want to extend stuff
2013-07-26 12:21:26	haasn	err yeah, what shachaf said
2013-07-26 12:21:49	<--	xl1 (~xl@125.39.117.36) has quit (Ping timeout: 276 seconds)
2013-07-26 12:21:55	shachaf	It's known as the "Expr" problem, just for you.
2013-07-26 12:22:09	haasn	for me?
2013-07-26 12:22:19	Ghoul_	data Optimization = a | b feels less "pluggable"
2013-07-26 12:22:22	-->	CADD (~CADD@12.227.104.109) has joined #haskell
2013-07-26 12:22:26	haasn	Ghoul_: see: what shachaf said
2013-07-26 12:22:28	<--	DolphR (~dolph@0149000198.0.fullrate.dk) has quit (Ping timeout: 276 seconds)
2013-07-26 12:22:38	shachaf	See also: The expression problem.
2013-07-26 12:22:46	--	CADD is now known as Guest28764
2013-07-26 12:23:04	Ghoul_	I don't know what the thing shachaf proposed means, but I'll figure it out, thanks
2013-07-26 12:23:11	shachaf	But I've given up already. I'm quick to give up.
2013-07-26 12:23:12	haasn	I remember a good stackoverflow thread on the expression problem but I seem to have lost it in my history
2013-07-26 12:23:28	-->	twelsh (56b1cf67@gateway/web/freenode/ip.86.177.207.103) has joined #haskell
2013-07-26 12:25:14	-->	ghorn__ (~ghorn@94-225-161-158.access.telenet.be) has joined #haskell
2013-07-26 12:25:27	<--	Guest28764 (~CADD@12.227.104.109) has quit (Client Quit)
2013-07-26 12:26:34	-->	RoXtein (~roxtein@di18.di.fct.unl.pt) has joined #haskell
2013-07-26 12:26:35	<--	mandarg` (~user@67.202.108.110) has quit (Ping timeout: 268 seconds)
2013-07-26 12:27:06	<--	ntus1017 (~ntus1017@113.173.220.22) has quit (Remote host closed the connection)
2013-07-26 12:27:12	<--	kingugo (~kingugo@196.46.245.51) has quit (Ping timeout: 268 seconds)
2013-07-26 12:27:28	merijn	I'm guessing the most efficient way to implement a cyclic list with insertion would be "data Window a = Window [a] [a]", popping from the first list and then consing to the socket and reversing the second once the first list hits []?
2013-07-26 12:27:52	-->	rishabhjain (~anonymous@14.139.122.114) has joined #haskell
2013-07-26 12:27:58	haasn	digging through logs.. 2013-04-24 14:02:41 Cale beaky: You can solve the expression problem using them <- now I sort of want to know what beaky asked here, but I don't have him in my logs
2013-07-26 12:28:10	<--	rishabhjain_ (~anonymous@14.139.122.114) has quit (Read error: Connection reset by peer)
2013-07-26 12:28:24	shachaf	merijn: You mean like a zipper?
2013-07-26 12:28:49	haasn	most of the ‘expression problem’ hits in my log seem to be by shachaf
2013-07-26 12:28:57	dalaing1	there's always tagless final encoding for the expression problem
2013-07-26 12:29:21	shachaf	haasn: It's not a great name for it because it isn't really a problem.
2013-07-26 12:29:38	shachaf	(You have beaky on /ignore? You have no idea what you're missing!)
2013-07-26 12:30:03	mauke	haasn: we have public logs
2013-07-26 12:30:14	--	anildigital is now known as anildigital_away
2013-07-26 12:30:16	haasn	mauke: good point! forgot about those
2013-07-26 12:30:41	taylorgb	haasn: beaky was asking about type classes
2013-07-26 12:30:50	-->	cognominal (~cognomina@195.167.200.5) has joined #haskell
2013-07-26 12:31:37	haasn	I'd sort of think he asked “what are type classes?” except I don't see why Cale would respond that way in particular
2013-07-26 12:31:37	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-26 12:31:57	shachaf	Well, the logs are in the topic.
2013-07-26 12:32:21	taylorgb	I guess this was the prompt: 12:55 < beaky> how do Typeclasses solve the expression problem?
2013-07-26 12:32:42	haasn	oh. I see it now, which makes the response a bit more amusing
2013-07-26 12:32:43	taylorgb	To which Cale says that you can solve the expression problem using them
2013-07-26 12:33:42	<--	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has quit (Ping timeout: 264 seconds)
2013-07-26 12:33:48	-->	hamid (~nithp@unaffiliated/hamid) has joined #haskell
2013-07-26 12:34:17	-->	q66 (~quaker66@213.191.105.214) has joined #haskell
2013-07-26 12:34:24	<--	xcv (~xcv@85-220-1-18.dsl.dynamic.simnet.is) has quit (Remote host closed the connection)
2013-07-26 12:35:13	<--	james-ubc (~james@66.183.102.136) has quit (Ping timeout: 268 seconds)
2013-07-26 12:35:50	<--	cognominal (~cognomina@195.167.200.5) has quit (Ping timeout: 240 seconds)
2013-07-26 12:36:43	-->	[1]Endy (~Endy@147.30.99.182) has joined #haskell
2013-07-26 12:36:45	dalaing1	Ghoul_:  for typeclass / expression problem info, see homework 5 here http://www.seas.upenn.edu/~cis194/lectures.html for a taste, and for the full treatment -> http://okmij.org/ftp/tagless-final/course/index.html
2013-07-26 12:36:50	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-26 12:36:51	ousado	hum
2013-07-26 12:37:25	<--	hamid_ (~nithp@unaffiliated/hamid) has quit (Ping timeout: 276 seconds)
2013-07-26 12:37:25	-->	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has joined #haskell
2013-07-26 12:37:29	<--	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has quit (Remote host closed the connection)
2013-07-26 12:37:39	-->	james-ubc (~james@66.183.102.136) has joined #haskell
2013-07-26 12:37:42	-->	simukis_ (~simukis_@88-119-48-95.static.zebra.lt) has joined #haskell
2013-07-26 12:38:06	ousado	wouldn't that be just certain implementations of type-classes that "solve" the expression problem?
2013-07-26 12:38:16	<--	twelsh (56b1cf67@gateway/web/freenode/ip.86.177.207.103) has quit (Quit: Page closed)
2013-07-26 12:38:27	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-26 12:38:38	<--	wolfnn (~wolfnn@AMontsouris-651-1-19-74.w82-123.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2013-07-26 12:39:10	 *	hackagebot katt 0.2.0.1 - Client for the Kattis judge system.  http://hackage.haskell.org/package/katt-0.2.0.1 (DavidNilsson)
2013-07-26 12:40:33	ousado	.. in e.g. felix there are typeclasses, and they require recompilation.
2013-07-26 12:40:37	<--	Endy (~Endy@147.30.99.182) has quit (Ping timeout: 248 seconds)
2013-07-26 12:40:38	--	[1]Endy is now known as Endy
2013-07-26 12:41:22	-->	DrTeggy (~grust@HSI-KBW-149-172-224-93.hsi13.kabel-badenwuerttemberg.de) has joined #haskell
2013-07-26 12:41:47	-->	htau (~chatzilla@adsl-76-237-226-99.dsl.rcsntx.sbcglobal.net) has joined #haskell
2013-07-26 12:43:08	Placinta	Is there a way to get the source code of a function from inside ghci?
2013-07-26 12:43:15	shachaf	No.
2013-07-26 12:43:25	shachaf	You can use :i to find out where it's defined, though.
2013-07-26 12:43:43	<--	Phlogistique (~no@37.59.47.45) has quit (Read error: Connection reset by peer)
2013-07-26 12:44:02	Placinta	I could never understand why a good docs feature isnt implemented in gchi : (
2013-07-26 12:44:21	<--	nschoe (~nschoe@204.79.138.88.rev.sfr.net) has quit (Quit: This computer has gone to sleep)
2013-07-26 12:48:13	<--	juhp (~petersen@redhat/juhp) has quit (Quit: Ex-Chat)
2013-07-26 12:49:46	<--	hamid (~nithp@unaffiliated/hamid) has quit (Ping timeout: 276 seconds)
2013-07-26 12:50:11	<--	megabeest (~user@i59202.upc-i.chello.nl) has quit (Remote host closed the connection)
2013-07-26 12:50:32	<--	slack1256 (~slack@181-160-174-32.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2013-07-26 12:51:37	-->	zbcm (~zbcm@CPE-58-169-84-20.lns1.bat.bigpond.net.au) has joined #haskell
2013-07-26 12:52:38	<--	dobblego (~nobody@stargate.it.nicta.com.au) has quit (Ping timeout: 240 seconds)
2013-07-26 12:54:20	<--	csakatoku (~csakatoku@em119-72-199-73.pool.e-mobile.ne.jp) has quit (Remote host closed the connection)
2013-07-26 12:55:02	-->	thalassarche (~thalassar@unaffiliated/thalassarche) has joined #haskell
2013-07-26 12:56:14	-->	csakatoku (~csakatoku@em119-72-199-73.pool.e-mobile.ne.jp) has joined #haskell
2013-07-26 12:56:15	-->	Croms (~dv@92.109.224.112) has joined #haskell
2013-07-26 12:56:44	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-26 12:57:34	-->	morazow (~morazow@92.36.136.95.rev.vodafone.pt) has joined #haskell
2013-07-26 12:58:28	-->	twanvl (~Twan@dhcp-077-250-086-217.chello.nl) has joined #haskell
2013-07-26 12:58:53	<--	Kuba (~jakub@unaffiliated/kuba) has quit (Ping timeout: 240 seconds)
2013-07-26 13:00:26	-->	bgilbert (~textual@108-239-26-79.lightspeed.chtnsc.sbcglobal.net) has joined #haskell
2013-07-26 13:00:47	<--	[[zz]] (~q@node-6om.pool-125-25.dynamic.totbb.net) has quit (Ping timeout: 240 seconds)
2013-07-26 13:01:54	<--	twanvl_ (~Twan@dhcp-077-250-086-217.chello.nl) has quit (Ping timeout: 264 seconds)
2013-07-26 13:02:46	-->	Earnestly (~Earnestly@unaffiliated/earnestly) has joined #haskell
2013-07-26 13:03:16	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-26 13:03:22	Ghoul_	dalaing1: thanks!
2013-07-26 13:03:40	-->	catwiesle (~catwiesel@p5DDAADB8.dip0.t-ipconnect.de) has joined #haskell
2013-07-26 13:04:31	dalaing1	Ghoul_: not a problem
2013-07-26 13:04:57	<--	catwiesel (~catwiesel@p579D3282.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2013-07-26 13:05:41	<--	mandarg` (~user@67.202.108.110) has quit (Ping timeout: 248 seconds)
2013-07-26 13:05:53	<--	erochester (~erocheste@c-71-206-171-217.hsd1.va.comcast.net) has quit (Quit: Leaving.)
2013-07-26 13:07:33	<--	csakatoku (~csakatoku@em119-72-199-73.pool.e-mobile.ne.jp) has quit (Remote host closed the connection)
2013-07-26 13:08:44	<--	pkkm (~pawel@daf204.neoplus.adsl.tpnet.pl) has quit (Remote host closed the connection)
2013-07-26 13:09:27	<--	edsko (~edsko@p57B894DB.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2013-07-26 13:09:31	-->	pkkm (~pawel@daf204.neoplus.adsl.tpnet.pl) has joined #haskell
2013-07-26 13:10:08	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-26 13:12:07	-->	reinoud (~reinoud@aardappel.xs4all.nl) has joined #haskell
2013-07-26 13:12:16	<--	paullik (~paullik@unaffiliated/paullik) has quit (Ping timeout: 256 seconds)
2013-07-26 13:14:35	-->	[[zz]] (~q@node-rlw.pool-180-180.dynamic.totbb.net) has joined #haskell
2013-07-26 13:15:29	-->	amathew (~Adium@cpe-74-68-136-238.nyc.res.rr.com) has joined #haskell
2013-07-26 13:15:29	<--	floatingman (~dnewman@c-68-47-207-131.hsd1.tn.comcast.net) has quit (Read error: Connection reset by peer)
2013-07-26 13:15:43	-->	k00mi (~koomi@dslb-188-105-097-164.pools.arcor-ip.net) has joined #haskell
2013-07-26 13:15:54	<--	_justjust (~justjust@146-52-59-198-dynip.superkabel.de) has quit (Quit: Leaving.)
2013-07-26 13:16:31	-->	chatsiri_ (~chatsiri_@171.6.177.128) has joined #haskell
2013-07-26 13:16:40	<--	beckerb_ (~beckerb@2001:660:3013:3:7aac:c0ff:fea0:a7b4) has quit (Ping timeout: 245 seconds)
2013-07-26 13:16:58	<--	zbcm (~zbcm@CPE-58-169-84-20.lns1.bat.bigpond.net.au) has quit (Read error: No route to host)
2013-07-26 13:17:16	-->	Finnfinn (~Julian@ip-178-201-72-31.unitymediagroup.de) has joined #haskell
2013-07-26 13:17:26	<--	amathew (~Adium@cpe-74-68-136-238.nyc.res.rr.com) has quit (Client Quit)
2013-07-26 13:17:59	-->	danbru (~db@h95-155-207-37.dynamic.se.alltele.net) has joined #haskell
2013-07-26 13:18:14	<--	isenmann (~isenmann@blackhole.science-computing.de) has quit (Quit: Leaving.)
2013-07-26 13:18:19	-->	wolfnn (~wolfnn@AMontsouris-651-1-19-74.w82-123.abo.wanadoo.fr) has joined #haskell
2013-07-26 13:19:58	-->	arborist (~arborist@f050022173.adsl.alicedsl.de) has joined #haskell
2013-07-26 13:20:02	<--	Sgeo (~quassel@ool-ad034ea6.dyn.optonline.net) has quit (Read error: Connection reset by peer)
2013-07-26 13:20:18	Ghoul_	:t pure
2013-07-26 13:20:19	lambdabot	Applicative f => a -> f a
2013-07-26 13:20:45	mauke	:t puree
2013-07-26 13:20:46	lambdabot	t -> ()
2013-07-26 13:21:03	hpc	you forgot the accent
2013-07-26 13:21:18	mauke	sacre bleu
2013-07-26 13:21:25	Ghoul_	I couldn't find the reason for not using ExistentialQuantification in what shachaf said or on the wiki
2013-07-26 13:21:39	merijn	mauke: You forgot the accent there too
2013-07-26 13:21:47	merijn	@where existential-antipattern
2013-07-26 13:21:47	lambdabot	"Haskell Antipattern: Existential Typeclass" by Luke Palmer at <http://lukepalmer.wordpress.com/2010/01/24/haskell-antipattern-existential-typeclass/>
2013-07-26 13:22:02	Ghoul_	cheers
2013-07-26 13:22:16	-->	PJBoy (~PJBoy@cpc4-aztw24-2-0-cust253.aztw.cable.virginmedia.com) has joined #haskell
2013-07-26 13:23:01	-->	amathew (~Adium@cpe-74-68-136-238.nyc.res.rr.com) has joined #haskell
2013-07-26 13:23:11	jophish_	Yo yo yo
2013-07-26 13:23:33	<--	dcoutts_ (~dcoutts@unaffiliated/dcoutts) has quit (Ping timeout: 264 seconds)
2013-07-26 13:24:32	Ghoul_	Ooh, I get it now.
2013-07-26 13:25:17	Ghoul_	Yeah, it doesn't really make sense to make all your types super complex when it's quite easy to just do it like that, I guess.
2013-07-26 13:27:02	<--	Beetny (~Beetny@ppp118-208-131-192.lns20.bne1.internode.on.net) has quit (Ping timeout: 240 seconds)
2013-07-26 13:27:04	merijn	Ghoul_: There's usecases for existential quantification (obviously, else it wouldn't exist!), but, like making your own typeclasses, they are rather rare
2013-07-26 13:27:56	-->	kartoffel (~blebla@public-docking-pat-hg-mapped-0050.ethz.ch) has joined #haskell
2013-07-26 13:28:08	Ghoul_	is it more memory efficient to use existential quantification? Do you know if it decays down to RTTI-like stuff, or whether they are equivalent
2013-07-26 13:28:09	jophish_	I have a library which parses a C like language, and uses LLVM to JIT this code and run in. Much like a scripting language. The parser I've written in C++ is great, but the code is overly complicated and full of boilerplate. I'd really like to use Haskell for parsing and AST construction (at the least), but I do want to keep the C++ interface to this library. What can people suggest for this? Ideally I'd l
2013-07-26 13:28:09	jophish_	ike to have some Haskell which compiles to a static library and a C header to which I can link my C++ interface to get Haskell to do the heavy lifting. Is this at all possible?
2013-07-26 13:28:26	-->	tazjin (~tazjin@2a01:2b0:3041:3018:29a0:cf2c:f64b:feee) has joined #haskell
2013-07-26 13:28:29	-->	ffog (~ffog@107-198-125-141.lightspeed.hstntx.sbcglobal.net) has joined #haskell
2013-07-26 13:28:47	merijn	Ghoul_: No, actually existential quantification is probably worse, as it has to store the typeclass dictionary with your values everywhere
2013-07-26 13:28:56	Ghoul_	oh dear
2013-07-26 13:29:05	<--	adinapoli (~adinapoli@217.113.163.2) has quit (Remote host closed the connection)
2013-07-26 13:29:15	-->	paullik (~paullik@unaffiliated/paullik) has joined #haskell
2013-07-26 13:29:28	merijn	jophish_: You can compile haskell to a library that is callable from C no problem
2013-07-26 13:29:46	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Ping timeout: 246 seconds)
2013-07-26 13:29:49	merijn	jophish_: I'm not sure how C++ and C interact, but calling haskell from C++ should be as easy as calling C from +
2013-07-26 13:29:59	<--	smlgs (~smlgs@212.174.33.250) has quit (Remote host closed the connection)
2013-07-26 13:30:01	jophish_	merijn: I'd also have to link in the Haskell runtime too I guess
2013-07-26 13:30:06	<--	talzeus (~studybot_@101.110.31.120) has quit (Ping timeout: 264 seconds)
2013-07-26 13:30:43	merijn	jophish_: I think it already gets linked into your library
2013-07-26 13:31:00	<--	bgilbert (~textual@108-239-26-79.lightspeed.chtnsc.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2013-07-26 13:31:04	shachaf	merijn: There are some cases where I think existentials have better memory usage (sadly), but I'm too tired to go into detail right now. :-)
2013-07-26 13:31:08	merijn	jophish_: Minimal example on the wiki is: http://www.haskell.org/haskellwiki/Calling_Haskell_from_C
2013-07-26 13:31:12	shachaf	Remind me tomorrow or something if you care.
2013-07-26 13:31:23	 *	shachaf >=> sleep
2013-07-26 13:31:31	merijn	shachaf: Oh, probably, but probably *in general* EQ is worse
2013-07-26 13:31:50	jophish_	merijn: yeah, I was looking at that, it seems to use ghc to compile the C. I'm using clang for my c++. I'll have a little play with things and see where I get to
2013-07-26 13:32:03	merijn	jophish_: No, ghc just calls gcc to compile C code
2013-07-26 13:32:03	<--	morazow (~morazow@92.36.136.95.rev.vodafone.pt) has quit (Read error: Connection reset by peer)
2013-07-26 13:32:15	<--	phischu (~pschuster@p4FD306B2.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2013-07-26 13:32:20	merijn	jophish_: Actually, no
2013-07-26 13:32:32	merijn	jophish_: cabal can call gcc for you, ghc doesn't compile C at all there
2013-07-26 13:32:40	<--	mandarg` (~user@67.202.108.110) has quit (Ping timeout: 276 seconds)
2013-07-26 13:32:54	merijn	ugh, I should just shutup and stop wrongly correcting myself
2013-07-26 13:33:05	<--	DrTeggy (~grust@HSI-KBW-149-172-224-93.hsi13.kabel-badenwuerttemberg.de) has quit (Quit: DrTeggy)
2013-07-26 13:33:13	-->	talzeus (~studybot_@101.110.31.120) has joined #haskell
2013-07-26 13:33:17	merijn	jophish_: ok, final attempt, ghc call gcc to compile the C file and then calls ld to link the C object code with the haskell library
2013-07-26 13:33:24	thoughtpolice	sure it does, you can compile a C file with GHC that correcly has all the includes and whatnot set
2013-07-26 13:33:34	thoughtpolice	you may need linker options aside from that, but you can provide those too
2013-07-26 13:34:08	thoughtpolice	the reasoning is if you do 'ghc foo.c', you probably want GHC to set the include paths correctly (because it's error prone to do it yourself.) cabal happens to know this anyway and does it itself
2013-07-26 13:34:14	-->	favonia (~favonia@pdpc/supporter/student/favonia) has joined #haskell
2013-07-26 13:34:21	-->	morazow (~morazow@92.36.136.95.rev.vodafone.pt) has joined #haskell
2013-07-26 13:34:23	merijn	jophish_: If you just use cabal (as you should for any real project!) you can specify all the gory C compilation/linker flags in your cabal file and cabal will deal with it
2013-07-26 13:34:23	jophish_	ah, I see
2013-07-26 13:34:26	thoughtpolice	you need this in order to do things like start the haskell runtime
2013-07-26 13:34:30	thoughtpolice	since you need to call hs_init
2013-07-26 13:34:57	jophish_	I'm using CMake for the C++ at the moment. Hopefully I can just call out to cabal from that
2013-07-26 13:35:40	<--	ndonaldson (~nic@61.69.24.113) has quit (Quit: Leaving)
2013-07-26 13:35:54	merijn	jophish_: It's a bit trial and error to get working the first time, but once you figure it out it's actually really easy
2013-07-26 13:35:57	Yaniel	sure you can, it doesn't have support for custom commands for nothing
2013-07-26 13:35:59	-->	rodrigovidal (~rodrigovi@201.37.47.64) has joined #haskell
2013-07-26 13:36:10	-->	Quadrescence (~quad@unaffiliated/quadrescence) has joined #haskell
2013-07-26 13:36:41	jophish_	In the end I'd like to have a "lite" version of my library which reads in binary files, and doesn't require haskell for parsing. The "heavy" version will be able to read in human-written scripts
2013-07-26 13:36:53	<--	agumonkey (~agu@86.72.217.179) has quit (Ping timeout: 268 seconds)
2013-07-26 13:37:00	<--	Pegleg (~{Pegleg}@unaffiliated/pegleg) has quit (Quit: WeeChat 0.3.8)
2013-07-26 13:37:18	jophish_	Finding an appropriate split between Haskell and C++ will probably require a bit of thought
2013-07-26 13:37:29	jophish_	and how to pass data between the two efficiently
2013-07-26 13:37:44	<--	zzing (~textual@198-91-210-150.cpe.distributel.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2013-07-26 13:38:19	merijn	jophish_: If only one side ever needs to work on the data it's easy, haskell already supports pointers for all primitive types and there is StablePtr for handing haskell values to C
2013-07-26 13:38:31	<--	kerrick (~kerrick@c-69-181-16-119.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2013-07-26 13:38:34	-->	Zenol (~zenol@ip-91.net-81-220-73.rev.numericable.fr) has joined #haskell
2013-07-26 13:38:38	<--	maximveksler (~maximveks@bzq-82-80-132-79.static.bezeqint.net) has quit (Quit: maximveksler)
2013-07-26 13:38:41	-->	halftone (~thomas@theorie-dyn-29-169.Informatik.Uni-Oldenburg.DE) has joined #haskell
2013-07-26 13:38:45	merijn	jophish_: If both sides need to update/mutate data you will need a Storable instance, which is a bit messy to get going at first, but not very hard
2013-07-26 13:39:13	jophish_	I don't think that both sides will ever need to modify the same data
2013-07-26 13:39:40	-->	dlackili (dcfdcefc@gateway/web/freenode/ip.220.253.206.252) has joined #haskell
2013-07-26 13:39:43	merijn	jophish_: Oh, then you can party, because Storable is the only really hairy part of the FFI IMO
2013-07-26 13:40:12	jophish_	C++ will give some parameters to Haskell needed to parse the file correctly, and Haskell will either write the binary result to disk, or send it straight back to C++
2013-07-26 13:40:28	dlackili	How can a linear congruential generator such as x' = 17 x + 6, mod 340282366920938463463374607431768211447 be written in haskell?
2013-07-26 13:40:38	dlackili	If x' = 3, find x.  That is, find the value that is output just before 3.
2013-07-26 13:40:39	<--	rodrigovidal (~rodrigovi@201.37.47.64) has quit (Ping timeout: 260 seconds)
2013-07-26 13:41:38	allsystemsarego	jophish, have you considered named pipes for transferring JSON data back and forth between Haskell and C++?
2013-07-26 13:41:50	-->	MiniCow (~MiniCow@109.224.141.117) has joined #haskell
2013-07-26 13:42:00	jophish_	allsystemsarego: nope, that's not crossed my mind.
2013-07-26 13:42:25	jophish_	I'm not sure that JSON is really the right tool for the job
2013-07-26 13:42:29	<--	catwiesle (~catwiesel@p5DDAADB8.dip0.t-ipconnect.de) has quit (Ping timeout: 248 seconds)
2013-07-26 13:42:29	allsystemsarego	it's all in unix-land, right?
2013-07-26 13:42:55	jophish_	allsystemsarego: There's no reason why it shouldn't run on Windows in the end
2013-07-26 13:43:02	-->	rishabhjain_ (~anonymous@14.139.122.114) has joined #haskell
2013-07-26 13:43:25	jophish_	It would be nice to have this on iOS too, so loading this from a binary file should be as speedy as possible
2013-07-26 13:44:21	merijn	I need a queue that supports fold, any recommendations? The typical double list approach doesn't work to well as I'd have to reverse + append the second list on every fold...
2013-07-26 13:44:24	<--	rishabhjain (~anonymous@14.139.122.114) has quit (Read error: Connection reset by peer)
2013-07-26 13:44:24	--	rishabhjain_ is now known as rishabhjain
2013-07-26 13:44:30	haasn	dlackili: I don't know enough about the mathematics of what you're doing to be of much use but note that you can totally implement modulo 340282366920938463463374607431768211447 calculations.
2013-07-26 13:44:46	opqdonut	merijn: Sequence?
2013-07-26 13:45:42	<--	talzeus (~studybot_@101.110.31.120) has quit (Ping timeout: 264 seconds)
2013-07-26 13:46:38	merijn	opqdonut: I guess that's probably the best approach
2013-07-26 13:48:04	haasn	dlackili: (does that number have an actual solution, by the way, or did you just make it up?)
2013-07-26 13:48:19	dlackili	haasn: It has a solution
2013-07-26 13:48:35	<--	thunderrd (~thunderrd@119.42.113.204) has quit (Read error: Connection reset by peer)
2013-07-26 13:49:21	shachaf	dlackili: #haskell is not the place for your puzzles.
2013-07-26 13:49:43	-->	codesoup (~codesoup@206-248-170-75.dsl.teksavvy.com) has joined #haskell
2013-07-26 13:49:58	dlackili	shachaf: Where is?
2013-07-26 13:50:03	dlackili	#esoteric?
2013-07-26 13:50:07	shachaf	I don't know. But not here.
2013-07-26 13:50:12	-->	DrTeggy (~grust@HSI-KBW-149-172-224-93.hsi13.kabel-badenwuerttemberg.de) has joined #haskell
2013-07-26 13:51:03	-->	beckerb_ (~beckerb@2001:660:3013:3:7aac:c0ff:fea0:a7b4) has joined #haskell
2013-07-26 13:51:15	-->	maximveksler (~maximveks@bzq-82-80-132-79.static.bezeqint.net) has joined #haskell
2013-07-26 13:52:15	-->	Mon_Ouie (~Mon_Ouie@14.42-244-81.adsl-dyn.isp.belgacom.be) has joined #haskell
2013-07-26 13:52:15	<--	Mon_Ouie (~Mon_Ouie@14.42-244-81.adsl-dyn.isp.belgacom.be) has quit (Changing host)
2013-07-26 13:52:15	-->	Mon_Ouie (~Mon_Ouie@subtle/user/MonOuie) has joined #haskell
2013-07-26 13:52:42	<--	EvilMachine (~evi1m4chi@xdsl-87-79-139-86.netcologne.de) has quit (Quit: EvilMachine)
2013-07-26 13:52:45	<--	spektroskop (~alex@cm-84.208.195.71.getinternet.no) has quit (Quit: leaving)
2013-07-26 13:52:54	-->	cscorp (~csorp@c-98-230-174-67.hsd1.ga.comcast.net) has joined #haskell
2013-07-26 13:53:18	<--	twanvl (~Twan@dhcp-077-250-086-217.chello.nl) has quit (Read error: Connection reset by peer)
2013-07-26 13:53:31	-->	xcthulhu (~xcthulhu@wireless-165-124-129-106.nuwlan.northwestern.edu) has joined #haskell
2013-07-26 13:53:35	-->	DolphR (~dolph@0149000198.0.fullrate.dk) has joined #haskell
2013-07-26 13:54:09	<--	ezrios (~ezrios@CPE00044b067c36-CM0012c9a07dec.cpe.net.cable.rogers.com) has quit (Ping timeout: 268 seconds)
2013-07-26 13:54:40	-->	amyers (~quassel@128.177.88.157) has joined #haskell
2013-07-26 13:55:24	-->	kofno (~kofno@cpe-24-165-210-251.neo.res.rr.com) has joined #haskell
2013-07-26 13:55:24	merijn	:(
2013-07-26 13:55:25	-->	kier (~kier@cpc9-warw15-2-0-cust396.3-2.cable.virginmedia.com) has joined #haskell
2013-07-26 13:55:31	merijn	I want foldMap for MonadPlus...
2013-07-26 13:55:50	-->	floatingman (~dnewman@c-68-47-207-131.hsd1.tn.comcast.net) has joined #haskell
2013-07-26 13:56:00	YoungFrog	dlackili: ##math might be a good place
2013-07-26 13:56:27	dlackili	YoungFrog: Do they discuss programming there?
2013-07-26 13:56:36	dlackili	math programming
2013-07-26 13:56:46	YoungFrog	IDK, but it looks more like a math puzzle than a programming one
2013-07-26 13:57:26	<--	jmcarthur_mobile (~jmcarthur@pool-108-27-55-243.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2013-07-26 13:57:35	-->	Qfwfq (~Qfwfq@unaffiliated/washirving) has joined #haskell
2013-07-26 13:57:38	YoungFrog	it is trivial to solve using a computer, given enough time.
2013-07-26 13:57:45	YoungFrog	(at least if a solution exists)
2013-07-26 13:57:45	<--	jozefg (~dannygrat@c-24-63-142-232.hsd1.ma.comcast.net) has quit (Quit: jozefg)
2013-07-26 13:57:52	-->	jmcarthur_mobile (~jmcarthur@2607:fb90:a1f:3421:1f8f:4a47:4407:60b9) has joined #haskell
2013-07-26 13:57:53	mauke	merijn: isn't existentials equivalent to objects in C++?
2013-07-26 13:58:06	mauke	I mean, objects store a pointer to a vtable of methods
2013-07-26 13:58:18	mauke	and an existential value bundles a typeclass dictionary with the value
2013-07-26 13:59:26	merijn	mauke: I have no clue
2013-07-26 13:59:43	shachaf	I don't think it's "equivalent" but it's certainly related.
2013-07-26 14:00:28	haasn	(but you can still cast things in C++)
2013-07-26 14:00:29	shachaf	Objects are existential, at least.
2013-07-26 14:01:06	shachaf	For one, existentials don't need type classes.
2013-07-26 14:01:17	<--	warpaint (~w@unaffiliated/warpaint) has quit
2013-07-26 14:01:37	shachaf	s/For one/By the way/
2013-07-26 14:01:38	-->	novascorpio (~matt@cpe-98-14-205-174.nyc.res.rr.com) has joined #haskell
2013-07-26 14:01:44	merijn	blah
2013-07-26 14:02:04	mauke	I mean, regarding memory use
2013-07-26 14:02:14	merijn	Sequence doesn't have "pop :: Sequence a -> Maybe (a, Sequence a)"
2013-07-26 14:02:19	shachaf	Oh. Yes, more or less.
2013-07-26 14:02:31	shachaf	That was my objection before I pretended to myself I was going to be able to go to sleep.
2013-07-26 14:02:42	<--	whaletechno (~whaletech@unaffiliated/whaletechno) has quit (Quit: ha det bra)
2013-07-26 14:03:05	shachaf	You can have that without a type class, too: [exists x. (x, (x -> Int, x -> Char, x -> Bool, ...))] vs. [(Int, Char, Bool, ...)]
2013-07-26 14:03:08	mauke	merijn: viewr?
2013-07-26 14:03:20	shachaf	In the former case you can share the entire tuple of functions between cases.
2013-07-26 14:03:51	shachaf	In the latter you pay more memory the more "methods" you have.
2013-07-26 14:04:20	merijn	mauke: Well, I think viewl, but oh well
2013-07-26 14:04:24	merijn	I must be blind
2013-07-26 14:04:27	-->	mandarg` (~user@67.202.108.110) has joined #haskell
2013-07-26 14:04:27	mauke	that's shift, not pop!
2013-07-26 14:04:36	haasn	merijn: (cons ^?) -- wooh
2013-07-26 14:04:39	-->	thunderrd (~thunderrd@119.42.74.166) has joined #haskell
2013-07-26 14:04:43	haasn	err
2013-07-26 14:04:45	haasn	(^? cons)
2013-07-26 14:04:58	<--	thalassarche (~thalassar@unaffiliated/thalassarche) has quit (Ping timeout: 256 seconds)
2013-07-26 14:05:24	<--	boothead (~boothead@109.201.152.230) has quit (Ping timeout: 260 seconds)
2013-07-26 14:05:31	haasn	not cons, actually
2013-07-26 14:05:38	haasn	_Cons
2013-07-26 14:05:44	shachaf	:t preview _Cons
2013-07-26 14:05:45	lambdabot	(MonadReader s m, Cons (->) (Control.Lens.Internal.Getter.Accessor (First (a, s))) s s a a) => m (Maybe (a, s))
2013-07-26 14:05:50	shachaf	good type
2013-07-26 14:05:51	haasn	I keep forgetting that name!
2013-07-26 14:06:04	haasn	:t preview _Cons `asAppliedTo` [1,2,3]
2013-07-26 14:06:04	shachaf	> preview _Cons "beep"
2013-07-26 14:06:05	lambdabot	Num t => [t] -> Maybe (t, [t])
2013-07-26 14:06:06	lambdabot	  Just ('b',"eep")
2013-07-26 14:06:12	shachaf	> preview _Snoc "beep"
2013-07-26 14:06:13	lambdabot	  Just ("bee",'p')
2013-07-26 14:06:28	-->	max (~max@wyoming.ethz.ch) has joined #haskell
2013-07-26 14:06:46	--	max is now known as Guest60363
2013-07-26 14:06:58	<--	mandarg` (~user@67.202.108.110) has quit (Read error: Connection reset by peer)
2013-07-26 14:07:07	<--	codesoup (~codesoup@206-248-170-75.dsl.teksavvy.com) has quit (Ping timeout: 276 seconds)
2013-07-26 14:07:50	-->	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has joined #haskell
2013-07-26 14:07:52	<--	Cromulent (~Cromulent@cpc1-reig5-2-0-cust251.6-3.cable.virginmedia.com) has quit (Remote host closed the connection)
2013-07-26 14:08:38	<--	perspectival (~perspecti@35.158.broadband4.iol.cz) has quit (Quit: Leaving.)
2013-07-26 14:08:39	<--	Qfwfq (~Qfwfq@unaffiliated/washirving) has quit (Ping timeout: 260 seconds)
2013-07-26 14:08:49	timbod	Just experimenting with ghc-mod+emacs - it's pretty cool. Any other users here?
2013-07-26 14:08:54	-->	perspectival (~perspecti@35.158.broadband4.iol.cz) has joined #haskell
2013-07-26 14:09:07	timbod	I'm having a tools experimentation kind of day...
2013-07-26 14:09:08	Guest60363	What can it do thats cool?
2013-07-26 14:09:12	-->	lemao (~lemao@189.60.37.42) has joined #haskell
2013-07-26 14:09:26	Guest60363	Can somebody try to compile the code from: http://lpaste.net/91226
2013-07-26 14:09:36	Guest60363	its just from the PersistentSQL tutorial
2013-07-26 14:09:36	timbod	Recompiles the file as I type, and has tooltips for the ghc errors.
2013-07-26 14:09:53	Guest60363	I'm getting a compile error that I don't understand
2013-07-26 14:09:56	Guest60363	cool
2013-07-26 14:10:03	haasn	:t preview _Cons `asAppliedTo` Seq.fromList [1,2,3] -- oh, we actually have this here
2013-07-26 14:10:04	lambdabot	Num a => Seq.Seq a -> Maybe (a, Seq.Seq a)
2013-07-26 14:10:06	Guest60363	didn't the haskell-mode just get updated?
2013-07-26 14:10:25	Yaniel	:t repeat
2013-07-26 14:10:26	lambdabot	a -> [a]
2013-07-26 14:10:34	Yaniel	:t take
2013-07-26 14:10:35	lambdabot	Int -> [a] -> [a]
2013-07-26 14:10:43	timbod	Maybe - I'm relying on the elisp that comes with ghc-mod (which extents haskell-mode I think).
2013-07-26 14:10:45	-->	LMolr (~LMolr@87.18.245.19) has joined #haskell
2013-07-26 14:11:31	Guest60363	I'll have to try all those things. I also want to try using HLint via haskell-mode as well
2013-07-26 14:11:40	-->	shreesh (~shreesh@209.104.235.1) has joined #haskell
2013-07-26 14:11:45	-->	fridim_ (~fridim@bas2-montreal07-2925317871.dsl.bell.ca) has joined #haskell
2013-07-26 14:12:49	-->	shesek (~shesek@77.126.129.148) has joined #haskell
2013-07-26 14:13:08	Guest60363	@timbod: If you don't mind, could you use your new ghc-mod fancy to help figure out my compile error I pasted?
2013-07-26 14:13:08	lambdabot	Unknown command, try @list
2013-07-26 14:14:09	timbod	Guest60363: Probably not - it looks like it depends on a whole bunch of database packages....
2013-07-26 14:14:20	-->	codesoup (~codesoup@184.175.12.18) has joined #haskell
2013-07-26 14:14:25	Guest60363	ok
2013-07-26 14:14:32	HugoDaniel	how can i change a class like this or datatype so that it has less-rigid type vars: class MyClass a where myFunction :: MyData a b c d e f g  ?
2013-07-26 14:14:49	Guest60363	i think its just
2013-07-26 14:15:23	Guest60363	timbod: cabal install persistent persistent-sqlite persistent-template
2013-07-26 14:16:28	<--	rishabhjain (~anonymous@14.139.122.114) has quit (Quit: rishabhjain)
2013-07-26 14:17:26	timbod	Guest60363: I don't know anything about those packages, but looking at the code and the error, can't you just evaluate the print in the IO monad of main,  outside the runSqlite call?
2013-07-26 14:18:07	<--	kushal (kdas@fedora/kushal) has quit (Quit: Leaving)
2013-07-26 14:18:12	Guest60363	timbod: I could, but I was hoping to figure out why the compiler is giving me a hard time about liftIO. From reading other examples online it seems like it should go
2013-07-26 14:18:47	timbod	ie: http://lpaste.net/91227
2013-07-26 14:18:53	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #haskell
2013-07-26 14:18:55	Guest60363	I'll keep googling and see if anyone else has had that problem.
2013-07-26 14:19:15	<--	halftone (~thomas@theorie-dyn-29-169.Informatik.Uni-Oldenburg.DE) has quit (Quit: Leaving)
2013-07-26 14:19:58	-->	rishabhjain (~anonymous@14.139.122.114) has joined #haskell
2013-07-26 14:20:37	-->	xplat_ (~james@67.205.253.80) has joined #haskell
2013-07-26 14:21:40	<--	jmcarthur_mobile (~jmcarthur@2607:fb90:a1f:3421:1f8f:4a47:4407:60b9) has quit (Quit: Bye)
2013-07-26 14:21:51	-->	jmcarthur_mobile (~jmcarthur@2607:fb90:a1f:3421:1f8f:4a47:4407:60b9) has joined #haskell
2013-07-26 14:22:04	<--	vijaykiran (~user@gateway.finalist.com) has quit (Ping timeout: 276 seconds)
2013-07-26 14:22:38	-->	agumonkey (~agu@179.217.72.86.rev.sfr.net) has joined #haskell
2013-07-26 14:22:53	<--	Guest60363 (~max@wyoming.ethz.ch) has quit (Quit: Leaving)
2013-07-26 14:25:58	-->	adinapoli (~adinapoli@217.113.163.2) has joined #haskell
2013-07-26 14:26:29	jkoppel	I need a function that escapes Haskell characters. That is, foo '\\' = "\\\\" but foo 'a' = 'a'
2013-07-26 14:26:54	jkoppel	Neither showLitChar nor show work
2013-07-26 14:27:04	tulcod	jkoppel: basically show, but drop the first and final char
2013-07-26 14:27:06	tulcod	?
2013-07-26 14:27:28	jkoppel	tulcod: Already thought of that. The thought makes me cringe
2013-07-26 14:27:42	tulcod	jkoppel: why does it?
2013-07-26 14:27:54	tulcod	it's what you asked for, except for the quote at the beginning and the end
2013-07-26 14:28:21	<--	james-ubc (~james@66.183.102.136) has quit (Ping timeout: 248 seconds)
2013-07-26 14:28:32	merijn	jkoppel: "Your example is a type error anyway
2013-07-26 14:28:39	jkoppel	tulcod: Because that's complicated, high-information behavior, but this task is common and Haskell-y enough that I expect the function to already exist
2013-07-26 14:28:59	merijn	"\\\\" is a string, but 'a' is a char :)
2013-07-26 14:29:01	jkoppel	merijn: foo 'a' = "a" . A typo-error more than a type error
2013-07-26 14:29:18	tulcod	jkoppel: what do you mean by "high-information behavior"? you're asking to escape haskell characters!
2013-07-26 14:29:20	mauke	jkoppel: why do you need that?
2013-07-26 14:29:22	merijn	jkoppel: Why do you need to escape these Char?
2013-07-26 14:29:44	<--	xinming (~xinming@125.87.87.245) has quit (Read error: Connection reset by peer)
2013-07-26 14:29:53	jkoppel	I'm trying to print Java string literals
2013-07-26 14:29:55	<--	xcthulhu (~xcthulhu@wireless-165-124-129-106.nuwlan.northwestern.edu) has quit (Quit: xcthulhu)
2013-07-26 14:29:55	tulcod	jkoppel: also, fuck complicated. if it works, it works.
2013-07-26 14:30:08	jkoppel	tulcod: Please remind me never to hire you
2013-07-26 14:30:17	tulcod	jkoppel: never hire me.
2013-07-26 14:30:23	jkoppel	:D
2013-07-26 14:30:28	mauke	jkoppel: java doesn't understand haskell escape sequences
2013-07-26 14:30:40	jkoppel	mauke: Exactly
2013-07-26 14:30:47	mauke	so you have to write your own anyway
2013-07-26 14:30:48	jkoppel	That's why I want it per character
2013-07-26 14:30:57	jkoppel	So I can override the ones where they differ
2013-07-26 14:30:59	tulcod	jkoppel: but i'm not joking man. if you'd be looking for a perfect and elegant solution, you would just rewrite the java stuff to haskell.
2013-07-26 14:31:03	-->	mr_max (~max@wyoming.ethz.ch) has joined #haskell
2013-07-26 14:31:11	jkoppel	tulcod: What Java stuff?
2013-07-26 14:31:26	mauke	because "serialize characters into java syntax" is not a common or haskelly task
2013-07-26 14:31:27	tulcod	jkoppel: well i dunno, for some reason you need to interact with java
2013-07-26 14:31:27	petapetapeta	jkoppel: Can't you use intercalate?
2013-07-26 14:32:08	jkoppel	tulcod: Not interact with Java; act on Java :)
2013-07-26 14:32:18	petapetapeta	jkoppel: oh misread what you wanted to do. nvm
2013-07-26 14:32:47	jkoppel	mauke: Yep. I'm serializing characters into Haskell syntax, except where Haskell syntax differs from Java
2013-07-26 14:32:58	tulcod	jkoppel: well clearly you have a reason to do that, and it's never going to be perfect or elegant, because in the end it's java.
2013-07-26 14:33:16	jkoppel	tulcod: This has nothing to do with Java
2013-07-26 14:33:16	-->	xinming (~xinming@125.84.25.241) has joined #haskell
2013-07-26 14:33:26	tulcod	huh :o
2013-07-26 14:33:27	jkoppel	I just want to print out a character the way it's escaped in Haskell
2013-07-26 14:33:36	-->	jadatkins (~jadatkins@cpc25-aztw25-2-0-cust944.aztw.cable.virginmedia.com) has joined #haskell
2013-07-26 14:33:43	tulcod	no you don't?
2013-07-26 14:33:51	merijn	There's no way to toggle of 1 specific instance of a warning, right?
2013-07-26 14:34:08	jkoppel	merijn: You can do it per file
2013-07-26 14:34:11	jkoppel	tulcod: ???
2013-07-26 14:34:11	merijn	i.e. I wanna silence one orphan instance warning without silencing them all
2013-07-26 14:34:44	<--	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has quit (Quit: Leaving.)
2013-07-26 14:35:23	<--	LK4D4 (~LK4D4@2002:c35d:cf2c:2::2102) has left #haskell
2013-07-26 14:35:45	tulcod	jkoppel: if that's what you wanted, why did you start about java?
2013-07-26 14:35:49	tulcod	<jkoppel> I'm trying to print Java string literals
2013-07-26 14:36:02	jkoppel	tulcod: Because people asked what I'm trying to do
2013-07-26 14:36:19	tulcod	<jkoppel> tulcod: This has nothing to do with Java
2013-07-26 14:36:27	tulcod	i mean, wth?
2013-07-26 14:36:33	-->	vijaykiran (~user@gateway.finalist.com) has joined #haskell
2013-07-26 14:36:43	jkoppel	The question I asked has nothing to do with Java
2013-07-26 14:36:52	jkoppel	The program that this is going into has a lot to do with Java
2013-07-26 14:37:00	-->	talzeus (~studybot_@s207.213.146.210.fls.vectant.ne.jp) has joined #haskell
2013-07-26 14:37:02	-->	bamboo_ (~bamboo@189.111.22.10) has joined #haskell
2013-07-26 14:37:04	tulcod	what you asked for is show
2013-07-26 14:37:13	-->	hajimeho_ (~hajimehos@p846976.tokynt01.ap.so-net.ne.jp) has joined #haskell
2013-07-26 14:37:16	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-07-26 14:37:52	<--	jadatkins (~jadatkins@cpc25-aztw25-2-0-cust944.aztw.cable.virginmedia.com) has quit (Client Quit)
2013-07-26 14:38:09	jkoppel	I want a function foo such that (show :: String -> String) is equivalent to (map foo)
2013-07-26 14:38:17	jkoppel	This is the kind of thing that should exist
2013-07-26 14:38:35	-->	agr (~agr@186.211.65.27) has joined #haskell
2013-07-26 14:38:38	mauke	jkoppel: can't
2013-07-26 14:38:45	mauke	that's not how Haskell syntax works
2013-07-26 14:38:50	jkoppel	Modulo start and end quotes
2013-07-26 14:39:13	jkoppel	I just want to show a single character the way Haskell does
2013-07-26 14:39:19	mauke	> '\14'
2013-07-26 14:39:19	lambdabot	  '\SO'
2013-07-26 14:39:23	mauke	> ['\14', 'H']
2013-07-26 14:39:23	lambdabot	  "\SO\&H"
2013-07-26 14:39:29	--	bamboo_ is now known as bamboo
2013-07-26 14:39:31	mauke	it's not composable
2013-07-26 14:39:46	jkoppel	mapcat (or whatever it's called in Haskell), not map, sorry
2013-07-26 14:40:10	-->	Taneb (~nathan@host-92-30-148-233.as13285.net) has joined #haskell
2013-07-26 14:40:42	tulcod	jkoppel: the closest you'll get is show :: Char -> String
2013-07-26 14:41:22	tulcod	@ map show ['\14', 'H']
2013-07-26 14:41:24	jkoppel	*sigh*
2013-07-26 14:41:32	tulcod	uh... how does lambdabot work again? :P
2013-07-26 14:41:36	jkoppel	Fine, init.tail.show it is
2013-07-26 14:41:44	mauke	> let ho = init . tail . show in ho '\14'
2013-07-26 14:41:44	lambdabot	  "\\SO"
2013-07-26 14:41:54	mauke	> let ho = init . tail . show in concatMap ho ['\14', 'H']
2013-07-26 14:41:55	lambdabot	  "\\SOH"
2013-07-26 14:41:58	mauke	and that's broken
2013-07-26 14:42:10	merijn	Can anyone clarify the difference between -fno-warn-unused-do-bind and -fno-warn-wrong-do-bind? (http://www.haskell.org/ghc/docs/7.6.2/html/users_guide/flag-reference.html)
2013-07-26 14:43:18	mauke	http://www.haskell.org/ghc/docs/7.0.2/html/users_guide/options-sanity.html
2013-07-26 14:43:27	-->	edwardk (~edwardk@pdpc/supporter/professional/edwardk) has joined #haskell
2013-07-26 14:43:29	merijn	Oh! Is the latter just a special case of the former when throwing out monadic actions?
2013-07-26 14:43:31	-->	guampa (~guampa@gateway/tor-sasl/guampa) has joined #haskell
2013-07-26 14:44:19	mauke	probably
2013-07-26 14:44:36	jkoppel	A few weeks ago I saw a website where you can type in a few input-output pairs and it will synthesize a Haskell function that does that. Anyone know what it's called?
2013-07-26 14:44:38	<--	Kiryx (~Kiryx@109.231.16.178) has quit (Ping timeout: 240 seconds)
2013-07-26 14:45:03	-->	jadatkins (~jadatkins@cpc25-aztw25-2-0-cust944.aztw.cable.virginmedia.com) has joined #haskell
2013-07-26 14:45:20	-->	egork8n (~egor.kuro@77.232.56.194) has joined #haskell
2013-07-26 14:45:35	<--	yano (yano@freenode/staff/yano) has quit (Quit: WeeChat, The Better IRC Client: http://weechat.org/)
2013-07-26 14:47:12	<--	jkoppel (~jkoppel@c-98-234-184-221.hsd1.ca.comcast.net) has quit (Quit: jkoppel)
2013-07-26 14:47:23	--	Pantsu is now known as MrElendig
2013-07-26 14:47:31	<--	jmcarthur_mobile (~jmcarthur@2607:fb90:a1f:3421:1f8f:4a47:4407:60b9) has quit (Quit: Bye)
2013-07-26 14:47:37	-->	bgilbert (~textual@108-239-26-79.lightspeed.chtnsc.sbcglobal.net) has joined #haskell
2013-07-26 14:47:39	-->	jmcarthur_mobile (~jmcarthur@2607:fb90:a1f:3421:1f8f:4a47:4407:60b9) has joined #haskell
2013-07-26 14:47:40	-->	yano (yano@freenode/staff/yano) has joined #haskell
2013-07-26 14:47:50	-->	_d3f (~gnu@94.242.252.66) has joined #haskell
2013-07-26 14:48:23	-->	mgile (~mgile@74-92-220-177-Colorado.hfc.comcastbusiness.net) has joined #haskell
2013-07-26 14:48:28	<--	dalaing1 (~dalaing@124-171-215-123.dyn.iinet.net.au) has quit (Quit: Leaving.)
2013-07-26 14:48:42	<--	jobstijl (~job@5070A080.static.ziggozakelijk.nl) has quit (Ping timeout: 264 seconds)
2013-07-26 14:49:03	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2013-07-29 08:59:37	-->	benoit (~benoit@130.185.130.212) has joined #haskell
2013-07-29 08:59:37	--	Topic for #haskell is "http://www.haskell.org | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D | Administrative issues: #haskell-ops | Hackage down? http://hdiff.luite.com"
2013-07-29 08:59:37	--	Topic set by mauke (~mauke@p3m/member/mauke) on Wed, 17 Jul 2013 13:52:43
2013-07-29 08:59:37	--	Nicks #haskell: [@ChanServ @Igloo [[zzz]] [edwtjo] \q __main__ _anildigital _br_ _flow_ `0660 `^_^v `bps `fogus a11235 ab9rf acfoltzer Adeon adimit_away adinapoli Adios_ adlan adnap aess AfC aformeny agumonkey agundry ahf ahihi akahn akiress_ akraut akurei_ albel727 aleator_ alexander__b alexs almondjelly alpounet Amadiro amosr anachron andares anders^^_ andrewsw aninhumer anon1231 AntiSpamMeta apaku Apocalisp araujo arbn arcatan args[0] aristid arkeet arkx Arnoldz arnsholt arossouw asante asjo aszlig Athas augur_ averell away_sondr3 awruef b2coutts b52 b_jonas banjiewen barrucadu bartavelle Baughn bbee bbloom bcoca bcoppens bd_ bduc Belgarion0 benoit bentrevor bergmark betawaffle bezik bgamari bholst_ bicgena Bigcheese BigEndian bigs bind birkenfeld biscarch bitraten blakesmith BlastHardcheese Blkt BMeph bmuk BobFunk bobry bogdanp bogner bogner_ Boney boothead Boreeas boris`` bqp brainproxy brainwash Brando753 brandonw brendan brett BrianHV brianloveswords briden brisbin brixen Bryan792 bscarlet bstrie burp Bwild bxc Bynbo7 byorgey ByronJohnson bz c_14 c_wraith cablehead CADD cads cajla Cale caligula__ canar canissimia canta carter_away ccasin cdidd ceii centrinia Cerise charlesofarrell_ chatsiri_ cheezey chickenflu chirpsalot ChongLi Chousuke chrisbuchholz_ chrra ciaranm CindyLinz cjay clampz ClaudiusMaximus Clint clog cmccann cmsd2 codesoup cods coeus colah_ compnaion_cbue conehead confound_ copton copumpkin CosmicRay Counter-Strike cow-orke1 crdueck cronject cross crs_ cruxeternus Cryovat cschneid cynick dakrone dan_johnsin danr dario^CIP Darkflux DarkFox Dashkal dav davd davean davorak_ davorb-cellphone dcguru dcoutts de-Vri-es deavid Deewiant def-lkb_ deggisv2 demolithion desc|zenbook2 destiny DexterLB dextrey DigitalKiwi dilinger_ dimday divarvel dixie_ djahandarie djcoin dju dlundy dmp1ce dmwit dogmaT dolio doshitan dpwright dqd Draconx Draggor drbean drdo dreixel drewr drmegahertz dropdrive DrSyzygy dsantiago dsfox dsirenko dsp_ DT` Dtgr duairc dumbhat dustinswan DustyDingo dwierenga Dybber dyreshark dysinger eacameron EarlGray^^ earthy eb4890 ecube edkk Edoxile edunham edwardk ehamberg ehd ejls eL_Bart0 electrogeek elgot Eliel Elision elliott ELLIOTTCABLE em Endeg Enigmagic ent Entroacceptor epsylon epta ericmj Eridius ernst ethercrow etrepum Excureo eyck_ Ezku ezrios f8l fabjan fall_ farn favonia fayden federkasten felipe_ fergusnoble fihi09``` fikusz finnrobi FireFly floatingman2 flori flowsnake flux fmardini folone fosky franksh FreeFull frontendloader froztbyte fry fryguybob ft Fubar^ Fuco_ fujimura Fuuzetsu FUZxxl fxrh gabor gautamc gbarboza gbluma_ gds geal geekosaur gemelen genisage gentleben geoffh gereedy ggherdov ggreg ghorn ghorn_ Ghoul_ gienah Gilly_ gnuvince goldkatze Gothmog_ go|dfish gpampara_off Gracenotes greymalkin gridaphobe gseitz_ gspr guerrilla Guest10475 Guest53811 gusto guymann h_chiro_ haasn hackagebot Hafydd hamilyon hamishmack hape01 Hardolaf heath Heffalump helgikrs hiptobecubic hiratara hiredman hive-mind hiyakashi honza horlicks hpaste hpc hpd hvr iauns ibid idnar ido idoru inarru infina inr insejn int-e integral Internet13 ioanel iol ion ipuustin isenmann ISF ismlages isomorphic isomorphismes iteratee_ iulian ivan\ ivan` Jaak jackhill jaimef james-ubc jamwt jang1 janinge janne- JaRoel|4d jaspervd1 javawizard jayne jbauman Jello_Raptor Jesin jfischoff jfischoff_ Jimi` jix jj515 jkpl jlaire jlamothe jlewis jliikka jlouis jmcarthur jml joachifm joaopizani joar jobstijl jodaro_ joelteon joeyh johanbev_ johnw joneshf-laptop jonsterling Jonte joogi joshc JPohlmann jrib jroesch jrslepak jssanders JuanDaugherty juhp julmac junsuijin JustAPerson jyyou k0ral k3VB6u4d Kabaka kaictl kakos kallisti_ kamatsu KaneTW kaol kav kaw kcj Ke kerrick Khady Khisanth killy9999 kingugo kini Kinnison Kiryx KitB kloeri kludge` klugez Kneiva_ knyppeldynan knz koala_man koninkje_away kooga kosmikus kqr1 Krakarn kranius_ kryft kshannon kstuart ktosiek Kuba kubrat kushal kxra Kyzza lahwran lambdabot Laney lcfrs LeaChim Lefeni leifw lenstr leroux levi Licenser lightquake linduxed liori Liskni_si lispy liszt liyang ljhms_ LK4D4 lokydor lopex lpsmith lpvb luite lulf luminous lunarjar M-ou-se machisuj- machisuji macron magicman Maior majoh mak` maksbotan malorie_ mami_ mantovani manung maoe mapreduce marienz Martty Masky MasseR_ mattp__ matzo mauke mawuli Maxdamantus Mayzie mceier McManiaC mdhopkins mechairoi MedDev mee mel- melter mendez_ MetaCosm mgaare mgregson mgsloan miclorb mietek mike2 mike4_ mikecaruso mikee mikeplus64 milessabin_ milli mimi_vx mirsal misv mithsv mixi mjo mjrosenb MK_FG mkrull mlh mlinksva mmaruseacph2 mmathis MnO2 MoALTz Moataz-E Modius Moggle mokus mollerstrand monochrom mononofu Morgawr mornfall morolin mortberg Mortomes_ Mowah mr- mrd_ mrpantoufle MrRacoon mrshoe MrWoohoo mstksg munro mux mviljamaa mxf myme1 n-dolio n00dle Nahra nan` nanothief Natch natte NeatBasis_ necroyeti neektza1 neena Neqoxec neurocyte newsham Nickeeh nicoo Nik05 nik_89 niko nikolah Nimatek ninegrid ninzine nitrodex nkpart nlogax noam_ noddy nominolo nooodl noplamodo notdan novascorpio nu11ptr nullcone_ nuttycom1 nwf nxorg8 oakwhiz obcode ocharles Odd_Bloke ofan ogew oldmanstan OlegYch opqdonut OrangeDuck ormaaj Ornedan orospakr ortmage osfameron osnr othiym23 otterdam ousado ozataman ozgura p\mage Paks palmje ParahSail1n ParahSailin parcs path[l] PatrickRobotham pcapriotti pdxleif Peaker peddie peltchu Pengoo perlite perspectival petanqk petantik petekaz`` petercoulton petermw pettter_ pfoetchen pharaun phienone philipdexter Philippa Phlogistique PHO_ phryk pi8029 pikhq_ pingveno pjstadig Plex- plhk pnielsen popx porco poucet pqmodn_ pr predator217 preflex profmakx prophile Proteumus ps-auxw Ptival purefn puzza007 pygospa pyrtsa pyykkis QinGW QinGW`` quicksilver qwandor qz RageOfThou raid Ralith raspberrytau RayNbow`TU Raynes Raynos Razz rce ReinH Reisen relrod Rembane Resure rfw rgrinberg rhodesd RichyB Riussi_ robbert robinbb roboguy_ roconnor rpenguin rs0 Rutger`_ ryanakca s00pcan s4msung s_quark Saeppel Sagi saiam Saizan sajith satshabad saurik savask sbahra[] schlumpi schoppenhauer sclv scottj scottschecter scshunt Sculptor sdx23 seantallen sec^nd SegFaultAX sellout seneca sepeth sepp2k setmeaway2 sevvie sferry sg Sgeo sgso shachaf shanse shennyg shepheb shergill shesek Shin-LaC shiona SHODAN shrekster shutdown_-h_now si14 sipa SirChurchill sirspazzolot Sixmsj sjl skchrko ski ski_ skypers sleepybug SLi slobo_ sm smarter smlgs snikkers so Soft sohum solancile solarus solirc Sonarpul` sopvop sordina1 SoupEvil Sourceless sp3ctum_ spektroskop1 Spockz Squid_Tamer ssbr` Starfire_ startling stass statusfa1led stepcut steshaw stevejb stiell stomp studybot_ stuntaneous suiside sunfun Sunhay sunnavy_ SuperNoeMan supki Svedrin Swizec swook` tahu talzeus talzeus_ tamiko tanakh Taneb Tarential taruti tavelram_ taylorgb td123_ tdammers Tehnix Tekerson_ Tene tensorpudding tero- tertl3 Tesseraction tessier tg Th0mas theDon theorbtwo TheSpectre thetallguy thetallguy2 thirsteh ThomasLocke thorkilnaur__ thorsten1 thorsten` thoughtpolice threedaymonk thunderrd timemage Tinned_Tuna tippenein tmiw TML tomaw tomboy64 tomejaguar tomh- tomprince torkjak tortrot tpsinnem Tribal tridactyla tromp_ troydm tsou tswett ttm tudalex tulcod tunixman tvaalen Twey tych0 tylergillies_ u_ udoprog Ulrar upgrayeddd Urchin[emacs] userzxcvasdf uu1101 valdyn Valodim vamsiraju ve vehk Vendethiel vili vishesh vivekrai vmeson vnz vobi volitek Vorpal vpm Vq vvein vvv vw21 wagle walter Walther warpaint warpy WarzoneCommand Watcher7 waterlaz wavewave wbruce wchun weie wereHamster whaletechno WhereIsMySpoon wilfredh willb1 Will| wollw wormphlegm wting_ wto wtw wunki xaimus xcthulhu xenophon xinming XMunkki_ xnyhps Xorlev xorox90_ xplat xrl xrq xvilka xymox yam yan_ Yaniel yano Yawgmoth_ Ycros yeltzooo yezariaely yiannis_1 yitz YoungFrog zacts zaiste zaphar_p1 Zariel zebr zeiris_ zenzike_ zero7 Zesler ziman zoktar zomg zorzar zrot zugz zvrba zw01 zxq9 zz_nh2]
2013-07-29 08:59:37	--	Channel #haskell: 1009 nicks (2 ops, 0 halfops, 0 voices, 1007 normals)
2013-07-29 08:59:37	--	URL for #haskell: http://www.haskell.org/
2013-07-29 08:59:40	Gracenotes	Of course, it pays off in dividends elsewhere, etc.
2013-07-29 08:59:41	--	Mode #haskell [+CLcnpt]
2013-07-29 08:59:41	--	Channel created on Sun, 26 Nov 2006 07:42:48
2013-07-29 08:59:49	shachaf	Ezku: OK. So a category is the same thing as a monoid, *except* you can't just "multiply" any old two things together.
2013-07-29 08:59:57	shachaf	Ezku: Each thing has a type, and their types have to match.
2013-07-29 09:00:12	shachaf	The arrows in a category correspond to the elements in a monoid.
2013-07-29 09:00:16	PatrickRobotham	shachaf: Well I mean, you visualize an object as a dot, while you visualize an arrow as an arrow, and dots are easier to draw than arrows.
2013-07-29 09:01:00	shachaf	(Very directly: If you have a category with one object, it means you can compose any two arrows, since there's only one "type". A category with one object is the same thing as a monoid.)
2013-07-29 09:01:02	<--	jonsterling (~jonsterli@c-71-202-173-130.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2013-07-29 09:01:03	PatrickRobotham	Gracenotes: Yeah, that's not a helpful way to think about it. The arrows are the whole point of category. You wouldn't view the arcs in a directed graph as a mere nuisance.
2013-07-29 09:01:29	shachaf	PatrickRobotham: Er, OK? Find a better way to draw it, then. :-)
2013-07-29 09:01:54	shachaf	PatrickRobotham: I think this leads to some serious misunderstandings which can take a while to get fixed.
2013-07-29 09:01:55	-->	DrCode (~DrCode@gateway/tor-sasl/drcode) has joined #haskell
2013-07-29 09:02:12	<--	cablehead (~cablehead@204-195-74-161.wavecable.com) has quit (Ping timeout: 256 seconds)
2013-07-29 09:02:13	PatrickRobotham	shachaf: Your wish is my command! https://en.wikipedia.org/wiki/String_diagram
2013-07-29 09:02:18	shachaf	Objects are usually boring and not the point. Arrows are interesting and relevant to whatever you're doing.
2013-07-29 09:02:18	<--	ozataman (~ozataman@212.156.65.2) has quit (Ping timeout: 276 seconds)
2013-07-29 09:02:19	PatrickRobotham	shachaf: Such as?
2013-07-29 09:02:49	Gracenotes	PatrickRobotham: I know that arrows are important but I don't see it as intuitively true.
2013-07-29 09:02:50	-->	paolino (~paolino@net-93-144-84-248.cust.dsl.teletu.it) has joined #haskell
2013-07-29 09:02:53	Ezku	shachaf: I understand the relevance of a category with only one object, as then you only have identity morphisms, ie. "ways to put two of these things together and arrive at another of the same kind"
2013-07-29 09:02:55	savask	Hello. Are there fast primality tests in Haskell, like AKS or APRT?
2013-07-29 09:02:56	haasn	in the category ℕ, numbers are arrows
2013-07-29 09:02:58	bicgena	The 90-90 rule: "The first 90 percent of the code accounts for the first 90 percent of the development time. The remaining 10 percent of the code accounts for the other 90 percent of the development time." —Tom Cargill, Bell Labs
2013-07-29 09:03:05	shachaf	Such as what's been said above.
2013-07-29 09:03:08	shachaf	Ezku: No.
2013-07-29 09:03:09	Gracenotes	Insufficient generalization, I think.
2013-07-29 09:03:21	Ezku	shachaf: no? :)
2013-07-29 09:03:25	shachaf	Ezku: An arrow isn't "a way of getting from one object to another", not in most cases.
2013-07-29 09:03:36	<--	BobFunk (~mbc@76.14.64.156) has quit (Ping timeout: 264 seconds)
2013-07-29 09:03:43	haasn	An arrow in the category of “ways of getting from one object to another” is a way of getting from one object to another
2013-07-29 09:03:44	zvrba	Ezku: you don't have only identity morphisms.
2013-07-29 09:03:59	PatrickRobotham	Gracenotes: Well what about considering a monoid as a category with one object?
2013-07-29 09:04:01	haasn	An arrow in a different category might be something entirely different
2013-07-29 09:04:15	PatrickRobotham	Gracenotes: I think with that example it's clear that the arrows are important.
2013-07-29 09:04:16	Gracenotes	PatrickRobotham: well, that makes sense. a bit trivial, though.
2013-07-29 09:04:16	Ezku	in a category of only one object, what other morphisms _could_ there be other than identity?
2013-07-29 09:04:24	shachaf	Ezku: An identity arrow is a special arrow, not just because it's from an object to itself, but because of the way it behaves. No other arrow is like an identity arrow.
2013-07-29 09:04:34	shachaf	OK, this channel has too many people talking at once.
2013-07-29 09:04:45	Ezku	oh, I'm focusing on the objects too much again, am I not
2013-07-29 09:04:46	shachaf	I'll let the others take over.
2013-07-29 09:05:12	zvrba	shachaf: for me it was actually a kind of enlightement to realize that ID arrow is defined only through how it interacts with other arrows.
2013-07-29 09:05:21	<--	wollw (davidshere@unaffiliated/wollw) has quit (Read error: Connection reset by peer)
2013-07-29 09:05:26	Ezku	if you excellent people would like to continue this over at ##categorytheory? :o
2013-07-29 09:05:26	zvrba	(as opposed to how we usually define identity _function_)
2013-07-29 09:05:32	<--	gabor (~heisenbug@p54942C67.dip0.t-ipconnect.de) has quit (Quit: gabor)
2013-07-29 09:05:36	haasn	zvrba: and by its existence
2013-07-29 09:05:51	zvrba	haasn: well, existence is postulated.
2013-07-29 09:05:55	-->	sShintah (~oer894n@c83-248-105-252.bredband.comhem.se) has joined #haskell
2013-07-29 09:06:00	-->	wollw (davidshere@unaffiliated/wollw) has joined #haskell
2013-07-29 09:06:10	shachaf	I usually don't talk in ##categorytheory.
2013-07-29 09:06:20	Ezku	hm, so there's an identity morphism, but what I meant was actually more like endomorphisms, right?
2013-07-29 09:06:23	-->	ozataman (~ozataman@212.156.65.2) has joined #haskell
2013-07-29 09:06:28	haasn	eg. in the Haskell sense of Category, you have id :: Category c => c a a -- for every ‘a’
2013-07-29 09:06:31	Ezku	shachaf: I can relate to that.
2013-07-29 09:07:03	shachaf	Maybe I should. I don't know. Maybe when I know more.
2013-07-29 09:07:06	haasn	this property alone is almost what defines the way it interacts with other arrows
2013-07-29 09:07:50	haasn	ie. since it can be composed with anything, the only thing it can do is nothing
2013-07-29 09:07:54	-->	jorick (~kciroj@unaffiliated/jorick) has joined #haskell
2013-07-29 09:08:06	zvrba	:)
2013-07-29 09:08:28	PatrickRobotham	id is the identity natural transformation.
2013-07-29 09:08:41	shachaf	haasn: That doesn't sound right... There's a different identity arrow for every object.
2013-07-29 09:08:57	shachaf	I don't think you can make parametricity arguments here. :-)
2013-07-29 09:08:58	dmwit	haasn: That observation does not extend to category theory, where parametricity is not a thing you can take for granted.
2013-07-29 09:09:11	dmwit	...as shachaf is pointing out.
2013-07-29 09:09:12	Ezku	shachaf: would my statement hold if I said "endomorphisms" instead of "identity morphisms"?
2013-07-29 09:09:16	<--	favonia (~favonia@pdpc/supporter/student/favonia) has quit (Ping timeout: 256 seconds)
2013-07-29 09:09:16	PatrickRobotham	What's paramtericity.
2013-07-29 09:09:43	haasn	shachaf: I'm not sure how identity arrows differ across objects. they all interact in the exact same way
2013-07-29 09:09:45	shachaf	Ezku: I've forgotten which statement you mean.
2013-07-29 09:09:48	dmwit	Parametricity is a property that roughly says "this polymorphic thing behaves 'the same way' at all the monomorphic types it can be instantiated to".
2013-07-29 09:10:06	Ezku	shachaf: if you have a category with only one object, then all you can have are endomorphisms
2013-07-29 09:10:12	PatrickRobotham	What's the difference between Parametricity and Naturality?
2013-07-29 09:10:17	PatrickRobotham	Ezku: Yes that's true.
2013-07-29 09:10:24	Ezku	hurrah \o/
2013-07-29 09:10:25	shachaf	Parametricity is certainly related to naturality, though.
2013-07-29 09:10:28	shachaf	Ezku: Yes.
2013-07-29 09:10:46	PatrickRobotham	Ezku: You shouldn't view endomorphisms as a way of putting two things together though.
2013-07-29 09:10:53	PatrickRobotham	Composition does that.
2013-07-29 09:10:55	-->	kazimir42 (~kazimir42@gateway/tor-sasl/kazimir42) has joined #haskell
2013-07-29 09:11:16	<--	ozataman (~ozataman@212.156.65.2) has quit (Ping timeout: 256 seconds)
